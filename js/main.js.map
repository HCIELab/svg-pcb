{
  "version": 3,
  "sources": ["../../build/_snowpack/pkg/lit-html.js", "../../build/js/view.js", "../../build/js/neil-components-names.js", "../../build/js/events/download.js", "../../build/_snowpack/pkg/common/_commonjsHelpers-8c19dec8.js", "../../build/_snowpack/pkg/esprima.js", "../../build/_snowpack/pkg/astring.js", "../../build/js/events/addTranslateHandle.js", "../../build/js/events/addVerticalBarDrag.js", "../../build/js/events/addImgPanZoom.js", "../../build/js/events/addDropUpload.js", "../../build/js/events/addSelectBox.js", "../../build/js/events/addNumberDragging.js", "../../build/js/events.js", "../../build/js/Turtle.js", "../../build/js/pcb_helpers.js", "../../build/js/pcb.js", "../../build/js/s-expression-parser.js", "../../build/js/ki_cad_parser.js", "../../build/js/dispatch.js", "../../build/js/main.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar t;const i=globalThis.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=`lit$${(Math.random()+\"\").slice(9)}$`,o=\"?\"+e,n=`<${o}>`,l=document,h=(t=\"\")=>l.createComment(t),r=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,d=Array.isArray,u=t=>{var i;return d(t)||\"function\"==typeof(null===(i=t)||void 0===i?void 0:i[Symbol.iterator])},c=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,a=/>/g,f=/>|[ \t\\n\f\\r](?:([^\\s\"'>=/]+)([ \t\\n\f\\r]*=[ \t\\n\f\\r]*(?:[^ \t\\n\f\\r\"'`<>=]|(\"|')|))|$)/g,_=/'/g,m=/\"/g,g=/^(?:script|style|textarea)$/i,$=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),p=$(1),y=$(2),b=Symbol.for(\"lit-noChange\"),T=Symbol.for(\"lit-nothing\"),x=new WeakMap,w=(t,i,s)=>{var e,o;const n=null!==(e=null==s?void 0:s.renderBefore)&&void 0!==e?e:i;let l=n._$litPart$;if(void 0===l){const t=null!==(o=null==s?void 0:s.renderBefore)&&void 0!==o?o:null;n._$litPart$=l=new N(i.insertBefore(h(),t),t,void 0,null!=s?s:{});}return l._$AI(t),l},A=l.createTreeWalker(l,129,null,!1),C=(t,i)=>{const o=t.length-1,l=[];let h,r=2===i?\"<svg>\":\"\",d=c;for(let i=0;i<o;i++){const s=t[i];let o,u,$=-1,p=0;for(;p<s.length&&(d.lastIndex=p,u=d.exec(s),null!==u);)p=d.lastIndex,d===c?\"!--\"===u[1]?d=v:void 0!==u[1]?d=a:void 0!==u[2]?(g.test(u[2])&&(h=RegExp(\"</\"+u[2],\"g\")),d=f):void 0!==u[3]&&(d=f):d===f?\">\"===u[0]?(d=null!=h?h:c,$=-1):void 0===u[1]?$=-2:($=d.lastIndex-u[2].length,o=u[1],d=void 0===u[3]?f:'\"'===u[3]?m:_):d===m||d===_?d=f:d===v||d===a?d=c:(d=f,h=void 0);const y=d===f&&t[i+1].startsWith(\"/>\")?\" \":\"\";r+=d===c?s+n:$>=0?(l.push(o),s.slice(0,$)+\"$lit$\"+s.slice($)+e+y):s+e+(-2===$?(l.push(void 0),i):y);}const u=r+(t[o]||\"<?>\")+(2===i?\"</svg>\":\"\");return [void 0!==s?s.createHTML(u):u,l]};class P{constructor({strings:t,_$litType$:s},n){let l;this.parts=[];let r=0,d=0;const u=t.length-1,c=this.parts,[v,a]=C(t,s);if(this.el=P.createElement(v,n),A.currentNode=this.el.content,2===s){const t=this.el.content,i=t.firstChild;i.remove(),t.append(...i.childNodes);}for(;null!==(l=A.nextNode())&&c.length<u;){if(1===l.nodeType){if(l.hasAttributes()){const t=[];for(const i of l.getAttributeNames())if(i.endsWith(\"$lit$\")||i.startsWith(e)){const s=a[d++];if(t.push(i),void 0!==s){const t=l.getAttribute(s.toLowerCase()+\"$lit$\").split(e),i=/([.?@])?(.*)/.exec(s);c.push({type:1,index:r,name:i[2],strings:t,ctor:\".\"===i[1]?M:\"?\"===i[1]?k:\"@\"===i[1]?H:S});}else c.push({type:6,index:r});}for(const i of t)l.removeAttribute(i);}if(g.test(l.tagName)){const t=l.textContent.split(e),s=t.length-1;if(s>0){l.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)l.append(t[i],h()),A.nextNode(),c.push({type:2,index:++r});l.append(t[s],h());}}}else if(8===l.nodeType)if(l.data===o)c.push({type:2,index:r});else {let t=-1;for(;-1!==(t=l.data.indexOf(e,t+1));)c.push({type:7,index:r}),t+=e.length-1;}r++;}}static createElement(t,i){const s=l.createElement(\"template\");return s.innerHTML=t,s}}function V(t,i,s=t,e){var o,n,l,h;if(i===b)return i;let d=void 0!==e?null===(o=s._$Cl)||void 0===o?void 0:o[e]:s._$Cu;const u=r(i)?void 0:i._$litDirective$;return (null==d?void 0:d.constructor)!==u&&(null===(n=null==d?void 0:d._$AO)||void 0===n||n.call(d,!1),void 0===u?d=void 0:(d=new u(t),d._$AT(t,s,e)),void 0!==e?(null!==(l=(h=s)._$Cl)&&void 0!==l?l:h._$Cl=[])[e]=d:s._$Cu=d),void 0!==d&&(i=V(t,d._$AS(t,i.values),d,e)),i}class E{constructor(t,i){this.v=[],this._$AN=void 0,this._$AD=t,this._$AM=i;}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}p(t){var i;const{el:{content:s},parts:e}=this._$AD,o=(null!==(i=null==t?void 0:t.creationScope)&&void 0!==i?i:l).importNode(s,!0);A.currentNode=o;let n=A.nextNode(),h=0,r=0,d=e[0];for(;void 0!==d;){if(h===d.index){let i;2===d.type?i=new N(n,n.nextSibling,this,t):1===d.type?i=new d.ctor(n,d.name,d.strings,this,t):6===d.type&&(i=new I(n,this,t)),this.v.push(i),d=e[++r];}h!==(null==d?void 0:d.index)&&(n=A.nextNode(),h++);}return o}m(t){let i=0;for(const s of this.v)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++;}}class N{constructor(t,i,s,e){var o;this.type=2,this._$AH=T,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cg=null===(o=null==e?void 0:e.isConnected)||void 0===o||o;}get _$AU(){var t,i;return null!==(i=null===(t=this._$AM)||void 0===t?void 0:t._$AU)&&void 0!==i?i:this._$Cg}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=V(this,t,i),r(t)?t===T||null==t||\"\"===t?(this._$AH!==T&&this._$AR(),this._$AH=T):t!==this._$AH&&t!==b&&this.$(t):void 0!==t._$litType$?this.T(t):void 0!==t.nodeType?this.S(t):u(t)?this.M(t):this.$(t);}A(t,i=this._$AB){return this._$AA.parentNode.insertBefore(t,i)}S(t){this._$AH!==t&&(this._$AR(),this._$AH=this.A(t));}$(t){this._$AH!==T&&r(this._$AH)?this._$AA.nextSibling.data=t:this.S(l.createTextNode(t)),this._$AH=t;}T(t){var i;const{values:s,_$litType$:e}=t,o=\"number\"==typeof e?this._$AC(t):(void 0===e.el&&(e.el=P.createElement(e.h,this.options)),e);if((null===(i=this._$AH)||void 0===i?void 0:i._$AD)===o)this._$AH.m(s);else {const t=new E(o,this),i=t.p(this.options);t.m(s),this.S(i),this._$AH=t;}}_$AC(t){let i=x.get(t.strings);return void 0===i&&x.set(t.strings,i=new P(t)),i}M(t){d(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const o of t)e===i.length?i.push(s=new N(this.A(h()),this.A(h()),this,this.options)):s=i[e],s._$AI(o),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e);}_$AR(t=this._$AA.nextSibling,i){var s;for(null===(s=this._$AP)||void 0===s||s.call(this,!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i;}}setConnected(t){var i;void 0===this._$AM&&(this._$Cg=t,null===(i=this._$AP)||void 0===i||i.call(this,t));}}class S{constructor(t,i,s,e,o){this.type=1,this._$AH=T,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=o,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=T;}get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}_$AI(t,i=this,s,e){const o=this.strings;let n=!1;if(void 0===o)t=V(this,t,i,0),n=!r(t)||t!==this._$AH&&t!==b,n&&(this._$AH=t);else {const e=t;let l,h;for(t=o[0],l=0;l<o.length-1;l++)h=V(this,e[s+l],i,l),h===b&&(h=this._$AH[l]),n||(n=!r(h)||h!==this._$AH[l]),h===T?t=T:t!==T&&(t+=(null!=h?h:\"\")+o[l+1]),this._$AH[l]=h;}n&&!e&&this.k(t);}k(t){t===T?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=t?t:\"\");}}class M extends S{constructor(){super(...arguments),this.type=3;}k(t){this.element[this.name]=t===T?void 0:t;}}class k extends S{constructor(){super(...arguments),this.type=4;}k(t){t&&t!==T?this.element.setAttribute(this.name,\"\"):this.element.removeAttribute(this.name);}}class H extends S{constructor(t,i,s,e,o){super(t,i,s,e,o),this.type=5;}_$AI(t,i=this){var s;if((t=null!==(s=V(this,t,i,0))&&void 0!==s?s:T)===b)return;const e=this._$AH,o=t===T&&e!==T||t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive,n=t!==T&&(e===T||o);o&&this.element.removeEventListener(this.name,this,e),n&&this.element.addEventListener(this.name,this,t),this._$AH=t;}handleEvent(t){var i,s;\"function\"==typeof this._$AH?this._$AH.call(null!==(s=null===(i=this.options)||void 0===i?void 0:i.host)&&void 0!==s?s:this.element,t):this._$AH.handleEvent(t);}}class I{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s;}get _$AU(){return this._$AM._$AU}_$AI(t){V(this,t);}}const R=window.litHtmlPolyfillSupport;null==R||R(P,N),(null!==(t=globalThis.litHtmlVersions)&&void 0!==t?t:globalThis.litHtmlVersions=[]).push(\"2.0.1\");\n\nexport { p as html, w as render, y as svg };\n", "import { html, svg } from \"../_snowpack/pkg/lit-html.js\";\nimport { Turtle } from \"https://leomcelroy.com/gram-js/exports.js\";\nimport \"https://leomcelroy.com/widgets/code-mirror.js\";\nimport { files } from \"./neil-components-names.js\";\nimport { downloadSVG, downloadText } from \"./events/download.js\"\n\nconst drawImportItems = (files) => files.map(x => x.slice(10)).map( x => html`\n\t<div class=\"import-item\" @mousedown=${async (e) => {\n\t\tconst res = await fetch(`neil-components/${x}`);\n\t\tconst text = await res.text();\n\t\tdispatch(\"ADD_IMPORT\", { text, name: e.target.innerText.split(\"/\")[1].split(\".\")[0] });\n\t}}>${x}</div>\n`)\n\nexport function view(state) {\n\treturn html`\n\t\t<div class=\"top-menu\">\n\t\t\t<div class=\"left\">\n\t\t\t\t<button\n\t\t\t\t\t@click=${() => dispatch(\"RUN\", { save: true })}>\n\t\t\t\t\trun (shift + enter)\n\t\t\t\t</button>\n\t\t\t\t<div class=\"seperator\"></div>\n\t\t\t\t<div class=\"dropdown-container\">\n\t\t\t\t \timport\n\t\t\t\t \t<div class=\"dropdown-content\">\n\t\t\t\t \t\t${drawImportItems(files)}\n\t\t\t\t \t</div>\n\t\t\t\t </div>\n\t\t\t\t <div class=\"seperator\"></div>\n\t\t\t\t <div class=\"dropdown-container\">\n\t\t\t\t\tdownload\n\t\t\t\t\t<div class=\"dropdown-content dropdown-content\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t@click=${() => downloadSVG(state)}>\n\t\t\t\t\t\t\tsvg\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t@click=${() => downloadText(\"anon.js\", state.codemirror.view.state.doc.toString())}>\n\t\t\t\t\t\t\tjs\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"seperator\"></div>\n\t\t\t\t<div class=\"dropdown-container\">\n\t\t\t\t\tdrawing\n\t\t\t\t\t<div class=\"dropdown-content dropdown-content\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"center-button\"\n\t\t\t\t\t\t\t@click=${() => {\n    \t\t\t\t\t\t\tstate.panZoomParams.setScaleXY(state.limits);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tcenter\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>handles</span>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked=${state.viewHandles}\n\t\t\t\t\t\t\t\t@change=${(e) => {\n\t\t\t\t\t\t\t\t\tstate.viewHandles = e.target.checked;\n\t\t\t\t\t\t\t\t\tdispatch(\"RENDER\");\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclass=\"handles-checkbox\">\n\t\t\t\t\t\t\t</input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>grid</span>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked=${state.grid}\n\t\t\t\t\t\t\t\t@change=${(e) => {\n\t\t\t\t\t\t\t\t\tstate.grid = e.target.checked;\n\t\t\t\t\t\t\t\t\tdispatch(\"RENDER\");\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>grid size:</span>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tstep=\"0.005\"\n\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\tvalue=${state.gridSize}\n\t\t\t\t\t\t\t\t@change=${e => {\n\t\t\t\t\t\t\t\t\tstate.gridSize = Number(e.target.value);\n\t\t\t\t\t\t\t\t\tdispatch(\"RENDER\");\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t</input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<code-mirror id=\"code-editor\"></code-mirror>\n\t\t${svgViewer(state)}\n\t\t<div id=\"vertical-bar\"></div>\n\t`\n}\n\n// neil-components/connectors/ESC.json\n\nconst mapColors = arr => arr.length === 4\n\t? `rgba(${arr.map((n,i) => i < 3 ? Math.round(n*255) : n).join(\",\")})`\n\t: \"rgba(255, 255, 255, 1)\"\n\nconst drawPath = (d, color) => svg`\n\t<path\n\t\td=\"${d}\"\n\t\tfill-rule=\"nonzero\"\n\t\tfill=\"${typeof color === \"string\" ? color : mapColors(color)}\"/>\n`\n\nconst ptsToD = pts => pts.reduce((acc, cur, i) => `${acc} ${i === 0 ? \"M\" : \"L\"} ${cur.join(\",\")}`, \"\");\n\n\nconst drawGrid = (corners, gridSize) => {\n\n\tconst middX = [\n\t\t[corners.lt.x, (corners.lt.y + corners.lb.y)/2],\n\t\t[corners.rt.x, (corners.rt.y + corners.rb.y)/2],\n\t]\n\n\tconst middY = [\n\t\t[(corners.lt.x + corners.rt.x)/2, corners.lt.y],\n\t\t[(corners.lb.x + corners.rb.x)/2, corners.lb.y],\n\t]\n\n\tconst originX = [\n\t\t[corners.lt.x, 0],\n\t\t[corners.rt.x, 0],\n\t]\n\n\tconst originY = [\n\t\t[0, corners.lt.y],\n\t\t[0, corners.lb.y],\n\t]\n\n\tconst xLimits = [corners.lt.x, corners.rt.x];\n\tconst xRange = Math.abs(xLimits[1] - xLimits[0]);\n\tconst yLimits = [corners.lb.y, corners.lt.y];\n\tconst yRange = Math.abs(yLimits[1] - yLimits[0]);\n\n\tfunction getBaseLog(x, y) {\n\t  return Math.log(y) / Math.log(x);\n\t}\n\n\tconst order = Math.round(getBaseLog(5, Math.max(xRange, yRange)));\n\t// const stepSize = (5**(order-1))/5;\n\tconst stepSize = gridSize;\n\n\tconst getMarkVals = (limits, stepSize) => {\n\t\tlet marks = [];\n\t\tlet current = stepSize*Math.ceil(limits[0]/stepSize) - stepSize;\n\t\twhile (current < limits[1] + stepSize) {\n\t\t\tcurrent = current + stepSize;\n\t\t\tmarks.push(current);\n\t\t}\n\n\t\treturn marks\n\t}\n\n\tconst valToLineH = val => [\n\t\t[corners.lt.x, val],\n\t\t[corners.rt.x, val]\n\t];\n\n\tconst valToLineV = val => [\n\t\t[val, corners.lt.y],\n\t\t[val, corners.lb.y],\n\t];\n\n\tconst lineToMark = width => line => svg`<path stroke=\"black\" vector-effect=\"non-scaling-stroke\" stroke-width=\"${width}\" d=\"${ptsToD(line)}\"/>`\n\n\tconst hMarks = getMarkVals(yLimits, stepSize).map(valToLineH).map(lineToMark(0.2))\n\tconst vMarks = getMarkVals(xLimits, stepSize).map(valToLineV).map(lineToMark(0.2))\n\n\t// console.log(getMarkVals(yLimits, stepSize));\n\n\treturn svg`\n\t\t<g class=\"grid no-download\">\n\t\t\t${lineToMark(.6)(originX)}\n\t\t\t${lineToMark(.6)(originY)}\n\t\t\t${hMarks}\n\t\t\t${vMarks}\n\t\t</g>\n\t`\n}\n\nconst svgViewer = (state) => {\n\tconst shapes = state.shapes.map(p => Array.isArray(p.d)\n\t\t? p.d.map(d => drawPath(d, p.color))\n\t\t: drawPath(p.d, p.color)\n\t).flat();\n\n\tconst corners = state.panZoomParams?.corners();\n\n\n\treturn svg`\n\t\t<svg id=\"viewer\" style=\"transform: scale(1, -1);\">\n\t\t\t<g class=\"transform-group\">\n\t\t\t      ${ state.selectBox.start && state.selectBox.end ? svg`\n\t\t\t      \t<path\n\t\t\t\t        class=\"selectBox\"\n\t\t\t\t        d=\"\n\t\t\t\t          M ${state.selectBox.start.x} ${state.selectBox.start.y}\n\t\t\t\t          L ${state.selectBox.end.x} ${state.selectBox.start.y}\n\t\t\t\t          L ${state.selectBox.end.x} ${state.selectBox.end.y}\n\t\t\t\t          L ${state.selectBox.start.x} ${state.selectBox.end.y}\n\t\t\t\t        \"\n\t\t\t      \t/>` : \"\"\n\t\t\t      }\n\t\t\t    <g class=\"shapes\">${shapes}</g>\n\t\t\t\t${state.panZoomParams && state.gridSize > 0 && state.grid ? drawGrid(state.panZoomParams.corners(), state.gridSize) : \"\"}\n\t\t\t\t<rect\n\t\t\t\t\tclass=\"limits no-download\"\n\t\t\t\t\twidth=\"${state.limits.x[1] - state.limits.x[0]}\"\n\t\t\t\t\theight=\"${state.limits.y[1] - state.limits.y[0]}\"\n\t\t\t\t\tstroke=\"black\" fill=\"transparent\" stroke-width=\"1\"\n\t\t\t\t\tvector-effect=\"non-scaling-stroke\"\n\t\t\t\t\ttransform=\"translate(${state.limits.x[0]}, ${state.limits.y[0]})\"/>\n\t\t\t\t${state.storedPCB && state.viewHandles ? drawHandles(state.storedPCB) : \"\"}\n\t\t\t</g>\n\n\t\t</svg>\n\t`\n}\n\n// <circle class=\"no-download\" cx=\"0\" cy=\"0\" r=\"0.1\" vector-effect=\"non-scaling-stroke\"/>\n\n\nconst translateHandleSize = 0.02;\nconst drawHandles = (pcb) => pcb.components.map((comp, i) => svg`\n\t<g class=\"no-download translate-handle\">\n\t\t<path\n\t        d=\"${new Turtle()\n\t        \t.arc(361, translateHandleSize)\n\t        \t.translate([comp.posX, comp.posY-translateHandleSize])\n\t        \t.offset(0.003)\n\t        \t.getPathData()}\"\n\t  \t/>\n\t  \t<circle\n\t  \t\tclass=\"translate-handle-trigger\" \n\t\t\tdata-index=${i}\n\t  \t\tstroke=\"none\"\n\t  \t\tfill=\"#00000000\"\n\t\t \tcx=\"${comp.posX}\"\n\t\t \tcy=\"${comp.posY}\"\n\t\t \tr=\"${translateHandleSize}\"\n\t\t \t/>\n\t</g>\n`)\n", "export const files = [\"./library/connectors/ESP8266_12E.json\",\"./library/connectors/header_FTDI.json\",\"./library/connectors/power_65mm.json\",\"./library/connectors/ESP32_CAM.json\",\"./library/connectors/USB_A_plug.json\",\"./library/connectors/header_i0.json\",\"./library/connectors/header_serial_reverse.json\",\"./library/connectors/header_4.json\",\"./library/connectors/header_signal.json\",\"./library/connectors/MTA_i0.json\",\"./library/connectors/HM11.json\",\"./library/connectors/header_MFRC522.json\",\"./library/connectors/header_serial_reverse_5V.json\",\"./library/connectors/USB_mini_B.json\",\"./library/connectors/ESC.json\",\"./library/connectors/MTA_PS2.json\",\"./library/connectors/header_APA.json\",\"./library/connectors/MTA_ICP.json\",\"./library/connectors/stereo_2_5mm.json\",\"./library/connectors/header_VL53L1X_3415.json\",\"./library/connectors/Molex_serial.json\",\"./library/connectors/header_SWD_4_1.json\",\"./library/connectors/ESP_01.json\",\"./library/connectors/HCSR04.json\",\"./library/connectors/header_SWD_4_05.json\",\"./library/connectors/ESP32_WROOM.json\",\"./library/connectors/header_serial.json\",\"./library/connectors/header_PDI.json\",\"./library/connectors/I2C4x1v.json\",\"./library/connectors/header_power.json\",\"./library/connectors/MTA_serial.json\",\"./library/connectors/header_LSM6DS33_2736.json\",\"./library/connectors/MTA_2.json\",\"./library/connectors/MTA_3.json\",\"./library/connectors/header_LCD.json\",\"./library/connectors/screw_terminal_2.json\",\"./library/connectors/HCSR501.json\",\"./library/connectors/screw_terminal_i0.json\",\"./library/connectors/header_unipolar_stepper.json\",\"./library/connectors/screw_terminal_power.json\",\"./library/connectors/header_nRF24L01.json\",\"./library/connectors/header_serial_reverse_3V3.json\",\"./library/connectors/MTA_power.json\",\"./library/connectors/MTA_4.json\",\"./library/connectors/RCWL0516.json\",\"./library/connectors/ESP_WROOM_02D.json\",\"./library/connectors/RN4871.json\",\"./library/connectors/header_I2C.json\",\"./library/connectors/header_SWD.json\",\"./library/connectors/header_servo.json\",\"./library/connectors/microSD.json\",\"./library/connectors/header_4H.json\",\"./library/connectors/header_UPDI.json\",\"./library/connectors/I2C4x1i.json\",\"./library/connectors/I2C4x1h.json\",\"./library/connectors/header_ISP.json\",\"./library/connectors/header_NEO_6M.json\",\"./library/connectors/MTA_5.json\",\"./library/connectors/header_6.json\",\"./library/connectors/header_UPDI_reverse.json\",\"./library/connectors/header_bus.json\",\"./library/connectors/TFT8x1v.json\",\"./library/connectors/header_2H.json\",\"./library/connectors/header_ATP.json\",\"./library/switches/button_6mm.json\",\"./library/switches/slide_switch.json\",\"./library/diodes_transistors_regulators_sensors/D_1206.json\",\"./library/diodes_transistors_regulators_sensors/mic_SPM1437.json\",\"./library/diodes_transistors_regulators_sensors/LED_1206.json\",\"./library/diodes_transistors_regulators_sensors/NMOSFET_TO252AA.json\",\"./library/diodes_transistors_regulators_sensors/regulator_SOT223.json\",\"./library/diodes_transistors_regulators_sensors/regulator_SOT23.json\",\"./library/diodes_transistors_regulators_sensors/VL53L1X.json\",\"./library/diodes_transistors_regulators_sensors/H_bridge_SM8.json\",\"./library/diodes_transistors_regulators_sensors/SPG08P4HM4H.json\",\"./library/diodes_transistors_regulators_sensors/Hall_SOT23.json\",\"./library/diodes_transistors_regulators_sensors/VEML6040.json\",\"./library/diodes_transistors_regulators_sensors/phototransistor_1206.json\",\"./library/diodes_transistors_regulators_sensors/LED_RGB.json\",\"./library/diodes_transistors_regulators_sensors/accel_MXD6235M.json\",\"./library/diodes_transistors_regulators_sensors/ADXL343.json\",\"./library/diodes_transistors_regulators_sensors/mic_SPU0414HR5H.json\",\"./library/diodes_transistors_regulators_sensors/D_SOD_123.json\",\"./library/diodes_transistors_regulators_sensors/LED_3014_1100.json\",\"./library/diodes_transistors_regulators_sensors/A4953_SOICN.json\",\"./library/diodes_transistors_regulators_sensors/NMOSFET_SOT23.json\",\"./library/diodes_transistors_regulators_sensors/phototransistor_PLCC2.json\",\"./library/diodes_transistors_regulators_sensors/PMOSFET_SOT23.json\",\"./library/diodes_transistors_regulators_sensors/DRV8428_HTSSOP.json\",\"./library/diodes_transistors_regulators_sensors/CMM4030D261I2STR.json\",\"./library/crystals_and_resonators/XTAL_CSM_7.json\",\"./library/crystals_and_resonators/XTAL_NX5032GA.json\",\"./library/crystals_and_resonators/XTAL_EFOBM.json\",\"./library/discretes/R_0402.json\",\"./library/discretes/ST4EB.json\",\"./library/discretes/C_1206.json\",\"./library/discretes/R_1206.json\",\"./library/discretes/choke.json\",\"./library/discretes/L_1210.json\",\"./library/discretes/C_FND.json\",\"./library/ICs/CBA.json\",\"./library/ICs/SAMD21E.json\",\"./library/ICs/AVRDB28.json\",\"./library/ICs/FT230XS.json\",\"./library/ICs/ATtiny1614.json\",\"./library/ICs/fab.json\",\"./library/ICs/ATtiny44_SOICN.json\",\"./library/ICs/ATxmegaE5_TQFP.json\",\"./library/ICs/op_amp_SOICN.json\",\"./library/ICs/ATtiny45_SOIC.json\",\"./library/ICs/ATmega88_TQFP.json\",\"./library/ICs/SAMD11D.json\",\"./library/ICs/TRC102.json\",\"./library/ICs/ATtiny412.json\",\"./library/ICs/ATmega644_TQFP.json\",\"./library/ICs/op_amp_SOT23_5.json\",\"./library/ICs/SAMD11C.json\",\"./library/ICs/ATtiny3216.json\"]", "export function downloadSVG(state) {\n\n    const serializer = new XMLSerializer();\n    const svg = document.querySelector(\"svg\").cloneNode(true);\n    const toRemove = svg.querySelectorAll(\".no-download\");\n    for (const item of toRemove) {\n      item.remove();\n    }\n\n    const tg = svg.querySelector(\".transform-group\");\n    tg.style.transformOrigin = \"\";\n    tg.style.transform = \"\";\n    // tg.style.transformOrigin = `${0}px ${0}px`;\n    // tg.style.transform = \"translate(\" + 0 + \"px, \" + 0 + \"px) scale(\" + 1 + \")\";\n\n    const width = (state.limits.x[1] - state.limits.x[0]);\n    const height = (state.limits.y[1] - state.limits.y[0]);\n    svg.setAttribute(\"width\", `${width*state.mm_per_unit}mm`);\n    svg.setAttribute(\"height\", `${height*state.mm_per_unit}mm`);\n    svg.setAttribute(\"viewBox\", `${state.limits.x[0]} ${state.limits.y[0]} ${width} ${height}`);\n    svg.setAttributeNS(\n      \"http://www.w3.org/2000/xmlns/\",\n      \"xmlns:xlink\",\n      \"http://www.w3.org/1999/xlink\"\n    );\n\n    const source = serializer.serializeToString(svg);\n    const svgUrl = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\n\n    // make download link\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = svgUrl;\n    downloadLink.download = `download.svg`;\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n\n    // clean up\n    document.body.removeChild(downloadLink);\n  }\n\nexport function downloadText(filename, text) {\n  const blob = new Blob([text], { type: \"text/plain\" });\n\n  var link = document.createElement(\"a\"); // Or maybe get it from the current document\n  link.href = URL.createObjectURL(blob);\n  link.download = `${filename}`;\n  link.click();\n  URL.revokeObjectURL(link);\n}", "var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nexport { commonjsGlobal as a, createCommonjsModule as c, getDefaultExportFromCjs as g };\n", "import { g as getDefaultExportFromCjs, c as createCommonjsModule, a as commonjsGlobal } from './common/_commonjsHelpers-8c19dec8.js';\n\nvar esprima = createCommonjsModule(function (module, exports) {\n(function webpackUniversalModuleDefinition(root, factory) {\n/* istanbul ignore next */\n\tmodule.exports = factory();\n})(commonjsGlobal, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/* istanbul ignore if */\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\t/*\n\t  Copyright JS Foundation and other contributors, https://js.foundation/\n\n\t  Redistribution and use in source and binary forms, with or without\n\t  modification, are permitted provided that the following conditions are met:\n\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\t    * Redistributions in binary form must reproduce the above copyright\n\t      notice, this list of conditions and the following disclaimer in the\n\t      documentation and/or other materials provided with the distribution.\n\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar comment_handler_1 = __webpack_require__(1);\n\tvar jsx_parser_1 = __webpack_require__(3);\n\tvar parser_1 = __webpack_require__(8);\n\tvar tokenizer_1 = __webpack_require__(15);\n\tfunction parse(code, options, delegate) {\n\t    var commentHandler = null;\n\t    var proxyDelegate = function (node, metadata) {\n\t        if (delegate) {\n\t            delegate(node, metadata);\n\t        }\n\t        if (commentHandler) {\n\t            commentHandler.visit(node, metadata);\n\t        }\n\t    };\n\t    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;\n\t    var collectComment = false;\n\t    if (options) {\n\t        collectComment = (typeof options.comment === 'boolean' && options.comment);\n\t        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);\n\t        if (collectComment || attachComment) {\n\t            commentHandler = new comment_handler_1.CommentHandler();\n\t            commentHandler.attach = attachComment;\n\t            options.comment = true;\n\t            parserDelegate = proxyDelegate;\n\t        }\n\t    }\n\t    var isModule = false;\n\t    if (options && typeof options.sourceType === 'string') {\n\t        isModule = (options.sourceType === 'module');\n\t    }\n\t    var parser;\n\t    if (options && typeof options.jsx === 'boolean' && options.jsx) {\n\t        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);\n\t    }\n\t    else {\n\t        parser = new parser_1.Parser(code, options, parserDelegate);\n\t    }\n\t    var program = isModule ? parser.parseModule() : parser.parseScript();\n\t    var ast = program;\n\t    if (collectComment && commentHandler) {\n\t        ast.comments = commentHandler.comments;\n\t    }\n\t    if (parser.config.tokens) {\n\t        ast.tokens = parser.tokens;\n\t    }\n\t    if (parser.config.tolerant) {\n\t        ast.errors = parser.errorHandler.errors;\n\t    }\n\t    return ast;\n\t}\n\texports.parse = parse;\n\tfunction parseModule(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'module';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseModule = parseModule;\n\tfunction parseScript(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'script';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseScript = parseScript;\n\tfunction tokenize(code, options, delegate) {\n\t    var tokenizer = new tokenizer_1.Tokenizer(code, options);\n\t    var tokens;\n\t    tokens = [];\n\t    try {\n\t        while (true) {\n\t            var token = tokenizer.getNextToken();\n\t            if (!token) {\n\t                break;\n\t            }\n\t            if (delegate) {\n\t                token = delegate(token);\n\t            }\n\t            tokens.push(token);\n\t        }\n\t    }\n\t    catch (e) {\n\t        tokenizer.errorHandler.tolerate(e);\n\t    }\n\t    if (tokenizer.errorHandler.tolerant) {\n\t        tokens.errors = tokenizer.errors();\n\t    }\n\t    return tokens;\n\t}\n\texports.tokenize = tokenize;\n\tvar syntax_1 = __webpack_require__(2);\n\texports.Syntax = syntax_1.Syntax;\n\t// Sync with *.json manifests.\n\texports.version = '4.0.1';\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\tvar CommentHandler = (function () {\n\t    function CommentHandler() {\n\t        this.attach = false;\n\t        this.comments = [];\n\t        this.stack = [];\n\t        this.leading = [];\n\t        this.trailing = [];\n\t    }\n\t    CommentHandler.prototype.insertInnerComments = function (node, metadata) {\n\t        //  innnerComments for properties empty block\n\t        //  `function a() {/** comments **\\/}`\n\t        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {\n\t            var innerComments = [];\n\t            for (var i = this.leading.length - 1; i >= 0; --i) {\n\t                var entry = this.leading[i];\n\t                if (metadata.end.offset >= entry.start) {\n\t                    innerComments.unshift(entry.comment);\n\t                    this.leading.splice(i, 1);\n\t                    this.trailing.splice(i, 1);\n\t                }\n\t            }\n\t            if (innerComments.length) {\n\t                node.innerComments = innerComments;\n\t            }\n\t        }\n\t    };\n\t    CommentHandler.prototype.findTrailingComments = function (metadata) {\n\t        var trailingComments = [];\n\t        if (this.trailing.length > 0) {\n\t            for (var i = this.trailing.length - 1; i >= 0; --i) {\n\t                var entry_1 = this.trailing[i];\n\t                if (entry_1.start >= metadata.end.offset) {\n\t                    trailingComments.unshift(entry_1.comment);\n\t                }\n\t            }\n\t            this.trailing.length = 0;\n\t            return trailingComments;\n\t        }\n\t        var entry = this.stack[this.stack.length - 1];\n\t        if (entry && entry.node.trailingComments) {\n\t            var firstComment = entry.node.trailingComments[0];\n\t            if (firstComment && firstComment.range[0] >= metadata.end.offset) {\n\t                trailingComments = entry.node.trailingComments;\n\t                delete entry.node.trailingComments;\n\t            }\n\t        }\n\t        return trailingComments;\n\t    };\n\t    CommentHandler.prototype.findLeadingComments = function (metadata) {\n\t        var leadingComments = [];\n\t        var target;\n\t        while (this.stack.length > 0) {\n\t            var entry = this.stack[this.stack.length - 1];\n\t            if (entry && entry.start >= metadata.start.offset) {\n\t                target = entry.node;\n\t                this.stack.pop();\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        if (target) {\n\t            var count = target.leadingComments ? target.leadingComments.length : 0;\n\t            for (var i = count - 1; i >= 0; --i) {\n\t                var comment = target.leadingComments[i];\n\t                if (comment.range[1] <= metadata.start.offset) {\n\t                    leadingComments.unshift(comment);\n\t                    target.leadingComments.splice(i, 1);\n\t                }\n\t            }\n\t            if (target.leadingComments && target.leadingComments.length === 0) {\n\t                delete target.leadingComments;\n\t            }\n\t            return leadingComments;\n\t        }\n\t        for (var i = this.leading.length - 1; i >= 0; --i) {\n\t            var entry = this.leading[i];\n\t            if (entry.start <= metadata.start.offset) {\n\t                leadingComments.unshift(entry.comment);\n\t                this.leading.splice(i, 1);\n\t            }\n\t        }\n\t        return leadingComments;\n\t    };\n\t    CommentHandler.prototype.visitNode = function (node, metadata) {\n\t        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {\n\t            return;\n\t        }\n\t        this.insertInnerComments(node, metadata);\n\t        var trailingComments = this.findTrailingComments(metadata);\n\t        var leadingComments = this.findLeadingComments(metadata);\n\t        if (leadingComments.length > 0) {\n\t            node.leadingComments = leadingComments;\n\t        }\n\t        if (trailingComments.length > 0) {\n\t            node.trailingComments = trailingComments;\n\t        }\n\t        this.stack.push({\n\t            node: node,\n\t            start: metadata.start.offset\n\t        });\n\t    };\n\t    CommentHandler.prototype.visitComment = function (node, metadata) {\n\t        var type = (node.type[0] === 'L') ? 'Line' : 'Block';\n\t        var comment = {\n\t            type: type,\n\t            value: node.value\n\t        };\n\t        if (node.range) {\n\t            comment.range = node.range;\n\t        }\n\t        if (node.loc) {\n\t            comment.loc = node.loc;\n\t        }\n\t        this.comments.push(comment);\n\t        if (this.attach) {\n\t            var entry = {\n\t                comment: {\n\t                    type: type,\n\t                    value: node.value,\n\t                    range: [metadata.start.offset, metadata.end.offset]\n\t                },\n\t                start: metadata.start.offset\n\t            };\n\t            if (node.loc) {\n\t                entry.comment.loc = node.loc;\n\t            }\n\t            node.type = type;\n\t            this.leading.push(entry);\n\t            this.trailing.push(entry);\n\t        }\n\t    };\n\t    CommentHandler.prototype.visit = function (node, metadata) {\n\t        if (node.type === 'LineComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (node.type === 'BlockComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (this.attach) {\n\t            this.visitNode(node, metadata);\n\t        }\n\t    };\n\t    return CommentHandler;\n\t}());\n\texports.CommentHandler = CommentHandler;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.Syntax = {\n\t    AssignmentExpression: 'AssignmentExpression',\n\t    AssignmentPattern: 'AssignmentPattern',\n\t    ArrayExpression: 'ArrayExpression',\n\t    ArrayPattern: 'ArrayPattern',\n\t    ArrowFunctionExpression: 'ArrowFunctionExpression',\n\t    AwaitExpression: 'AwaitExpression',\n\t    BlockStatement: 'BlockStatement',\n\t    BinaryExpression: 'BinaryExpression',\n\t    BreakStatement: 'BreakStatement',\n\t    CallExpression: 'CallExpression',\n\t    CatchClause: 'CatchClause',\n\t    ClassBody: 'ClassBody',\n\t    ClassDeclaration: 'ClassDeclaration',\n\t    ClassExpression: 'ClassExpression',\n\t    ConditionalExpression: 'ConditionalExpression',\n\t    ContinueStatement: 'ContinueStatement',\n\t    DoWhileStatement: 'DoWhileStatement',\n\t    DebuggerStatement: 'DebuggerStatement',\n\t    EmptyStatement: 'EmptyStatement',\n\t    ExportAllDeclaration: 'ExportAllDeclaration',\n\t    ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n\t    ExportNamedDeclaration: 'ExportNamedDeclaration',\n\t    ExportSpecifier: 'ExportSpecifier',\n\t    ExpressionStatement: 'ExpressionStatement',\n\t    ForStatement: 'ForStatement',\n\t    ForOfStatement: 'ForOfStatement',\n\t    ForInStatement: 'ForInStatement',\n\t    FunctionDeclaration: 'FunctionDeclaration',\n\t    FunctionExpression: 'FunctionExpression',\n\t    Identifier: 'Identifier',\n\t    IfStatement: 'IfStatement',\n\t    ImportDeclaration: 'ImportDeclaration',\n\t    ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n\t    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n\t    ImportSpecifier: 'ImportSpecifier',\n\t    Literal: 'Literal',\n\t    LabeledStatement: 'LabeledStatement',\n\t    LogicalExpression: 'LogicalExpression',\n\t    MemberExpression: 'MemberExpression',\n\t    MetaProperty: 'MetaProperty',\n\t    MethodDefinition: 'MethodDefinition',\n\t    NewExpression: 'NewExpression',\n\t    ObjectExpression: 'ObjectExpression',\n\t    ObjectPattern: 'ObjectPattern',\n\t    Program: 'Program',\n\t    Property: 'Property',\n\t    RestElement: 'RestElement',\n\t    ReturnStatement: 'ReturnStatement',\n\t    SequenceExpression: 'SequenceExpression',\n\t    SpreadElement: 'SpreadElement',\n\t    Super: 'Super',\n\t    SwitchCase: 'SwitchCase',\n\t    SwitchStatement: 'SwitchStatement',\n\t    TaggedTemplateExpression: 'TaggedTemplateExpression',\n\t    TemplateElement: 'TemplateElement',\n\t    TemplateLiteral: 'TemplateLiteral',\n\t    ThisExpression: 'ThisExpression',\n\t    ThrowStatement: 'ThrowStatement',\n\t    TryStatement: 'TryStatement',\n\t    UnaryExpression: 'UnaryExpression',\n\t    UpdateExpression: 'UpdateExpression',\n\t    VariableDeclaration: 'VariableDeclaration',\n\t    VariableDeclarator: 'VariableDeclarator',\n\t    WhileStatement: 'WhileStatement',\n\t    WithStatement: 'WithStatement',\n\t    YieldExpression: 'YieldExpression'\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n/* istanbul ignore next */\n\tvar __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar character_1 = __webpack_require__(4);\n\tvar JSXNode = __webpack_require__(5);\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\tvar Node = __webpack_require__(7);\n\tvar parser_1 = __webpack_require__(8);\n\tvar token_1 = __webpack_require__(13);\n\tvar xhtml_entities_1 = __webpack_require__(14);\n\ttoken_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';\n\ttoken_1.TokenName[101 /* Text */] = 'JSXText';\n\t// Fully qualified element name, e.g. <svg:path> returns \"svg:path\"\n\tfunction getQualifiedElementName(elementName) {\n\t    var qualifiedName;\n\t    switch (elementName.type) {\n\t        case jsx_syntax_1.JSXSyntax.JSXIdentifier:\n\t            var id = elementName;\n\t            qualifiedName = id.name;\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:\n\t            var ns = elementName;\n\t            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +\n\t                getQualifiedElementName(ns.name);\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:\n\t            var expr = elementName;\n\t            qualifiedName = getQualifiedElementName(expr.object) + '.' +\n\t                getQualifiedElementName(expr.property);\n\t            break;\n\t    }\n\t    return qualifiedName;\n\t}\n\tvar JSXParser = (function (_super) {\n\t    __extends(JSXParser, _super);\n\t    function JSXParser(code, options, delegate) {\n\t        return _super.call(this, code, options, delegate) || this;\n\t    }\n\t    JSXParser.prototype.parsePrimaryExpression = function () {\n\t        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);\n\t    };\n\t    JSXParser.prototype.startJSX = function () {\n\t        // Unwind the scanner before the lookahead token.\n\t        this.scanner.index = this.startMarker.index;\n\t        this.scanner.lineNumber = this.startMarker.line;\n\t        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;\n\t    };\n\t    JSXParser.prototype.finishJSX = function () {\n\t        // Prime the next lookahead.\n\t        this.nextToken();\n\t    };\n\t    JSXParser.prototype.reenterJSX = function () {\n\t        this.startJSX();\n\t        this.expectJSX('}');\n\t        // Pop the closing '}' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t    };\n\t    JSXParser.prototype.createJSXNode = function () {\n\t        this.collectComments();\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.createJSXChildNode = function () {\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.scanXHTMLEntity = function (quote) {\n\t        var result = '&';\n\t        var valid = true;\n\t        var terminated = false;\n\t        var numeric = false;\n\t        var hex = false;\n\t        while (!this.scanner.eof() && valid && !terminated) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === quote) {\n\t                break;\n\t            }\n\t            terminated = (ch === ';');\n\t            result += ch;\n\t            ++this.scanner.index;\n\t            if (!terminated) {\n\t                switch (result.length) {\n\t                    case 2:\n\t                        // e.g. '&#123;'\n\t                        numeric = (ch === '#');\n\t                        break;\n\t                    case 3:\n\t                        if (numeric) {\n\t                            // e.g. '&#x41;'\n\t                            hex = (ch === 'x');\n\t                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));\n\t                            numeric = numeric && !hex;\n\t                        }\n\t                        break;\n\t                    default:\n\t                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));\n\t                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));\n\t                        break;\n\t                }\n\t            }\n\t        }\n\t        if (valid && terminated && result.length > 2) {\n\t            // e.g. '&#x41;' becomes just '#x41'\n\t            var str = result.substr(1, result.length - 2);\n\t            if (numeric && str.length > 1) {\n\t                result = String.fromCharCode(parseInt(str.substr(1), 10));\n\t            }\n\t            else if (hex && str.length > 2) {\n\t                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));\n\t            }\n\t            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {\n\t                result = xhtml_entities_1.XHTMLEntities[str];\n\t            }\n\t        }\n\t        return result;\n\t    };\n\t    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.\n\t    JSXParser.prototype.lexJSX = function () {\n\t        var cp = this.scanner.source.charCodeAt(this.scanner.index);\n\t        // < > / : = { }\n\t        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {\n\t            var value = this.scanner.source[this.scanner.index++];\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index - 1,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // \" '\n\t        if (cp === 34 || cp === 39) {\n\t            var start = this.scanner.index;\n\t            var quote = this.scanner.source[this.scanner.index++];\n\t            var str = '';\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source[this.scanner.index++];\n\t                if (ch === quote) {\n\t                    break;\n\t                }\n\t                else if (ch === '&') {\n\t                    str += this.scanXHTMLEntity(quote);\n\t                }\n\t                else {\n\t                    str += ch;\n\t                }\n\t            }\n\t            return {\n\t                type: 8 /* StringLiteral */,\n\t                value: str,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // ... or .\n\t        if (cp === 46) {\n\t            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);\n\t            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);\n\t            var value = (n1 === 46 && n2 === 46) ? '...' : '.';\n\t            var start = this.scanner.index;\n\t            this.scanner.index += value.length;\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // `\n\t        if (cp === 96) {\n\t            // Only placeholder, since it will be rescanned as a real assignment expression.\n\t            return {\n\t                type: 10 /* Template */,\n\t                value: '',\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // Identifer can not contain backslash (char code 92).\n\t        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {\n\t            var start = this.scanner.index;\n\t            ++this.scanner.index;\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source.charCodeAt(this.scanner.index);\n\t                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {\n\t                    ++this.scanner.index;\n\t                }\n\t                else if (ch === 45) {\n\t                    // Hyphen (char code 45) can be part of an identifier.\n\t                    ++this.scanner.index;\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            var id = this.scanner.source.slice(start, this.scanner.index);\n\t            return {\n\t                type: 100 /* Identifier */,\n\t                value: id,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        return this.scanner.lex();\n\t    };\n\t    JSXParser.prototype.nextJSXToken = function () {\n\t        this.collectComments();\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = this.lexJSX();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        if (this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.nextJSXText = function () {\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var start = this.scanner.index;\n\t        var text = '';\n\t        while (!this.scanner.eof()) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === '{' || ch === '<') {\n\t                break;\n\t            }\n\t            ++this.scanner.index;\n\t            text += ch;\n\t            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.scanner.lineNumber;\n\t                if (ch === '\\r' && this.scanner.source[this.scanner.index] === '\\n') {\n\t                    ++this.scanner.index;\n\t                }\n\t                this.scanner.lineStart = this.scanner.index;\n\t            }\n\t        }\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = {\n\t            type: 101 /* Text */,\n\t            value: text,\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: this.scanner.lineStart,\n\t            start: start,\n\t            end: this.scanner.index\n\t        };\n\t        if ((text.length > 0) && this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.peekJSXToken = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.lexJSX();\n\t        this.scanner.restoreState(state);\n\t        return next;\n\t    };\n\t    // Expect the next JSX token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    JSXParser.prototype.expectJSX = function (value) {\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next JSX token matches the specified punctuator.\n\t    JSXParser.prototype.matchJSX = function (value) {\n\t        var next = this.peekJSXToken();\n\t        return next.type === 7 /* Punctuator */ && next.value === value;\n\t    };\n\t    JSXParser.prototype.parseJSXIdentifier = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 100 /* Identifier */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));\n\t    };\n\t    JSXParser.prototype.parseJSXElementName = function () {\n\t        var node = this.createJSXNode();\n\t        var elementName = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = elementName;\n\t            this.expectJSX(':');\n\t            var name_1 = this.parseJSXIdentifier();\n\t            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));\n\t        }\n\t        else if (this.matchJSX('.')) {\n\t            while (this.matchJSX('.')) {\n\t                var object = elementName;\n\t                this.expectJSX('.');\n\t                var property = this.parseJSXIdentifier();\n\t                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));\n\t            }\n\t        }\n\t        return elementName;\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeName = function () {\n\t        var node = this.createJSXNode();\n\t        var attributeName;\n\t        var identifier = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = identifier;\n\t            this.expectJSX(':');\n\t            var name_2 = this.parseJSXIdentifier();\n\t            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));\n\t        }\n\t        else {\n\t            attributeName = identifier;\n\t        }\n\t        return attributeName;\n\t    };\n\t    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 8 /* StringLiteral */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.finishJSX();\n\t        if (this.match('}')) {\n\t            this.tolerateError('JSX attributes must only be assigned a non-empty expression');\n\t        }\n\t        var expression = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeValue = function () {\n\t        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :\n\t            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();\n\t    };\n\t    JSXParser.prototype.parseJSXNameValueAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var name = this.parseJSXAttributeName();\n\t        var value = null;\n\t        if (this.matchJSX('=')) {\n\t            this.expectJSX('=');\n\t            value = this.parseJSXAttributeValue();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXAttribute(name, value));\n\t    };\n\t    JSXParser.prototype.parseJSXSpreadAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.expectJSX('...');\n\t        this.finishJSX();\n\t        var argument = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributes = function () {\n\t        var attributes = [];\n\t        while (!this.matchJSX('/') && !this.matchJSX('>')) {\n\t            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :\n\t                this.parseJSXNameValueAttribute();\n\t            attributes.push(attribute);\n\t        }\n\t        return attributes;\n\t    };\n\t    JSXParser.prototype.parseJSXOpeningElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXBoundaryElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        if (this.matchJSX('/')) {\n\t            this.expectJSX('/');\n\t            var name_3 = this.parseJSXElementName();\n\t            this.expectJSX('>');\n\t            return this.finalize(node, new JSXNode.JSXClosingElement(name_3));\n\t        }\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXEmptyExpression = function () {\n\t        var node = this.createJSXChildNode();\n\t        this.collectComments();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        return this.finalize(node, new JSXNode.JSXEmptyExpression());\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionContainer = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        var expression;\n\t        if (this.matchJSX('}')) {\n\t            expression = this.parseJSXEmptyExpression();\n\t            this.expectJSX('}');\n\t        }\n\t        else {\n\t            this.finishJSX();\n\t            expression = this.parseAssignmentExpression();\n\t            this.reenterJSX();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXChildren = function () {\n\t        var children = [];\n\t        while (!this.scanner.eof()) {\n\t            var node = this.createJSXChildNode();\n\t            var token = this.nextJSXText();\n\t            if (token.start < token.end) {\n\t                var raw = this.getTokenRaw(token);\n\t                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));\n\t                children.push(child);\n\t            }\n\t            if (this.scanner.source[this.scanner.index] === '{') {\n\t                var container = this.parseJSXExpressionContainer();\n\t                children.push(container);\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return children;\n\t    };\n\t    JSXParser.prototype.parseComplexJSXElement = function (el) {\n\t        var stack = [];\n\t        while (!this.scanner.eof()) {\n\t            el.children = el.children.concat(this.parseJSXChildren());\n\t            var node = this.createJSXChildNode();\n\t            var element = this.parseJSXBoundaryElement();\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {\n\t                var opening = element;\n\t                if (opening.selfClosing) {\n\t                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));\n\t                    el.children.push(child);\n\t                }\n\t                else {\n\t                    stack.push(el);\n\t                    el = { node: node, opening: opening, closing: null, children: [] };\n\t                }\n\t            }\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {\n\t                el.closing = element;\n\t                var open_1 = getQualifiedElementName(el.opening.name);\n\t                var close_1 = getQualifiedElementName(el.closing.name);\n\t                if (open_1 !== close_1) {\n\t                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);\n\t                }\n\t                if (stack.length > 0) {\n\t                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));\n\t                    el = stack[stack.length - 1];\n\t                    el.children.push(child);\n\t                    stack.pop();\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return el;\n\t    };\n\t    JSXParser.prototype.parseJSXElement = function () {\n\t        var node = this.createJSXNode();\n\t        var opening = this.parseJSXOpeningElement();\n\t        var children = [];\n\t        var closing = null;\n\t        if (!opening.selfClosing) {\n\t            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });\n\t            children = el.children;\n\t            closing = el.closing;\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));\n\t    };\n\t    JSXParser.prototype.parseJSXRoot = function () {\n\t        // Pop the opening '<' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t        this.startJSX();\n\t        var element = this.parseJSXElement();\n\t        this.finishJSX();\n\t        return element;\n\t    };\n\t    JSXParser.prototype.isStartOfExpression = function () {\n\t        return _super.prototype.isStartOfExpression.call(this) || this.match('<');\n\t    };\n\t    return JSXParser;\n\t}(parser_1.Parser));\n\texports.JSXParser = JSXParser;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// See also tools/generate-unicode-regex.js.\n\tvar Regex = {\n\t    // Unicode v8.0.0 NonAsciiIdentifierStart:\n\t    NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n\t    // Unicode v8.0.0 NonAsciiIdentifierPart:\n\t    NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n\t};\n\texports.Character = {\n\t    /* tslint:disable:no-bitwise */\n\t    fromCodePoint: function (cp) {\n\t        return (cp < 0x10000) ? String.fromCharCode(cp) :\n\t            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +\n\t                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-white-space\n\t    isWhiteSpace: function (cp) {\n\t        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||\n\t            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-line-terminators\n\t    isLineTerminator: function (cp) {\n\t        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    isIdentifierStart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    isIdentifierPart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    isDecimalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39); // 0..9\n\t    },\n\t    isHexDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp >= 0x41 && cp <= 0x46) ||\n\t            (cp >= 0x61 && cp <= 0x66); // a..f\n\t    },\n\t    isOctalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x37); // 0..7\n\t    }\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\t/* tslint:disable:max-classes-per-file */\n\tvar JSXClosingElement = (function () {\n\t    function JSXClosingElement(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;\n\t        this.name = name;\n\t    }\n\t    return JSXClosingElement;\n\t}());\n\texports.JSXClosingElement = JSXClosingElement;\n\tvar JSXElement = (function () {\n\t    function JSXElement(openingElement, children, closingElement) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXElement;\n\t        this.openingElement = openingElement;\n\t        this.children = children;\n\t        this.closingElement = closingElement;\n\t    }\n\t    return JSXElement;\n\t}());\n\texports.JSXElement = JSXElement;\n\tvar JSXEmptyExpression = (function () {\n\t    function JSXEmptyExpression() {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;\n\t    }\n\t    return JSXEmptyExpression;\n\t}());\n\texports.JSXEmptyExpression = JSXEmptyExpression;\n\tvar JSXExpressionContainer = (function () {\n\t    function JSXExpressionContainer(expression) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;\n\t        this.expression = expression;\n\t    }\n\t    return JSXExpressionContainer;\n\t}());\n\texports.JSXExpressionContainer = JSXExpressionContainer;\n\tvar JSXIdentifier = (function () {\n\t    function JSXIdentifier(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;\n\t        this.name = name;\n\t    }\n\t    return JSXIdentifier;\n\t}());\n\texports.JSXIdentifier = JSXIdentifier;\n\tvar JSXMemberExpression = (function () {\n\t    function JSXMemberExpression(object, property) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return JSXMemberExpression;\n\t}());\n\texports.JSXMemberExpression = JSXMemberExpression;\n\tvar JSXAttribute = (function () {\n\t    function JSXAttribute(name, value) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;\n\t        this.name = name;\n\t        this.value = value;\n\t    }\n\t    return JSXAttribute;\n\t}());\n\texports.JSXAttribute = JSXAttribute;\n\tvar JSXNamespacedName = (function () {\n\t    function JSXNamespacedName(namespace, name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;\n\t        this.namespace = namespace;\n\t        this.name = name;\n\t    }\n\t    return JSXNamespacedName;\n\t}());\n\texports.JSXNamespacedName = JSXNamespacedName;\n\tvar JSXOpeningElement = (function () {\n\t    function JSXOpeningElement(name, selfClosing, attributes) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;\n\t        this.name = name;\n\t        this.selfClosing = selfClosing;\n\t        this.attributes = attributes;\n\t    }\n\t    return JSXOpeningElement;\n\t}());\n\texports.JSXOpeningElement = JSXOpeningElement;\n\tvar JSXSpreadAttribute = (function () {\n\t    function JSXSpreadAttribute(argument) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;\n\t        this.argument = argument;\n\t    }\n\t    return JSXSpreadAttribute;\n\t}());\n\texports.JSXSpreadAttribute = JSXSpreadAttribute;\n\tvar JSXText = (function () {\n\t    function JSXText(value, raw) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXText;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return JSXText;\n\t}());\n\texports.JSXText = JSXText;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.JSXSyntax = {\n\t    JSXAttribute: 'JSXAttribute',\n\t    JSXClosingElement: 'JSXClosingElement',\n\t    JSXElement: 'JSXElement',\n\t    JSXEmptyExpression: 'JSXEmptyExpression',\n\t    JSXExpressionContainer: 'JSXExpressionContainer',\n\t    JSXIdentifier: 'JSXIdentifier',\n\t    JSXMemberExpression: 'JSXMemberExpression',\n\t    JSXNamespacedName: 'JSXNamespacedName',\n\t    JSXOpeningElement: 'JSXOpeningElement',\n\t    JSXSpreadAttribute: 'JSXSpreadAttribute',\n\t    JSXText: 'JSXText'\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\t/* tslint:disable:max-classes-per-file */\n\tvar ArrayExpression = (function () {\n\t    function ArrayExpression(elements) {\n\t        this.type = syntax_1.Syntax.ArrayExpression;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayExpression;\n\t}());\n\texports.ArrayExpression = ArrayExpression;\n\tvar ArrayPattern = (function () {\n\t    function ArrayPattern(elements) {\n\t        this.type = syntax_1.Syntax.ArrayPattern;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayPattern;\n\t}());\n\texports.ArrayPattern = ArrayPattern;\n\tvar ArrowFunctionExpression = (function () {\n\t    function ArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = false;\n\t    }\n\t    return ArrowFunctionExpression;\n\t}());\n\texports.ArrowFunctionExpression = ArrowFunctionExpression;\n\tvar AssignmentExpression = (function () {\n\t    function AssignmentExpression(operator, left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentExpression;\n\t}());\n\texports.AssignmentExpression = AssignmentExpression;\n\tvar AssignmentPattern = (function () {\n\t    function AssignmentPattern(left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentPattern;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentPattern;\n\t}());\n\texports.AssignmentPattern = AssignmentPattern;\n\tvar AsyncArrowFunctionExpression = (function () {\n\t    function AsyncArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = true;\n\t    }\n\t    return AsyncArrowFunctionExpression;\n\t}());\n\texports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;\n\tvar AsyncFunctionDeclaration = (function () {\n\t    function AsyncFunctionDeclaration(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionDeclaration;\n\t}());\n\texports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;\n\tvar AsyncFunctionExpression = (function () {\n\t    function AsyncFunctionExpression(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionExpression;\n\t}());\n\texports.AsyncFunctionExpression = AsyncFunctionExpression;\n\tvar AwaitExpression = (function () {\n\t    function AwaitExpression(argument) {\n\t        this.type = syntax_1.Syntax.AwaitExpression;\n\t        this.argument = argument;\n\t    }\n\t    return AwaitExpression;\n\t}());\n\texports.AwaitExpression = AwaitExpression;\n\tvar BinaryExpression = (function () {\n\t    function BinaryExpression(operator, left, right) {\n\t        var logical = (operator === '||' || operator === '&&');\n\t        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return BinaryExpression;\n\t}());\n\texports.BinaryExpression = BinaryExpression;\n\tvar BlockStatement = (function () {\n\t    function BlockStatement(body) {\n\t        this.type = syntax_1.Syntax.BlockStatement;\n\t        this.body = body;\n\t    }\n\t    return BlockStatement;\n\t}());\n\texports.BlockStatement = BlockStatement;\n\tvar BreakStatement = (function () {\n\t    function BreakStatement(label) {\n\t        this.type = syntax_1.Syntax.BreakStatement;\n\t        this.label = label;\n\t    }\n\t    return BreakStatement;\n\t}());\n\texports.BreakStatement = BreakStatement;\n\tvar CallExpression = (function () {\n\t    function CallExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.CallExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return CallExpression;\n\t}());\n\texports.CallExpression = CallExpression;\n\tvar CatchClause = (function () {\n\t    function CatchClause(param, body) {\n\t        this.type = syntax_1.Syntax.CatchClause;\n\t        this.param = param;\n\t        this.body = body;\n\t    }\n\t    return CatchClause;\n\t}());\n\texports.CatchClause = CatchClause;\n\tvar ClassBody = (function () {\n\t    function ClassBody(body) {\n\t        this.type = syntax_1.Syntax.ClassBody;\n\t        this.body = body;\n\t    }\n\t    return ClassBody;\n\t}());\n\texports.ClassBody = ClassBody;\n\tvar ClassDeclaration = (function () {\n\t    function ClassDeclaration(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassDeclaration;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassDeclaration;\n\t}());\n\texports.ClassDeclaration = ClassDeclaration;\n\tvar ClassExpression = (function () {\n\t    function ClassExpression(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassExpression;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassExpression;\n\t}());\n\texports.ClassExpression = ClassExpression;\n\tvar ComputedMemberExpression = (function () {\n\t    function ComputedMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = true;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return ComputedMemberExpression;\n\t}());\n\texports.ComputedMemberExpression = ComputedMemberExpression;\n\tvar ConditionalExpression = (function () {\n\t    function ConditionalExpression(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.ConditionalExpression;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return ConditionalExpression;\n\t}());\n\texports.ConditionalExpression = ConditionalExpression;\n\tvar ContinueStatement = (function () {\n\t    function ContinueStatement(label) {\n\t        this.type = syntax_1.Syntax.ContinueStatement;\n\t        this.label = label;\n\t    }\n\t    return ContinueStatement;\n\t}());\n\texports.ContinueStatement = ContinueStatement;\n\tvar DebuggerStatement = (function () {\n\t    function DebuggerStatement() {\n\t        this.type = syntax_1.Syntax.DebuggerStatement;\n\t    }\n\t    return DebuggerStatement;\n\t}());\n\texports.DebuggerStatement = DebuggerStatement;\n\tvar Directive = (function () {\n\t    function Directive(expression, directive) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t        this.directive = directive;\n\t    }\n\t    return Directive;\n\t}());\n\texports.Directive = Directive;\n\tvar DoWhileStatement = (function () {\n\t    function DoWhileStatement(body, test) {\n\t        this.type = syntax_1.Syntax.DoWhileStatement;\n\t        this.body = body;\n\t        this.test = test;\n\t    }\n\t    return DoWhileStatement;\n\t}());\n\texports.DoWhileStatement = DoWhileStatement;\n\tvar EmptyStatement = (function () {\n\t    function EmptyStatement() {\n\t        this.type = syntax_1.Syntax.EmptyStatement;\n\t    }\n\t    return EmptyStatement;\n\t}());\n\texports.EmptyStatement = EmptyStatement;\n\tvar ExportAllDeclaration = (function () {\n\t    function ExportAllDeclaration(source) {\n\t        this.type = syntax_1.Syntax.ExportAllDeclaration;\n\t        this.source = source;\n\t    }\n\t    return ExportAllDeclaration;\n\t}());\n\texports.ExportAllDeclaration = ExportAllDeclaration;\n\tvar ExportDefaultDeclaration = (function () {\n\t    function ExportDefaultDeclaration(declaration) {\n\t        this.type = syntax_1.Syntax.ExportDefaultDeclaration;\n\t        this.declaration = declaration;\n\t    }\n\t    return ExportDefaultDeclaration;\n\t}());\n\texports.ExportDefaultDeclaration = ExportDefaultDeclaration;\n\tvar ExportNamedDeclaration = (function () {\n\t    function ExportNamedDeclaration(declaration, specifiers, source) {\n\t        this.type = syntax_1.Syntax.ExportNamedDeclaration;\n\t        this.declaration = declaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ExportNamedDeclaration;\n\t}());\n\texports.ExportNamedDeclaration = ExportNamedDeclaration;\n\tvar ExportSpecifier = (function () {\n\t    function ExportSpecifier(local, exported) {\n\t        this.type = syntax_1.Syntax.ExportSpecifier;\n\t        this.exported = exported;\n\t        this.local = local;\n\t    }\n\t    return ExportSpecifier;\n\t}());\n\texports.ExportSpecifier = ExportSpecifier;\n\tvar ExpressionStatement = (function () {\n\t    function ExpressionStatement(expression) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t    }\n\t    return ExpressionStatement;\n\t}());\n\texports.ExpressionStatement = ExpressionStatement;\n\tvar ForInStatement = (function () {\n\t    function ForInStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForInStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t        this.each = false;\n\t    }\n\t    return ForInStatement;\n\t}());\n\texports.ForInStatement = ForInStatement;\n\tvar ForOfStatement = (function () {\n\t    function ForOfStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForOfStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t    }\n\t    return ForOfStatement;\n\t}());\n\texports.ForOfStatement = ForOfStatement;\n\tvar ForStatement = (function () {\n\t    function ForStatement(init, test, update, body) {\n\t        this.type = syntax_1.Syntax.ForStatement;\n\t        this.init = init;\n\t        this.test = test;\n\t        this.update = update;\n\t        this.body = body;\n\t    }\n\t    return ForStatement;\n\t}());\n\texports.ForStatement = ForStatement;\n\tvar FunctionDeclaration = (function () {\n\t    function FunctionDeclaration(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionDeclaration;\n\t}());\n\texports.FunctionDeclaration = FunctionDeclaration;\n\tvar FunctionExpression = (function () {\n\t    function FunctionExpression(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionExpression;\n\t}());\n\texports.FunctionExpression = FunctionExpression;\n\tvar Identifier = (function () {\n\t    function Identifier(name) {\n\t        this.type = syntax_1.Syntax.Identifier;\n\t        this.name = name;\n\t    }\n\t    return Identifier;\n\t}());\n\texports.Identifier = Identifier;\n\tvar IfStatement = (function () {\n\t    function IfStatement(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.IfStatement;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return IfStatement;\n\t}());\n\texports.IfStatement = IfStatement;\n\tvar ImportDeclaration = (function () {\n\t    function ImportDeclaration(specifiers, source) {\n\t        this.type = syntax_1.Syntax.ImportDeclaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ImportDeclaration;\n\t}());\n\texports.ImportDeclaration = ImportDeclaration;\n\tvar ImportDefaultSpecifier = (function () {\n\t    function ImportDefaultSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportDefaultSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportDefaultSpecifier;\n\t}());\n\texports.ImportDefaultSpecifier = ImportDefaultSpecifier;\n\tvar ImportNamespaceSpecifier = (function () {\n\t    function ImportNamespaceSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportNamespaceSpecifier;\n\t}());\n\texports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\n\tvar ImportSpecifier = (function () {\n\t    function ImportSpecifier(local, imported) {\n\t        this.type = syntax_1.Syntax.ImportSpecifier;\n\t        this.local = local;\n\t        this.imported = imported;\n\t    }\n\t    return ImportSpecifier;\n\t}());\n\texports.ImportSpecifier = ImportSpecifier;\n\tvar LabeledStatement = (function () {\n\t    function LabeledStatement(label, body) {\n\t        this.type = syntax_1.Syntax.LabeledStatement;\n\t        this.label = label;\n\t        this.body = body;\n\t    }\n\t    return LabeledStatement;\n\t}());\n\texports.LabeledStatement = LabeledStatement;\n\tvar Literal = (function () {\n\t    function Literal(value, raw) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return Literal;\n\t}());\n\texports.Literal = Literal;\n\tvar MetaProperty = (function () {\n\t    function MetaProperty(meta, property) {\n\t        this.type = syntax_1.Syntax.MetaProperty;\n\t        this.meta = meta;\n\t        this.property = property;\n\t    }\n\t    return MetaProperty;\n\t}());\n\texports.MetaProperty = MetaProperty;\n\tvar MethodDefinition = (function () {\n\t    function MethodDefinition(key, computed, value, kind, isStatic) {\n\t        this.type = syntax_1.Syntax.MethodDefinition;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.static = isStatic;\n\t    }\n\t    return MethodDefinition;\n\t}());\n\texports.MethodDefinition = MethodDefinition;\n\tvar Module = (function () {\n\t    function Module(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'module';\n\t    }\n\t    return Module;\n\t}());\n\texports.Module = Module;\n\tvar NewExpression = (function () {\n\t    function NewExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.NewExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return NewExpression;\n\t}());\n\texports.NewExpression = NewExpression;\n\tvar ObjectExpression = (function () {\n\t    function ObjectExpression(properties) {\n\t        this.type = syntax_1.Syntax.ObjectExpression;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectExpression;\n\t}());\n\texports.ObjectExpression = ObjectExpression;\n\tvar ObjectPattern = (function () {\n\t    function ObjectPattern(properties) {\n\t        this.type = syntax_1.Syntax.ObjectPattern;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectPattern;\n\t}());\n\texports.ObjectPattern = ObjectPattern;\n\tvar Property = (function () {\n\t    function Property(kind, key, computed, value, method, shorthand) {\n\t        this.type = syntax_1.Syntax.Property;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.method = method;\n\t        this.shorthand = shorthand;\n\t    }\n\t    return Property;\n\t}());\n\texports.Property = Property;\n\tvar RegexLiteral = (function () {\n\t    function RegexLiteral(value, raw, pattern, flags) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t        this.regex = { pattern: pattern, flags: flags };\n\t    }\n\t    return RegexLiteral;\n\t}());\n\texports.RegexLiteral = RegexLiteral;\n\tvar RestElement = (function () {\n\t    function RestElement(argument) {\n\t        this.type = syntax_1.Syntax.RestElement;\n\t        this.argument = argument;\n\t    }\n\t    return RestElement;\n\t}());\n\texports.RestElement = RestElement;\n\tvar ReturnStatement = (function () {\n\t    function ReturnStatement(argument) {\n\t        this.type = syntax_1.Syntax.ReturnStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ReturnStatement;\n\t}());\n\texports.ReturnStatement = ReturnStatement;\n\tvar Script = (function () {\n\t    function Script(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'script';\n\t    }\n\t    return Script;\n\t}());\n\texports.Script = Script;\n\tvar SequenceExpression = (function () {\n\t    function SequenceExpression(expressions) {\n\t        this.type = syntax_1.Syntax.SequenceExpression;\n\t        this.expressions = expressions;\n\t    }\n\t    return SequenceExpression;\n\t}());\n\texports.SequenceExpression = SequenceExpression;\n\tvar SpreadElement = (function () {\n\t    function SpreadElement(argument) {\n\t        this.type = syntax_1.Syntax.SpreadElement;\n\t        this.argument = argument;\n\t    }\n\t    return SpreadElement;\n\t}());\n\texports.SpreadElement = SpreadElement;\n\tvar StaticMemberExpression = (function () {\n\t    function StaticMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = false;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return StaticMemberExpression;\n\t}());\n\texports.StaticMemberExpression = StaticMemberExpression;\n\tvar Super = (function () {\n\t    function Super() {\n\t        this.type = syntax_1.Syntax.Super;\n\t    }\n\t    return Super;\n\t}());\n\texports.Super = Super;\n\tvar SwitchCase = (function () {\n\t    function SwitchCase(test, consequent) {\n\t        this.type = syntax_1.Syntax.SwitchCase;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t    }\n\t    return SwitchCase;\n\t}());\n\texports.SwitchCase = SwitchCase;\n\tvar SwitchStatement = (function () {\n\t    function SwitchStatement(discriminant, cases) {\n\t        this.type = syntax_1.Syntax.SwitchStatement;\n\t        this.discriminant = discriminant;\n\t        this.cases = cases;\n\t    }\n\t    return SwitchStatement;\n\t}());\n\texports.SwitchStatement = SwitchStatement;\n\tvar TaggedTemplateExpression = (function () {\n\t    function TaggedTemplateExpression(tag, quasi) {\n\t        this.type = syntax_1.Syntax.TaggedTemplateExpression;\n\t        this.tag = tag;\n\t        this.quasi = quasi;\n\t    }\n\t    return TaggedTemplateExpression;\n\t}());\n\texports.TaggedTemplateExpression = TaggedTemplateExpression;\n\tvar TemplateElement = (function () {\n\t    function TemplateElement(value, tail) {\n\t        this.type = syntax_1.Syntax.TemplateElement;\n\t        this.value = value;\n\t        this.tail = tail;\n\t    }\n\t    return TemplateElement;\n\t}());\n\texports.TemplateElement = TemplateElement;\n\tvar TemplateLiteral = (function () {\n\t    function TemplateLiteral(quasis, expressions) {\n\t        this.type = syntax_1.Syntax.TemplateLiteral;\n\t        this.quasis = quasis;\n\t        this.expressions = expressions;\n\t    }\n\t    return TemplateLiteral;\n\t}());\n\texports.TemplateLiteral = TemplateLiteral;\n\tvar ThisExpression = (function () {\n\t    function ThisExpression() {\n\t        this.type = syntax_1.Syntax.ThisExpression;\n\t    }\n\t    return ThisExpression;\n\t}());\n\texports.ThisExpression = ThisExpression;\n\tvar ThrowStatement = (function () {\n\t    function ThrowStatement(argument) {\n\t        this.type = syntax_1.Syntax.ThrowStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ThrowStatement;\n\t}());\n\texports.ThrowStatement = ThrowStatement;\n\tvar TryStatement = (function () {\n\t    function TryStatement(block, handler, finalizer) {\n\t        this.type = syntax_1.Syntax.TryStatement;\n\t        this.block = block;\n\t        this.handler = handler;\n\t        this.finalizer = finalizer;\n\t    }\n\t    return TryStatement;\n\t}());\n\texports.TryStatement = TryStatement;\n\tvar UnaryExpression = (function () {\n\t    function UnaryExpression(operator, argument) {\n\t        this.type = syntax_1.Syntax.UnaryExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = true;\n\t    }\n\t    return UnaryExpression;\n\t}());\n\texports.UnaryExpression = UnaryExpression;\n\tvar UpdateExpression = (function () {\n\t    function UpdateExpression(operator, argument, prefix) {\n\t        this.type = syntax_1.Syntax.UpdateExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = prefix;\n\t    }\n\t    return UpdateExpression;\n\t}());\n\texports.UpdateExpression = UpdateExpression;\n\tvar VariableDeclaration = (function () {\n\t    function VariableDeclaration(declarations, kind) {\n\t        this.type = syntax_1.Syntax.VariableDeclaration;\n\t        this.declarations = declarations;\n\t        this.kind = kind;\n\t    }\n\t    return VariableDeclaration;\n\t}());\n\texports.VariableDeclaration = VariableDeclaration;\n\tvar VariableDeclarator = (function () {\n\t    function VariableDeclarator(id, init) {\n\t        this.type = syntax_1.Syntax.VariableDeclarator;\n\t        this.id = id;\n\t        this.init = init;\n\t    }\n\t    return VariableDeclarator;\n\t}());\n\texports.VariableDeclarator = VariableDeclarator;\n\tvar WhileStatement = (function () {\n\t    function WhileStatement(test, body) {\n\t        this.type = syntax_1.Syntax.WhileStatement;\n\t        this.test = test;\n\t        this.body = body;\n\t    }\n\t    return WhileStatement;\n\t}());\n\texports.WhileStatement = WhileStatement;\n\tvar WithStatement = (function () {\n\t    function WithStatement(object, body) {\n\t        this.type = syntax_1.Syntax.WithStatement;\n\t        this.object = object;\n\t        this.body = body;\n\t    }\n\t    return WithStatement;\n\t}());\n\texports.WithStatement = WithStatement;\n\tvar YieldExpression = (function () {\n\t    function YieldExpression(argument, delegate) {\n\t        this.type = syntax_1.Syntax.YieldExpression;\n\t        this.argument = argument;\n\t        this.delegate = delegate;\n\t    }\n\t    return YieldExpression;\n\t}());\n\texports.YieldExpression = YieldExpression;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar messages_1 = __webpack_require__(11);\n\tvar Node = __webpack_require__(7);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar syntax_1 = __webpack_require__(2);\n\tvar token_1 = __webpack_require__(13);\n\tvar ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';\n\tvar Parser = (function () {\n\t    function Parser(code, options, delegate) {\n\t        if (options === void 0) { options = {}; }\n\t        this.config = {\n\t            range: (typeof options.range === 'boolean') && options.range,\n\t            loc: (typeof options.loc === 'boolean') && options.loc,\n\t            source: null,\n\t            tokens: (typeof options.tokens === 'boolean') && options.tokens,\n\t            comment: (typeof options.comment === 'boolean') && options.comment,\n\t            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant\n\t        };\n\t        if (this.config.loc && options.source && options.source !== null) {\n\t            this.config.source = String(options.source);\n\t        }\n\t        this.delegate = delegate;\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = this.config.tolerant;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = this.config.comment;\n\t        this.operatorPrecedence = {\n\t            ')': 0,\n\t            ';': 0,\n\t            ',': 0,\n\t            '=': 0,\n\t            ']': 0,\n\t            '||': 1,\n\t            '&&': 2,\n\t            '|': 3,\n\t            '^': 4,\n\t            '&': 5,\n\t            '==': 6,\n\t            '!=': 6,\n\t            '===': 6,\n\t            '!==': 6,\n\t            '<': 7,\n\t            '>': 7,\n\t            '<=': 7,\n\t            '>=': 7,\n\t            '<<': 8,\n\t            '>>': 8,\n\t            '>>>': 8,\n\t            '+': 9,\n\t            '-': 9,\n\t            '*': 11,\n\t            '/': 11,\n\t            '%': 11\n\t        };\n\t        this.lookahead = {\n\t            type: 2 /* EOF */,\n\t            value: '',\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: 0,\n\t            start: 0,\n\t            end: 0\n\t        };\n\t        this.hasLineTerminator = false;\n\t        this.context = {\n\t            isModule: false,\n\t            await: false,\n\t            allowIn: true,\n\t            allowStrictDirective: true,\n\t            allowYield: true,\n\t            firstCoverInitializedNameError: null,\n\t            isAssignmentTarget: false,\n\t            isBindingElement: false,\n\t            inFunctionBody: false,\n\t            inIteration: false,\n\t            inSwitch: false,\n\t            labelSet: {},\n\t            strict: false\n\t        };\n\t        this.tokens = [];\n\t        this.startMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.lastMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.nextToken();\n\t        this.lastMarker = {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    }\n\t    Parser.prototype.throwError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.lastMarker.line;\n\t        var column = this.lastMarker.column + 1;\n\t        throw this.errorHandler.createError(index, line, column, msg);\n\t    };\n\t    Parser.prototype.tolerateError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.scanner.lineNumber;\n\t        var column = this.lastMarker.column + 1;\n\t        this.errorHandler.tolerateError(index, line, column, msg);\n\t    };\n\t    // Throw an exception because of the token.\n\t    Parser.prototype.unexpectedTokenError = function (token, message) {\n\t        var msg = message || messages_1.Messages.UnexpectedToken;\n\t        var value;\n\t        if (token) {\n\t            if (!message) {\n\t                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :\n\t                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :\n\t                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :\n\t                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :\n\t                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :\n\t                                    messages_1.Messages.UnexpectedToken;\n\t                if (token.type === 4 /* Keyword */) {\n\t                    if (this.scanner.isFutureReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.UnexpectedReserved;\n\t                    }\n\t                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.StrictReservedWord;\n\t                    }\n\t                }\n\t            }\n\t            value = token.value;\n\t        }\n\t        else {\n\t            value = 'ILLEGAL';\n\t        }\n\t        msg = msg.replace('%0', value);\n\t        if (token && typeof token.lineNumber === 'number') {\n\t            var index = token.start;\n\t            var line = token.lineNumber;\n\t            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;\n\t            var column = token.start - lastMarkerLineStart + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t        else {\n\t            var index = this.lastMarker.index;\n\t            var line = this.lastMarker.line;\n\t            var column = this.lastMarker.column + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t    };\n\t    Parser.prototype.throwUnexpectedToken = function (token, message) {\n\t        throw this.unexpectedTokenError(token, message);\n\t    };\n\t    Parser.prototype.tolerateUnexpectedToken = function (token, message) {\n\t        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));\n\t    };\n\t    Parser.prototype.collectComments = function () {\n\t        if (!this.config.comment) {\n\t            this.scanner.scanComments();\n\t        }\n\t        else {\n\t            var comments = this.scanner.scanComments();\n\t            if (comments.length > 0 && this.delegate) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var node = void 0;\n\t                    node = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: this.scanner.source.slice(e.slice[0], e.slice[1])\n\t                    };\n\t                    if (this.config.range) {\n\t                        node.range = e.range;\n\t                    }\n\t                    if (this.config.loc) {\n\t                        node.loc = e.loc;\n\t                    }\n\t                    var metadata = {\n\t                        start: {\n\t                            line: e.loc.start.line,\n\t                            column: e.loc.start.column,\n\t                            offset: e.range[0]\n\t                        },\n\t                        end: {\n\t                            line: e.loc.end.line,\n\t                            column: e.loc.end.column,\n\t                            offset: e.range[1]\n\t                        }\n\t                    };\n\t                    this.delegate(node, metadata);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    // From internal representation to an external structure\n\t    Parser.prototype.getTokenRaw = function (token) {\n\t        return this.scanner.source.slice(token.start, token.end);\n\t    };\n\t    Parser.prototype.convertToken = function (token) {\n\t        var t = {\n\t            type: token_1.TokenName[token.type],\n\t            value: this.getTokenRaw(token)\n\t        };\n\t        if (this.config.range) {\n\t            t.range = [token.start, token.end];\n\t        }\n\t        if (this.config.loc) {\n\t            t.loc = {\n\t                start: {\n\t                    line: this.startMarker.line,\n\t                    column: this.startMarker.column\n\t                },\n\t                end: {\n\t                    line: this.scanner.lineNumber,\n\t                    column: this.scanner.index - this.scanner.lineStart\n\t                }\n\t            };\n\t        }\n\t        if (token.type === 9 /* RegularExpression */) {\n\t            var pattern = token.pattern;\n\t            var flags = token.flags;\n\t            t.regex = { pattern: pattern, flags: flags };\n\t        }\n\t        return t;\n\t    };\n\t    Parser.prototype.nextToken = function () {\n\t        var token = this.lookahead;\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        this.collectComments();\n\t        if (this.scanner.index !== this.startMarker.index) {\n\t            this.startMarker.index = this.scanner.index;\n\t            this.startMarker.line = this.scanner.lineNumber;\n\t            this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        }\n\t        var next = this.scanner.lex();\n\t        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);\n\t        if (next && this.context.strict && next.type === 3 /* Identifier */) {\n\t            if (this.scanner.isStrictModeReservedWord(next.value)) {\n\t                next.type = 4 /* Keyword */;\n\t            }\n\t        }\n\t        this.lookahead = next;\n\t        if (this.config.tokens && next.type !== 2 /* EOF */) {\n\t            this.tokens.push(this.convertToken(next));\n\t        }\n\t        return token;\n\t    };\n\t    Parser.prototype.nextRegexToken = function () {\n\t        this.collectComments();\n\t        var token = this.scanner.scanRegExp();\n\t        if (this.config.tokens) {\n\t            // Pop the previous token, '/' or '/='\n\t            // This is added from the lookahead token.\n\t            this.tokens.pop();\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        // Prime the next lookahead.\n\t        this.lookahead = token;\n\t        this.nextToken();\n\t        return token;\n\t    };\n\t    Parser.prototype.createNode = function () {\n\t        return {\n\t            index: this.startMarker.index,\n\t            line: this.startMarker.line,\n\t            column: this.startMarker.column\n\t        };\n\t    };\n\t    Parser.prototype.startNode = function (token, lastLineStart) {\n\t        if (lastLineStart === void 0) { lastLineStart = 0; }\n\t        var column = token.start - token.lineStart;\n\t        var line = token.lineNumber;\n\t        if (column < 0) {\n\t            column += lastLineStart;\n\t            line--;\n\t        }\n\t        return {\n\t            index: token.start,\n\t            line: line,\n\t            column: column\n\t        };\n\t    };\n\t    Parser.prototype.finalize = function (marker, node) {\n\t        if (this.config.range) {\n\t            node.range = [marker.index, this.lastMarker.index];\n\t        }\n\t        if (this.config.loc) {\n\t            node.loc = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column\n\t                }\n\t            };\n\t            if (this.config.source) {\n\t                node.loc.source = this.config.source;\n\t            }\n\t        }\n\t        if (this.delegate) {\n\t            var metadata = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                    offset: marker.index\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column,\n\t                    offset: this.lastMarker.index\n\t                }\n\t            };\n\t            this.delegate(node, metadata);\n\t        }\n\t        return node;\n\t    };\n\t    // Expect the next token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expect = function (value) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().\n\t    Parser.prototype.expectCommaSeparator = function () {\n\t        if (this.config.tolerant) {\n\t            var token = this.lookahead;\n\t            if (token.type === 7 /* Punctuator */ && token.value === ',') {\n\t                this.nextToken();\n\t            }\n\t            else if (token.type === 7 /* Punctuator */ && token.value === ';') {\n\t                this.nextToken();\n\t                this.tolerateUnexpectedToken(token);\n\t            }\n\t            else {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);\n\t            }\n\t        }\n\t        else {\n\t            this.expect(',');\n\t        }\n\t    };\n\t    // Expect the next token to match the specified keyword.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expectKeyword = function (keyword) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next token matches the specified punctuator.\n\t    Parser.prototype.match = function (value) {\n\t        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;\n\t    };\n\t    // Return true if the next token matches the specified keyword\n\t    Parser.prototype.matchKeyword = function (keyword) {\n\t        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token matches the specified contextual keyword\n\t    // (where an identifier is sometimes a keyword depending on the context)\n\t    Parser.prototype.matchContextualKeyword = function (keyword) {\n\t        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token is an assignment operator\n\t    Parser.prototype.matchAssign = function () {\n\t        if (this.lookahead.type !== 7 /* Punctuator */) {\n\t            return false;\n\t        }\n\t        var op = this.lookahead.value;\n\t        return op === '=' ||\n\t            op === '*=' ||\n\t            op === '**=' ||\n\t            op === '/=' ||\n\t            op === '%=' ||\n\t            op === '+=' ||\n\t            op === '-=' ||\n\t            op === '<<=' ||\n\t            op === '>>=' ||\n\t            op === '>>>=' ||\n\t            op === '&=' ||\n\t            op === '^=' ||\n\t            op === '|=';\n\t    };\n\t    // Cover grammar support.\n\t    //\n\t    // When an assignment expression position starts with an left parenthesis, the determination of the type\n\t    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)\n\t    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.\n\t    //\n\t    // There are three productions that can be parsed in a parentheses pair that needs to be determined\n\t    // after the outermost pair is closed. They are:\n\t    //\n\t    //   1. AssignmentExpression\n\t    //   2. BindingElements\n\t    //   3. AssignmentTargets\n\t    //\n\t    // In order to avoid exponential backtracking, we use two flags to denote if the production can be\n\t    // binding element or assignment target.\n\t    //\n\t    // The three productions have the relationship:\n\t    //\n\t    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression\n\t    //\n\t    // with a single exception that CoverInitializedName when used directly in an Expression, generates\n\t    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the\n\t    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.\n\t    //\n\t    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not\n\t    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore\n\t    // the CoverInitializedName check is conducted.\n\t    //\n\t    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates\n\t    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential\n\t    // pattern. The CoverInitializedName check is deferred.\n\t    Parser.prototype.isolateCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        if (this.context.firstCoverInitializedNameError !== null) {\n\t            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);\n\t        }\n\t        this.context.isBindingElement = previousIsBindingElement;\n\t        this.context.isAssignmentTarget = previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.inheritCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;\n\t        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.consumeSemicolon = function () {\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else if (!this.hasLineTerminator) {\n\t            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.lastMarker.index = this.startMarker.index;\n\t            this.lastMarker.line = this.startMarker.line;\n\t            this.lastMarker.column = this.startMarker.column;\n\t        }\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-primary-expression\n\t    Parser.prototype.parsePrimaryExpression = function () {\n\t        var node = this.createNode();\n\t        var expr;\n\t        var token, raw;\n\t        switch (this.lookahead.type) {\n\t            case 3 /* Identifier */:\n\t                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {\n\t                    this.tolerateUnexpectedToken(this.lookahead);\n\t                }\n\t                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                break;\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t                if (this.context.strict && this.lookahead.octal) {\n\t                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 1 /* BooleanLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));\n\t                break;\n\t            case 5 /* NullLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(null, raw));\n\t                break;\n\t            case 10 /* Template */:\n\t                expr = this.parseTemplateLiteral();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                switch (this.lookahead.value) {\n\t                    case '(':\n\t                        this.context.isBindingElement = false;\n\t                        expr = this.inheritCoverGrammar(this.parseGroupExpression);\n\t                        break;\n\t                    case '[':\n\t                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);\n\t                        break;\n\t                    case '{':\n\t                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);\n\t                        break;\n\t                    case '/':\n\t                    case '/=':\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                        this.scanner.index = this.startMarker.index;\n\t                        token = this.nextRegexToken();\n\t                        raw = this.getTokenRaw(token);\n\t                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));\n\t                        break;\n\t                    default:\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                }\n\t                break;\n\t            case 4 /* Keyword */:\n\t                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {\n\t                    expr = this.parseIdentifierName();\n\t                }\n\t                else if (!this.context.strict && this.matchKeyword('let')) {\n\t                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                }\n\t                else {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    if (this.matchKeyword('function')) {\n\t                        expr = this.parseFunctionExpression();\n\t                    }\n\t                    else if (this.matchKeyword('this')) {\n\t                        this.nextToken();\n\t                        expr = this.finalize(node, new Node.ThisExpression());\n\t                    }\n\t                    else if (this.matchKeyword('class')) {\n\t                        expr = this.parseClassExpression();\n\t                    }\n\t                    else {\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                    }\n\t                }\n\t                break;\n\t            default:\n\t                expr = this.throwUnexpectedToken(this.nextToken());\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-array-initializer\n\t    Parser.prototype.parseSpreadElement = function () {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t        return this.finalize(node, new Node.SpreadElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayInitializer = function () {\n\t        var node = this.createNode();\n\t        var elements = [];\n\t        this.expect('[');\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else if (this.match('...')) {\n\t                var element = this.parseSpreadElement();\n\t                if (!this.match(']')) {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    this.expect(',');\n\t                }\n\t                elements.push(element);\n\t            }\n\t            else {\n\t                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayExpression(elements));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-object-initializer\n\t    Parser.prototype.parsePropertyMethod = function (params) {\n\t        this.context.isAssignmentTarget = false;\n\t        this.context.isBindingElement = false;\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = params.simple;\n\t        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);\n\t        if (this.context.strict && params.firstRestricted) {\n\t            this.tolerateUnexpectedToken(params.firstRestricted, params.message);\n\t        }\n\t        if (this.context.strict && params.stricted) {\n\t            this.tolerateUnexpectedToken(params.stricted, params.message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        return body;\n\t    };\n\t    Parser.prototype.parsePropertyMethodFunction = function () {\n\t        var isGenerator = false;\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parsePropertyMethodAsyncFunction = function () {\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        var previousAwait = this.context.await;\n\t        this.context.allowYield = false;\n\t        this.context.await = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        this.context.await = previousAwait;\n\t        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));\n\t    };\n\t    Parser.prototype.parseObjectPropertyKey = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var key;\n\t        switch (token.type) {\n\t            case 8 /* StringLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t                if (this.context.strict && token.octal) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                var raw = this.getTokenRaw(token);\n\t                key = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 3 /* Identifier */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 4 /* Keyword */:\n\t                key = this.finalize(node, new Node.Identifier(token.value));\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                if (token.value === '[') {\n\t                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    this.expect(']');\n\t                }\n\t                else {\n\t                    key = this.throwUnexpectedToken(token);\n\t                }\n\t                break;\n\t            default:\n\t                key = this.throwUnexpectedToken(token);\n\t        }\n\t        return key;\n\t    };\n\t    Parser.prototype.isPropertyKey = function (key, value) {\n\t        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||\n\t            (key.type === syntax_1.Syntax.Literal && key.value === value);\n\t    };\n\t    Parser.prototype.parseObjectProperty = function (hasProto) {\n\t        var node = this.createNode();\n\t        var token = this.lookahead;\n\t        var kind;\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var shorthand = false;\n\t        var isAsync = false;\n\t        if (token.type === 3 /* Identifier */) {\n\t            var id = token.value;\n\t            this.nextToken();\n\t            computed = this.match('[');\n\t            isAsync = !this.hasLineTerminator && (id === 'async') &&\n\t                !this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');\n\t            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));\n\t        }\n\t        else if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {\n\t            kind = 'get';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.context.allowYield = false;\n\t            value = this.parseGetterMethod();\n\t        }\n\t        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {\n\t            kind = 'set';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseSetterMethod();\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        else {\n\t            if (!key) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            kind = 'init';\n\t            if (this.match(':') && !isAsync) {\n\t                if (!computed && this.isPropertyKey(key, '__proto__')) {\n\t                    if (hasProto.value) {\n\t                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);\n\t                    }\n\t                    hasProto.value = true;\n\t                }\n\t                this.nextToken();\n\t                value = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t            }\n\t            else if (this.match('(')) {\n\t                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t                method = true;\n\t            }\n\t            else if (token.type === 3 /* Identifier */) {\n\t                var id = this.finalize(node, new Node.Identifier(token.value));\n\t                if (this.match('=')) {\n\t                    this.context.firstCoverInitializedNameError = this.lookahead;\n\t                    this.nextToken();\n\t                    shorthand = true;\n\t                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    value = this.finalize(node, new Node.AssignmentPattern(id, init));\n\t                }\n\t                else {\n\t                    shorthand = true;\n\t                    value = id;\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectInitializer = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var properties = [];\n\t        var hasProto = { value: false };\n\t        while (!this.match('}')) {\n\t            properties.push(this.parseObjectProperty(hasProto));\n\t            if (!this.match('}')) {\n\t                this.expectCommaSeparator();\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectExpression(properties));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literals\n\t    Parser.prototype.parseTemplateHead = function () {\n\t        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateElement = function () {\n\t        if (this.lookahead.type !== 10 /* Template */) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateLiteral = function () {\n\t        var node = this.createNode();\n\t        var expressions = [];\n\t        var quasis = [];\n\t        var quasi = this.parseTemplateHead();\n\t        quasis.push(quasi);\n\t        while (!quasi.tail) {\n\t            expressions.push(this.parseExpression());\n\t            quasi = this.parseTemplateElement();\n\t            quasis.push(quasi);\n\t        }\n\t        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-grouping-operator\n\t    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t            case syntax_1.Syntax.MemberExpression:\n\t            case syntax_1.Syntax.RestElement:\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                break;\n\t            case syntax_1.Syntax.SpreadElement:\n\t                expr.type = syntax_1.Syntax.RestElement;\n\t                this.reinterpretExpressionAsPattern(expr.argument);\n\t                break;\n\t            case syntax_1.Syntax.ArrayExpression:\n\t                expr.type = syntax_1.Syntax.ArrayPattern;\n\t                for (var i = 0; i < expr.elements.length; i++) {\n\t                    if (expr.elements[i] !== null) {\n\t                        this.reinterpretExpressionAsPattern(expr.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectExpression:\n\t                expr.type = syntax_1.Syntax.ObjectPattern;\n\t                for (var i = 0; i < expr.properties.length; i++) {\n\t                    this.reinterpretExpressionAsPattern(expr.properties[i].value);\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.AssignmentExpression:\n\t                expr.type = syntax_1.Syntax.AssignmentPattern;\n\t                delete expr.operator;\n\t                this.reinterpretExpressionAsPattern(expr.left);\n\t                break;\n\t        }\n\t    };\n\t    Parser.prototype.parseGroupExpression = function () {\n\t        var expr;\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.nextToken();\n\t            if (!this.match('=>')) {\n\t                this.expect('=>');\n\t            }\n\t            expr = {\n\t                type: ArrowParameterPlaceHolder,\n\t                params: [],\n\t                async: false\n\t            };\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var params = [];\n\t            if (this.match('...')) {\n\t                expr = this.parseRestElement(params);\n\t                this.expect(')');\n\t                if (!this.match('=>')) {\n\t                    this.expect('=>');\n\t                }\n\t                expr = {\n\t                    type: ArrowParameterPlaceHolder,\n\t                    params: [expr],\n\t                    async: false\n\t                };\n\t            }\n\t            else {\n\t                var arrow = false;\n\t                this.context.isBindingElement = true;\n\t                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                if (this.match(',')) {\n\t                    var expressions = [];\n\t                    this.context.isAssignmentTarget = false;\n\t                    expressions.push(expr);\n\t                    while (this.lookahead.type !== 2 /* EOF */) {\n\t                        if (!this.match(',')) {\n\t                            break;\n\t                        }\n\t                        this.nextToken();\n\t                        if (this.match(')')) {\n\t                            this.nextToken();\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else if (this.match('...')) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            expressions.push(this.parseRestElement(params));\n\t                            this.expect(')');\n\t                            if (!this.match('=>')) {\n\t                                this.expect('=>');\n\t                            }\n\t                            this.context.isBindingElement = false;\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else {\n\t                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        if (arrow) {\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!arrow) {\n\t                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t                    }\n\t                }\n\t                if (!arrow) {\n\t                    this.expect(')');\n\t                    if (this.match('=>')) {\n\t                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: [expr],\n\t                                async: false\n\t                            };\n\t                        }\n\t                        if (!arrow) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            if (expr.type === syntax_1.Syntax.SequenceExpression) {\n\t                                for (var i = 0; i < expr.expressions.length; i++) {\n\t                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);\n\t                                }\n\t                            }\n\t                            else {\n\t                                this.reinterpretExpressionAsPattern(expr);\n\t                            }\n\t                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: parameters,\n\t                                async: false\n\t                            };\n\t                        }\n\t                    }\n\t                    this.context.isBindingElement = false;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions\n\t    Parser.prototype.parseArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.isIdentifierName = function (token) {\n\t        return token.type === 3 /* Identifier */ ||\n\t            token.type === 4 /* Keyword */ ||\n\t            token.type === 1 /* BooleanLiteral */ ||\n\t            token.type === 5 /* NullLiteral */;\n\t    };\n\t    Parser.prototype.parseIdentifierName = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (!this.isIdentifierName(token)) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseNewExpression = function () {\n\t        var node = this.createNode();\n\t        var id = this.parseIdentifierName();\n\t        assert_1.assert(id.name === 'new', 'New expression must start with `new`');\n\t        var expr;\n\t        if (this.match('.')) {\n\t            this.nextToken();\n\t            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {\n\t                var property = this.parseIdentifierName();\n\t                expr = new Node.MetaProperty(id, property);\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);\n\t            var args = this.match('(') ? this.parseArguments() : [];\n\t            expr = new Node.NewExpression(callee, args);\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return this.finalize(node, expr);\n\t    };\n\t    Parser.prototype.parseAsyncArgument = function () {\n\t        var arg = this.parseAssignmentExpression();\n\t        this.context.firstCoverInitializedNameError = null;\n\t        return arg;\n\t    };\n\t    Parser.prototype.parseAsyncArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAsyncArgument);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {\n\t        var startToken = this.lookahead;\n\t        var maybeAsync = this.matchContextualKeyword('async');\n\t        var previousAllowIn = this.context.allowIn;\n\t        this.context.allowIn = true;\n\t        var expr;\n\t        if (this.matchKeyword('super') && this.context.inFunctionBody) {\n\t            expr = this.createNode();\n\t            this.nextToken();\n\t            expr = this.finalize(expr, new Node.Super());\n\t            if (!this.match('(') && !this.match('.') && !this.match('[')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        }\n\t        while (true) {\n\t            if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('(')) {\n\t                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = false;\n\t                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();\n\t                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));\n\t                if (asyncArrow && this.match('=>')) {\n\t                    for (var i = 0; i < args.length; ++i) {\n\t                        this.reinterpretExpressionAsPattern(args[i]);\n\t                    }\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: args,\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            else if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        this.context.allowIn = previousAllowIn;\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseSuper = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('super');\n\t        if (!this.match('[') && !this.match('.')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return this.finalize(node, new Node.Super());\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpression = function () {\n\t        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');\n\t        var node = this.startNode(this.lookahead);\n\t        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :\n\t            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        while (true) {\n\t            if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-update-expressions\n\t    Parser.prototype.parseUpdateExpression = function () {\n\t        var expr;\n\t        var startToken = this.lookahead;\n\t        if (this.match('++') || this.match('--')) {\n\t            var node = this.startNode(startToken);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictLHSPrefix);\n\t            }\n\t            if (!this.context.isAssignmentTarget) {\n\t                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t            }\n\t            var prefix = true;\n\t            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {\n\t                if (this.match('++') || this.match('--')) {\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);\n\t                    }\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    var operator = this.nextToken().value;\n\t                    var prefix = false;\n\t                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-unary-operators\n\t    Parser.prototype.parseAwaitExpression = function () {\n\t        var node = this.createNode();\n\t        this.nextToken();\n\t        var argument = this.parseUnaryExpression();\n\t        return this.finalize(node, new Node.AwaitExpression(argument));\n\t    };\n\t    Parser.prototype.parseUnaryExpression = function () {\n\t        var expr;\n\t        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||\n\t            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {\n\t            var node = this.startNode(this.lookahead);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));\n\t            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {\n\t                this.tolerateError(messages_1.Messages.StrictDelete);\n\t            }\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else if (this.context.await && this.matchContextualKeyword('await')) {\n\t            expr = this.parseAwaitExpression();\n\t        }\n\t        else {\n\t            expr = this.parseUpdateExpression();\n\t        }\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseExponentiationExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exp-operator\n\t    // https://tc39.github.io/ecma262/#sec-multiplicative-operators\n\t    // https://tc39.github.io/ecma262/#sec-additive-operators\n\t    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators\n\t    // https://tc39.github.io/ecma262/#sec-relational-operators\n\t    // https://tc39.github.io/ecma262/#sec-equality-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-logical-operators\n\t    Parser.prototype.binaryPrecedence = function (token) {\n\t        var op = token.value;\n\t        var precedence;\n\t        if (token.type === 7 /* Punctuator */) {\n\t            precedence = this.operatorPrecedence[op] || 0;\n\t        }\n\t        else if (token.type === 4 /* Keyword */) {\n\t            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;\n\t        }\n\t        else {\n\t            precedence = 0;\n\t        }\n\t        return precedence;\n\t    };\n\t    Parser.prototype.parseBinaryExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);\n\t        var token = this.lookahead;\n\t        var prec = this.binaryPrecedence(token);\n\t        if (prec > 0) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var markers = [startToken, this.lookahead];\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            var stack = [left, token.value, right];\n\t            var precedences = [prec];\n\t            while (true) {\n\t                prec = this.binaryPrecedence(this.lookahead);\n\t                if (prec <= 0) {\n\t                    break;\n\t                }\n\t                // Reduce: make a binary expression from the three topmost entries.\n\t                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {\n\t                    right = stack.pop();\n\t                    var operator = stack.pop();\n\t                    precedences.pop();\n\t                    left = stack.pop();\n\t                    markers.pop();\n\t                    var node = this.startNode(markers[markers.length - 1]);\n\t                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));\n\t                }\n\t                // Shift.\n\t                stack.push(this.nextToken().value);\n\t                precedences.push(prec);\n\t                markers.push(this.lookahead);\n\t                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));\n\t            }\n\t            // Final reduce to clean-up the stack.\n\t            var i = stack.length - 1;\n\t            expr = stack[i];\n\t            var lastMarker = markers.pop();\n\t            while (i > 1) {\n\t                var marker = markers.pop();\n\t                var lastLineStart = lastMarker && lastMarker.lineStart;\n\t                var node = this.startNode(marker, lastLineStart);\n\t                var operator = stack[i - 1];\n\t                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));\n\t                i -= 2;\n\t                lastMarker = marker;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-conditional-operator\n\t    Parser.prototype.parseConditionalExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);\n\t        if (this.match('?')) {\n\t            this.nextToken();\n\t            var previousAllowIn = this.context.allowIn;\n\t            this.context.allowIn = true;\n\t            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowIn = previousAllowIn;\n\t            this.expect(':');\n\t            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-assignment-operators\n\t    Parser.prototype.checkPatternParam = function (options, param) {\n\t        switch (param.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                this.validateParam(options, param, param.name);\n\t                break;\n\t            case syntax_1.Syntax.RestElement:\n\t                this.checkPatternParam(options, param.argument);\n\t                break;\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                this.checkPatternParam(options, param.left);\n\t                break;\n\t            case syntax_1.Syntax.ArrayPattern:\n\t                for (var i = 0; i < param.elements.length; i++) {\n\t                    if (param.elements[i] !== null) {\n\t                        this.checkPatternParam(options, param.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectPattern:\n\t                for (var i = 0; i < param.properties.length; i++) {\n\t                    this.checkPatternParam(options, param.properties[i].value);\n\t                }\n\t                break;\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t    };\n\t    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {\n\t        var params = [expr];\n\t        var options;\n\t        var asyncArrow = false;\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                break;\n\t            case ArrowParameterPlaceHolder:\n\t                params = expr.params;\n\t                asyncArrow = expr.async;\n\t                break;\n\t            default:\n\t                return null;\n\t        }\n\t        options = {\n\t            simple: true,\n\t            paramSet: {}\n\t        };\n\t        for (var i = 0; i < params.length; ++i) {\n\t            var param = params[i];\n\t            if (param.type === syntax_1.Syntax.AssignmentPattern) {\n\t                if (param.right.type === syntax_1.Syntax.YieldExpression) {\n\t                    if (param.right.argument) {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                    param.right.type = syntax_1.Syntax.Identifier;\n\t                    param.right.name = 'yield';\n\t                    delete param.right.argument;\n\t                    delete param.right.delegate;\n\t                }\n\t            }\n\t            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.checkPatternParam(options, param);\n\t            params[i] = param;\n\t        }\n\t        if (this.context.strict || !this.context.allowYield) {\n\t            for (var i = 0; i < params.length; ++i) {\n\t                var param = params[i];\n\t                if (param.type === syntax_1.Syntax.YieldExpression) {\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t                }\n\t            }\n\t        }\n\t        if (options.message === messages_1.Messages.StrictParamDupe) {\n\t            var token = this.context.strict ? options.stricted : options.firstRestricted;\n\t            this.throwUnexpectedToken(token, options.message);\n\t        }\n\t        return {\n\t            simple: options.simple,\n\t            params: params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.parseAssignmentExpression = function () {\n\t        var expr;\n\t        if (!this.context.allowYield && this.matchKeyword('yield')) {\n\t            expr = this.parseYieldExpression();\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var token = startToken;\n\t            expr = this.parseConditionalExpression();\n\t            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {\n\t                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {\n\t                    var arg = this.parsePrimaryExpression();\n\t                    this.reinterpretExpressionAsPattern(arg);\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: [arg],\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {\n\t                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                var isAsync = expr.async;\n\t                var list = this.reinterpretAsCoverFormalsList(expr);\n\t                if (list) {\n\t                    if (this.hasLineTerminator) {\n\t                        this.tolerateUnexpectedToken(this.lookahead);\n\t                    }\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                    var previousStrict = this.context.strict;\n\t                    var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t                    this.context.allowStrictDirective = list.simple;\n\t                    var previousAllowYield = this.context.allowYield;\n\t                    var previousAwait = this.context.await;\n\t                    this.context.allowYield = true;\n\t                    this.context.await = isAsync;\n\t                    var node = this.startNode(startToken);\n\t                    this.expect('=>');\n\t                    var body = void 0;\n\t                    if (this.match('{')) {\n\t                        var previousAllowIn = this.context.allowIn;\n\t                        this.context.allowIn = true;\n\t                        body = this.parseFunctionSourceElements();\n\t                        this.context.allowIn = previousAllowIn;\n\t                    }\n\t                    else {\n\t                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    }\n\t                    var expression = body.type !== syntax_1.Syntax.BlockStatement;\n\t                    if (this.context.strict && list.firstRestricted) {\n\t                        this.throwUnexpectedToken(list.firstRestricted, list.message);\n\t                    }\n\t                    if (this.context.strict && list.stricted) {\n\t                        this.tolerateUnexpectedToken(list.stricted, list.message);\n\t                    }\n\t                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :\n\t                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));\n\t                    this.context.strict = previousStrict;\n\t                    this.context.allowStrictDirective = previousAllowStrictDirective;\n\t                    this.context.allowYield = previousAllowYield;\n\t                    this.context.await = previousAwait;\n\t                }\n\t            }\n\t            else {\n\t                if (this.matchAssign()) {\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {\n\t                        var id = expr;\n\t                        if (this.scanner.isRestrictedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);\n\t                        }\n\t                        if (this.scanner.isStrictModeReservedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t                        }\n\t                    }\n\t                    if (!this.match('=')) {\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                    }\n\t                    else {\n\t                        this.reinterpretExpressionAsPattern(expr);\n\t                    }\n\t                    token = this.nextToken();\n\t                    var operator = token.value;\n\t                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comma-operator\n\t    Parser.prototype.parseExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        if (this.match(',')) {\n\t            var expressions = [];\n\t            expressions.push(expr);\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                if (!this.match(',')) {\n\t                    break;\n\t                }\n\t                this.nextToken();\n\t                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t            }\n\t            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-block\n\t    Parser.prototype.parseStatementListItem = function () {\n\t        var statement;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.isBindingElement = true;\n\t        if (this.lookahead.type === 4 /* Keyword */) {\n\t            switch (this.lookahead.value) {\n\t                case 'export':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);\n\t                    }\n\t                    statement = this.parseExportDeclaration();\n\t                    break;\n\t                case 'import':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);\n\t                    }\n\t                    statement = this.parseImportDeclaration();\n\t                    break;\n\t                case 'const':\n\t                    statement = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'function':\n\t                    statement = this.parseFunctionDeclaration();\n\t                    break;\n\t                case 'class':\n\t                    statement = this.parseClassDeclaration();\n\t                    break;\n\t                case 'let':\n\t                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();\n\t                    break;\n\t                default:\n\t                    statement = this.parseStatement();\n\t                    break;\n\t            }\n\t        }\n\t        else {\n\t            statement = this.parseStatement();\n\t        }\n\t        return statement;\n\t    };\n\t    Parser.prototype.parseBlock = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var block = [];\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            block.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.BlockStatement(block));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations\n\t    Parser.prototype.parseLexicalBinding = function (kind, options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, kind);\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (kind === 'const') {\n\t            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {\n\t                if (this.match('=')) {\n\t                    this.nextToken();\n\t                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                }\n\t                else {\n\t                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');\n\t                }\n\t            }\n\t        }\n\t        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {\n\t            this.expect('=');\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseBindingList = function (kind, options) {\n\t        var list = [this.parseLexicalBinding(kind, options)];\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseLexicalBinding(kind, options));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.isLexicalDeclaration = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.scanner.lex();\n\t        this.scanner.restoreState(state);\n\t        return (next.type === 3 /* Identifier */) ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '[') ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '{') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'let') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'yield');\n\t    };\n\t    Parser.prototype.parseLexicalDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var kind = this.nextToken().value;\n\t        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');\n\t        var declarations = this.parseBindingList(kind, options);\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns\n\t    Parser.prototype.parseBindingRestElement = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params, kind);\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('[');\n\t        var elements = [];\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else {\n\t                if (this.match('...')) {\n\t                    elements.push(this.parseBindingRestElement(params, kind));\n\t                    break;\n\t                }\n\t                else {\n\t                    elements.push(this.parsePatternWithDefault(params, kind));\n\t                }\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayPattern(elements));\n\t    };\n\t    Parser.prototype.parsePropertyPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var computed = false;\n\t        var shorthand = false;\n\t        var method = false;\n\t        var key;\n\t        var value;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            var keyToken = this.lookahead;\n\t            key = this.parseVariableIdentifier();\n\t            var init = this.finalize(node, new Node.Identifier(keyToken.value));\n\t            if (this.match('=')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                this.nextToken();\n\t                var expr = this.parseAssignmentExpression();\n\t                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));\n\t            }\n\t            else if (!this.match(':')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                value = init;\n\t            }\n\t            else {\n\t                this.expect(':');\n\t                value = this.parsePatternWithDefault(params, kind);\n\t            }\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.expect(':');\n\t            value = this.parsePatternWithDefault(params, kind);\n\t        }\n\t        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var properties = [];\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            properties.push(this.parsePropertyPattern(params, kind));\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectPattern(properties));\n\t    };\n\t    Parser.prototype.parsePattern = function (params, kind) {\n\t        var pattern;\n\t        if (this.match('[')) {\n\t            pattern = this.parseArrayPattern(params, kind);\n\t        }\n\t        else if (this.match('{')) {\n\t            pattern = this.parseObjectPattern(params, kind);\n\t        }\n\t        else {\n\t            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {\n\t                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);\n\t            }\n\t            params.push(this.lookahead);\n\t            pattern = this.parseVariableIdentifier(kind);\n\t        }\n\t        return pattern;\n\t    };\n\t    Parser.prototype.parsePatternWithDefault = function (params, kind) {\n\t        var startToken = this.lookahead;\n\t        var pattern = this.parsePattern(params, kind);\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = true;\n\t            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowYield = previousAllowYield;\n\t            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));\n\t        }\n\t        return pattern;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-variable-statement\n\t    Parser.prototype.parseVariableIdentifier = function (kind) {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (token.type === 4 /* Keyword */ && token.value === 'yield') {\n\t            if (this.context.strict) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else if (!this.context.allowYield) {\n\t                this.throwUnexpectedToken(token);\n\t            }\n\t        }\n\t        else if (token.type !== 3 /* Identifier */) {\n\t            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else {\n\t                if (this.context.strict || token.value !== 'let' || kind !== 'var') {\n\t                    this.throwUnexpectedToken(token);\n\t                }\n\t            }\n\t        }\n\t        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {\n\t            this.tolerateUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseVariableDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, 'var');\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {\n\t            this.expect('=');\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseVariableDeclarationList = function (options) {\n\t        var opt = { inFor: options.inFor };\n\t        var list = [];\n\t        list.push(this.parseVariableDeclaration(opt));\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseVariableDeclaration(opt));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.parseVariableStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('var');\n\t        var declarations = this.parseVariableDeclarationList({ inFor: false });\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-empty-statement\n\t    Parser.prototype.parseEmptyStatement = function () {\n\t        var node = this.createNode();\n\t        this.expect(';');\n\t        return this.finalize(node, new Node.EmptyStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-expression-statement\n\t    Parser.prototype.parseExpressionStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ExpressionStatement(expr));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-if-statement\n\t    Parser.prototype.parseIfClause = function () {\n\t        if (this.context.strict && this.matchKeyword('function')) {\n\t            this.tolerateError(messages_1.Messages.StrictFunction);\n\t        }\n\t        return this.parseStatement();\n\t    };\n\t    Parser.prototype.parseIfStatement = function () {\n\t        var node = this.createNode();\n\t        var consequent;\n\t        var alternate = null;\n\t        this.expectKeyword('if');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            consequent = this.parseIfClause();\n\t            if (this.matchKeyword('else')) {\n\t                this.nextToken();\n\t                alternate = this.parseIfClause();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-do-while-statement\n\t    Parser.prototype.parseDoWhileStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('do');\n\t        var previousInIteration = this.context.inIteration;\n\t        this.context.inIteration = true;\n\t        var body = this.parseStatement();\n\t        this.context.inIteration = previousInIteration;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.DoWhileStatement(body, test));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-while-statement\n\t    Parser.prototype.parseWhileStatement = function () {\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.parseStatement();\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return this.finalize(node, new Node.WhileStatement(test, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-for-statement\n\t    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\n\t    Parser.prototype.parseForStatement = function () {\n\t        var init = null;\n\t        var test = null;\n\t        var update = null;\n\t        var forIn = true;\n\t        var left, right;\n\t        var node = this.createNode();\n\t        this.expectKeyword('for');\n\t        this.expect('(');\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            if (this.matchKeyword('var')) {\n\t                init = this.createNode();\n\t                this.nextToken();\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                var declarations = this.parseVariableDeclarationList({ inFor: true });\n\t                this.context.allowIn = previousAllowIn;\n\t                if (declarations.length === 1 && this.matchKeyword('in')) {\n\t                    var decl = declarations[0];\n\t                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {\n\t                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');\n\t                    }\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.expect(';');\n\t                }\n\t            }\n\t            else if (this.matchKeyword('const') || this.matchKeyword('let')) {\n\t                init = this.createNode();\n\t                var kind = this.nextToken().value;\n\t                if (!this.context.strict && this.lookahead.value === 'in') {\n\t                    init = this.finalize(init, new Node.Identifier(kind));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else {\n\t                    var previousAllowIn = this.context.allowIn;\n\t                    this.context.allowIn = false;\n\t                    var declarations = this.parseBindingList(kind, { inFor: true });\n\t                    this.context.allowIn = previousAllowIn;\n\t                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseExpression();\n\t                        init = null;\n\t                    }\n\t                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseAssignmentExpression();\n\t                        init = null;\n\t                        forIn = false;\n\t                    }\n\t                    else {\n\t                        this.consumeSemicolon();\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                var initStartToken = this.lookahead;\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                init = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                this.context.allowIn = previousAllowIn;\n\t                if (this.matchKeyword('in')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (this.matchContextualKeyword('of')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    if (this.match(',')) {\n\t                        var initSeq = [init];\n\t                        while (this.match(',')) {\n\t                            this.nextToken();\n\t                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));\n\t                    }\n\t                    this.expect(';');\n\t                }\n\t            }\n\t        }\n\t        if (typeof left === 'undefined') {\n\t            if (!this.match(';')) {\n\t                test = this.parseExpression();\n\t            }\n\t            this.expect(';');\n\t            if (!this.match(')')) {\n\t                update = this.parseExpression();\n\t            }\n\t        }\n\t        var body;\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.isolateCoverGrammar(this.parseStatement);\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return (typeof left === 'undefined') ?\n\t            this.finalize(node, new Node.ForStatement(init, test, update, body)) :\n\t            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :\n\t                this.finalize(node, new Node.ForOfStatement(left, right, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-continue-statement\n\t    Parser.prototype.parseContinueStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('continue');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            label = id;\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration) {\n\t            this.throwError(messages_1.Messages.IllegalContinue);\n\t        }\n\t        return this.finalize(node, new Node.ContinueStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-break-statement\n\t    Parser.prototype.parseBreakStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('break');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t            label = id;\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration && !this.context.inSwitch) {\n\t            this.throwError(messages_1.Messages.IllegalBreak);\n\t        }\n\t        return this.finalize(node, new Node.BreakStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-return-statement\n\t    Parser.prototype.parseReturnStatement = function () {\n\t        if (!this.context.inFunctionBody) {\n\t            this.tolerateError(messages_1.Messages.IllegalReturn);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('return');\n\t        var hasArgument = (!this.match(';') && !this.match('}') &&\n\t            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */) ||\n\t            this.lookahead.type === 8 /* StringLiteral */ ||\n\t            this.lookahead.type === 10 /* Template */;\n\t        var argument = hasArgument ? this.parseExpression() : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ReturnStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-with-statement\n\t    Parser.prototype.parseWithStatement = function () {\n\t        if (this.context.strict) {\n\t            this.tolerateError(messages_1.Messages.StrictModeWith);\n\t        }\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('with');\n\t        this.expect('(');\n\t        var object = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            body = this.parseStatement();\n\t        }\n\t        return this.finalize(node, new Node.WithStatement(object, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-switch-statement\n\t    Parser.prototype.parseSwitchCase = function () {\n\t        var node = this.createNode();\n\t        var test;\n\t        if (this.matchKeyword('default')) {\n\t            this.nextToken();\n\t            test = null;\n\t        }\n\t        else {\n\t            this.expectKeyword('case');\n\t            test = this.parseExpression();\n\t        }\n\t        this.expect(':');\n\t        var consequent = [];\n\t        while (true) {\n\t            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {\n\t                break;\n\t            }\n\t            consequent.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.SwitchCase(test, consequent));\n\t    };\n\t    Parser.prototype.parseSwitchStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('switch');\n\t        this.expect('(');\n\t        var discriminant = this.parseExpression();\n\t        this.expect(')');\n\t        var previousInSwitch = this.context.inSwitch;\n\t        this.context.inSwitch = true;\n\t        var cases = [];\n\t        var defaultFound = false;\n\t        this.expect('{');\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            var clause = this.parseSwitchCase();\n\t            if (clause.test === null) {\n\t                if (defaultFound) {\n\t                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);\n\t                }\n\t                defaultFound = true;\n\t            }\n\t            cases.push(clause);\n\t        }\n\t        this.expect('}');\n\t        this.context.inSwitch = previousInSwitch;\n\t        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-labelled-statements\n\t    Parser.prototype.parseLabelledStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var statement;\n\t        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {\n\t            this.nextToken();\n\t            var id = expr;\n\t            var key = '$' + id.name;\n\t            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);\n\t            }\n\t            this.context.labelSet[key] = true;\n\t            var body = void 0;\n\t            if (this.matchKeyword('class')) {\n\t                this.tolerateUnexpectedToken(this.lookahead);\n\t                body = this.parseClassDeclaration();\n\t            }\n\t            else if (this.matchKeyword('function')) {\n\t                var token = this.lookahead;\n\t                var declaration = this.parseFunctionDeclaration();\n\t                if (this.context.strict) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);\n\t                }\n\t                else if (declaration.generator) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);\n\t                }\n\t                body = declaration;\n\t            }\n\t            else {\n\t                body = this.parseStatement();\n\t            }\n\t            delete this.context.labelSet[key];\n\t            statement = new Node.LabeledStatement(id, body);\n\t        }\n\t        else {\n\t            this.consumeSemicolon();\n\t            statement = new Node.ExpressionStatement(expr);\n\t        }\n\t        return this.finalize(node, statement);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-throw-statement\n\t    Parser.prototype.parseThrowStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('throw');\n\t        if (this.hasLineTerminator) {\n\t            this.throwError(messages_1.Messages.NewlineAfterThrow);\n\t        }\n\t        var argument = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ThrowStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-try-statement\n\t    Parser.prototype.parseCatchClause = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('catch');\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        var params = [];\n\t        var param = this.parsePattern(params);\n\t        var paramMap = {};\n\t        for (var i = 0; i < params.length; i++) {\n\t            var key = '$' + params[i].value;\n\t            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {\n\t                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);\n\t            }\n\t            paramMap[key] = true;\n\t        }\n\t        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(param.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictCatchVariable);\n\t            }\n\t        }\n\t        this.expect(')');\n\t        var body = this.parseBlock();\n\t        return this.finalize(node, new Node.CatchClause(param, body));\n\t    };\n\t    Parser.prototype.parseFinallyClause = function () {\n\t        this.expectKeyword('finally');\n\t        return this.parseBlock();\n\t    };\n\t    Parser.prototype.parseTryStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('try');\n\t        var block = this.parseBlock();\n\t        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;\n\t        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;\n\t        if (!handler && !finalizer) {\n\t            this.throwError(messages_1.Messages.NoCatchOrFinally);\n\t        }\n\t        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-debugger-statement\n\t    Parser.prototype.parseDebuggerStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('debugger');\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.DebuggerStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations\n\t    Parser.prototype.parseStatement = function () {\n\t        var statement;\n\t        switch (this.lookahead.type) {\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t            case 10 /* Template */:\n\t            case 9 /* RegularExpression */:\n\t                statement = this.parseExpressionStatement();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                var value = this.lookahead.value;\n\t                if (value === '{') {\n\t                    statement = this.parseBlock();\n\t                }\n\t                else if (value === '(') {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                else if (value === ';') {\n\t                    statement = this.parseEmptyStatement();\n\t                }\n\t                else {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                break;\n\t            case 3 /* Identifier */:\n\t                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();\n\t                break;\n\t            case 4 /* Keyword */:\n\t                switch (this.lookahead.value) {\n\t                    case 'break':\n\t                        statement = this.parseBreakStatement();\n\t                        break;\n\t                    case 'continue':\n\t                        statement = this.parseContinueStatement();\n\t                        break;\n\t                    case 'debugger':\n\t                        statement = this.parseDebuggerStatement();\n\t                        break;\n\t                    case 'do':\n\t                        statement = this.parseDoWhileStatement();\n\t                        break;\n\t                    case 'for':\n\t                        statement = this.parseForStatement();\n\t                        break;\n\t                    case 'function':\n\t                        statement = this.parseFunctionDeclaration();\n\t                        break;\n\t                    case 'if':\n\t                        statement = this.parseIfStatement();\n\t                        break;\n\t                    case 'return':\n\t                        statement = this.parseReturnStatement();\n\t                        break;\n\t                    case 'switch':\n\t                        statement = this.parseSwitchStatement();\n\t                        break;\n\t                    case 'throw':\n\t                        statement = this.parseThrowStatement();\n\t                        break;\n\t                    case 'try':\n\t                        statement = this.parseTryStatement();\n\t                        break;\n\t                    case 'var':\n\t                        statement = this.parseVariableStatement();\n\t                        break;\n\t                    case 'while':\n\t                        statement = this.parseWhileStatement();\n\t                        break;\n\t                    case 'with':\n\t                        statement = this.parseWithStatement();\n\t                        break;\n\t                    default:\n\t                        statement = this.parseExpressionStatement();\n\t                        break;\n\t                }\n\t                break;\n\t            default:\n\t                statement = this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return statement;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-function-definitions\n\t    Parser.prototype.parseFunctionSourceElements = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var body = this.parseDirectivePrologues();\n\t        var previousLabelSet = this.context.labelSet;\n\t        var previousInIteration = this.context.inIteration;\n\t        var previousInSwitch = this.context.inSwitch;\n\t        var previousInFunctionBody = this.context.inFunctionBody;\n\t        this.context.labelSet = {};\n\t        this.context.inIteration = false;\n\t        this.context.inSwitch = false;\n\t        this.context.inFunctionBody = true;\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        this.context.labelSet = previousLabelSet;\n\t        this.context.inIteration = previousInIteration;\n\t        this.context.inSwitch = previousInSwitch;\n\t        this.context.inFunctionBody = previousInFunctionBody;\n\t        return this.finalize(node, new Node.BlockStatement(body));\n\t    };\n\t    Parser.prototype.validateParam = function (options, param, name) {\n\t        var key = '$' + name;\n\t        if (this.context.strict) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        else if (!options.firstRestricted) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            else if (this.scanner.isStrictModeReservedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictReservedWord;\n\t            }\n\t            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        if (typeof Object.defineProperty === 'function') {\n\t            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });\n\t        }\n\t        else {\n\t            options.paramSet[key] = true;\n\t        }\n\t    };\n\t    Parser.prototype.parseRestElement = function (params) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params);\n\t        if (this.match('=')) {\n\t            this.throwError(messages_1.Messages.DefaultRestParameter);\n\t        }\n\t        if (!this.match(')')) {\n\t            this.throwError(messages_1.Messages.ParameterAfterRestParameter);\n\t        }\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseFormalParameter = function (options) {\n\t        var params = [];\n\t        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);\n\t        for (var i = 0; i < params.length; i++) {\n\t            this.validateParam(options, params[i], params[i].value);\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t        options.params.push(param);\n\t    };\n\t    Parser.prototype.parseFormalParameters = function (firstRestricted) {\n\t        var options;\n\t        options = {\n\t            simple: true,\n\t            params: [],\n\t            firstRestricted: firstRestricted\n\t        };\n\t        this.expect('(');\n\t        if (!this.match(')')) {\n\t            options.paramSet = {};\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                this.parseFormalParameter(options);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expect(',');\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return {\n\t            simple: options.simple,\n\t            params: options.params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.matchAsyncFunction = function () {\n\t        var match = this.matchContextualKeyword('async');\n\t        if (match) {\n\t            var state = this.scanner.saveState();\n\t            this.scanner.scanComments();\n\t            var next = this.scanner.lex();\n\t            this.scanner.restoreState(state);\n\t            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');\n\t        }\n\t        return match;\n\t    };\n\t    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted = null;\n\t        if (!identifierIsOptional || !this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));\n\t    };\n\t    Parser.prototype.parseFunctionExpression = function () {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted;\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        if (!this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive\n\t    Parser.prototype.parseDirective = function () {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));\n\t    };\n\t    Parser.prototype.parseDirectivePrologues = function () {\n\t        var firstRestricted = null;\n\t        var body = [];\n\t        while (true) {\n\t            var token = this.lookahead;\n\t            if (token.type !== 8 /* StringLiteral */) {\n\t                break;\n\t            }\n\t            var statement = this.parseDirective();\n\t            body.push(statement);\n\t            var directive = statement.directive;\n\t            if (typeof directive !== 'string') {\n\t                break;\n\t            }\n\t            if (directive === 'use strict') {\n\t                this.context.strict = true;\n\t                if (firstRestricted) {\n\t                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                if (!this.context.allowStrictDirective) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);\n\t                }\n\t            }\n\t            else {\n\t                if (!firstRestricted && token.octal) {\n\t                    firstRestricted = token;\n\t                }\n\t            }\n\t        }\n\t        return body;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-method-definitions\n\t    Parser.prototype.qualifiedPropertyName = function (token) {\n\t        switch (token.type) {\n\t            case 3 /* Identifier */:\n\t            case 8 /* StringLiteral */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 4 /* Keyword */:\n\t                return true;\n\t            case 7 /* Punctuator */:\n\t                return token.value === '[';\n\t        }\n\t        return false;\n\t    };\n\t    Parser.prototype.parseGetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length > 0) {\n\t            this.tolerateError(messages_1.Messages.BadGetterArity);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseSetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length !== 1) {\n\t            this.tolerateError(messages_1.Messages.BadSetterArity);\n\t        }\n\t        else if (formalParameters.params[0] instanceof Node.RestElement) {\n\t            this.tolerateError(messages_1.Messages.BadSetterRestParameter);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseGeneratorMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = true;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        this.context.allowYield = false;\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-generator-function-definitions\n\t    Parser.prototype.isStartOfExpression = function () {\n\t        var start = true;\n\t        var value = this.lookahead.value;\n\t        switch (this.lookahead.type) {\n\t            case 7 /* Punctuator */:\n\t                start = (value === '[') || (value === '(') || (value === '{') ||\n\t                    (value === '+') || (value === '-') ||\n\t                    (value === '!') || (value === '~') ||\n\t                    (value === '++') || (value === '--') ||\n\t                    (value === '/') || (value === '/='); // regular expression literal\n\t                break;\n\t            case 4 /* Keyword */:\n\t                start = (value === 'class') || (value === 'delete') ||\n\t                    (value === 'function') || (value === 'let') || (value === 'new') ||\n\t                    (value === 'super') || (value === 'this') || (value === 'typeof') ||\n\t                    (value === 'void') || (value === 'yield');\n\t                break;\n\t        }\n\t        return start;\n\t    };\n\t    Parser.prototype.parseYieldExpression = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('yield');\n\t        var argument = null;\n\t        var delegate = false;\n\t        if (!this.hasLineTerminator) {\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = false;\n\t            delegate = this.match('*');\n\t            if (delegate) {\n\t                this.nextToken();\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            else if (this.isStartOfExpression()) {\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            this.context.allowYield = previousAllowYield;\n\t        }\n\t        return this.finalize(node, new Node.YieldExpression(argument, delegate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-class-definitions\n\t    Parser.prototype.parseClassElement = function (hasConstructor) {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var kind = '';\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var isStatic = false;\n\t        var isAsync = false;\n\t        if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            var id = key;\n\t            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {\n\t                token = this.lookahead;\n\t                isStatic = true;\n\t                computed = this.match('[');\n\t                if (this.match('*')) {\n\t                    this.nextToken();\n\t                }\n\t                else {\n\t                    key = this.parseObjectPropertyKey();\n\t                }\n\t            }\n\t            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {\n\t                var punctuator = this.lookahead.value;\n\t                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {\n\t                    isAsync = true;\n\t                    token = this.lookahead;\n\t                    key = this.parseObjectPropertyKey();\n\t                    if (token.type === 3 /* Identifier */ && token.value === 'constructor') {\n\t                        this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */) {\n\t            if (token.value === 'get' && lookaheadPropertyKey) {\n\t                kind = 'get';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                this.context.allowYield = false;\n\t                value = this.parseGetterMethod();\n\t            }\n\t            else if (token.value === 'set' && lookaheadPropertyKey) {\n\t                kind = 'set';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                value = this.parseSetterMethod();\n\t            }\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        if (!kind && key && this.match('(')) {\n\t            kind = 'init';\n\t            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t            method = true;\n\t        }\n\t        if (!kind) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        if (kind === 'init') {\n\t            kind = 'method';\n\t        }\n\t        if (!computed) {\n\t            if (isStatic && this.isPropertyKey(key, 'prototype')) {\n\t                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);\n\t            }\n\t            if (!isStatic && this.isPropertyKey(key, 'constructor')) {\n\t                if (kind !== 'method' || !method || (value && value.generator)) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);\n\t                }\n\t                if (hasConstructor.value) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);\n\t                }\n\t                else {\n\t                    hasConstructor.value = true;\n\t                }\n\t                kind = 'constructor';\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));\n\t    };\n\t    Parser.prototype.parseClassElementList = function () {\n\t        var body = [];\n\t        var hasConstructor = { value: false };\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t            else {\n\t                body.push(this.parseClassElement(hasConstructor));\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return body;\n\t    };\n\t    Parser.prototype.parseClassBody = function () {\n\t        var node = this.createNode();\n\t        var elementList = this.parseClassElementList();\n\t        return this.finalize(node, new Node.ClassBody(elementList));\n\t    };\n\t    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));\n\t    };\n\t    Parser.prototype.parseClassExpression = function () {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-scripts\n\t    // https://tc39.github.io/ecma262/#sec-modules\n\t    Parser.prototype.parseModule = function () {\n\t        this.context.strict = true;\n\t        this.context.isModule = true;\n\t        this.scanner.isModule = true;\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Module(body));\n\t    };\n\t    Parser.prototype.parseScript = function () {\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Script(body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-imports\n\t    Parser.prototype.parseModuleSpecifier = function () {\n\t        var node = this.createNode();\n\t        if (this.lookahead.type !== 8 /* StringLiteral */) {\n\t            this.throwError(messages_1.Messages.InvalidModuleSpecifier);\n\t        }\n\t        var token = this.nextToken();\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    // import {<foo as bar>} ...;\n\t    Parser.prototype.parseImportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var imported;\n\t        var local;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            imported = this.parseVariableIdentifier();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t        }\n\t        else {\n\t            imported = this.parseIdentifierName();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.ImportSpecifier(local, imported));\n\t    };\n\t    // {foo, bar as bas}\n\t    Parser.prototype.parseNamedImports = function () {\n\t        this.expect('{');\n\t        var specifiers = [];\n\t        while (!this.match('}')) {\n\t            specifiers.push(this.parseImportSpecifier());\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return specifiers;\n\t    };\n\t    // import <foo> ...;\n\t    Parser.prototype.parseImportDefaultSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportDefaultSpecifier(local));\n\t    };\n\t    // import <* as foo> ...;\n\t    Parser.prototype.parseImportNamespaceSpecifier = function () {\n\t        var node = this.createNode();\n\t        this.expect('*');\n\t        if (!this.matchContextualKeyword('as')) {\n\t            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);\n\t        }\n\t        this.nextToken();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));\n\t    };\n\t    Parser.prototype.parseImportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalImportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('import');\n\t        var src;\n\t        var specifiers = [];\n\t        if (this.lookahead.type === 8 /* StringLiteral */) {\n\t            // import 'foo';\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        else {\n\t            if (this.match('{')) {\n\t                // import {bar}\n\t                specifiers = specifiers.concat(this.parseNamedImports());\n\t            }\n\t            else if (this.match('*')) {\n\t                // import * as foo\n\t                specifiers.push(this.parseImportNamespaceSpecifier());\n\t            }\n\t            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {\n\t                // import foo\n\t                specifiers.push(this.parseImportDefaultSpecifier());\n\t                if (this.match(',')) {\n\t                    this.nextToken();\n\t                    if (this.match('*')) {\n\t                        // import foo, * as foo\n\t                        specifiers.push(this.parseImportNamespaceSpecifier());\n\t                    }\n\t                    else if (this.match('{')) {\n\t                        // import foo, {bar}\n\t                        specifiers = specifiers.concat(this.parseNamedImports());\n\t                    }\n\t                    else {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exports\n\t    Parser.prototype.parseExportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        var exported = local;\n\t        if (this.matchContextualKeyword('as')) {\n\t            this.nextToken();\n\t            exported = this.parseIdentifierName();\n\t        }\n\t        return this.finalize(node, new Node.ExportSpecifier(local, exported));\n\t    };\n\t    Parser.prototype.parseExportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalExportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('export');\n\t        var exportDeclaration;\n\t        if (this.matchKeyword('default')) {\n\t            // export default ...\n\t            this.nextToken();\n\t            if (this.matchKeyword('function')) {\n\t                // export default function foo () {}\n\t                // export default function () {}\n\t                var declaration = this.parseFunctionDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchKeyword('class')) {\n\t                // export default class foo {}\n\t                var declaration = this.parseClassDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchContextualKeyword('async')) {\n\t                // export default async function f () {}\n\t                // export default async function () {}\n\t                // export default async x => x\n\t                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else {\n\t                if (this.matchContextualKeyword('from')) {\n\t                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);\n\t                }\n\t                // export default {};\n\t                // export default [];\n\t                // export default (1 + 2);\n\t                var declaration = this.match('{') ? this.parseObjectInitializer() :\n\t                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();\n\t                this.consumeSemicolon();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t        }\n\t        else if (this.match('*')) {\n\t            // export * from 'foo';\n\t            this.nextToken();\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            var src = this.parseModuleSpecifier();\n\t            this.consumeSemicolon();\n\t            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));\n\t        }\n\t        else if (this.lookahead.type === 4 /* Keyword */) {\n\t            // export var f = 1;\n\t            var declaration = void 0;\n\t            switch (this.lookahead.value) {\n\t                case 'let':\n\t                case 'const':\n\t                    declaration = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'var':\n\t                case 'class':\n\t                case 'function':\n\t                    declaration = this.parseStatementListItem();\n\t                    break;\n\t                default:\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else if (this.matchAsyncFunction()) {\n\t            var declaration = this.parseFunctionDeclaration();\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else {\n\t            var specifiers = [];\n\t            var source = null;\n\t            var isExportFromIdentifier = false;\n\t            this.expect('{');\n\t            while (!this.match('}')) {\n\t                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');\n\t                specifiers.push(this.parseExportSpecifier());\n\t                if (!this.match('}')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t            this.expect('}');\n\t            if (this.matchContextualKeyword('from')) {\n\t                // export {default} from 'foo';\n\t                // export {foo} from 'foo';\n\t                this.nextToken();\n\t                source = this.parseModuleSpecifier();\n\t                this.consumeSemicolon();\n\t            }\n\t            else if (isExportFromIdentifier) {\n\t                // export {default}; // missing fromClause\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            else {\n\t                // export {foo};\n\t                this.consumeSemicolon();\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));\n\t        }\n\t        return exportDeclaration;\n\t    };\n\t    return Parser;\n\t}());\n\texports.Parser = Parser;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\t// Ensure the condition is true, otherwise throw an error.\n\t// This is only to have a better contract semantic, i.e. another safety net\n\t// to catch a logic error. The condition shall be fulfilled in normal case.\n\t// Do NOT use this to enforce a certain condition on any user input.\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tfunction assert(condition, message) {\n\t    /* istanbul ignore if */\n\t    if (!condition) {\n\t        throw new Error('ASSERT: ' + message);\n\t    }\n\t}\n\texports.assert = assert;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\t/* tslint:disable:max-classes-per-file */\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar ErrorHandler = (function () {\n\t    function ErrorHandler() {\n\t        this.errors = [];\n\t        this.tolerant = false;\n\t    }\n\t    ErrorHandler.prototype.recordError = function (error) {\n\t        this.errors.push(error);\n\t    };\n\t    ErrorHandler.prototype.tolerate = function (error) {\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    ErrorHandler.prototype.constructError = function (msg, column) {\n\t        var error = new Error(msg);\n\t        try {\n\t            throw error;\n\t        }\n\t        catch (base) {\n\t            /* istanbul ignore else */\n\t            if (Object.create && Object.defineProperty) {\n\t                error = Object.create(base);\n\t                Object.defineProperty(error, 'column', { value: column });\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.createError = function (index, line, col, description) {\n\t        var msg = 'Line ' + line + ': ' + description;\n\t        var error = this.constructError(msg, col);\n\t        error.index = index;\n\t        error.lineNumber = line;\n\t        error.description = description;\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.throwError = function (index, line, col, description) {\n\t        throw this.createError(index, line, col, description);\n\t    };\n\t    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {\n\t        var error = this.createError(index, line, col, description);\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    return ErrorHandler;\n\t}());\n\texports.ErrorHandler = ErrorHandler;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// Error messages should be identical to V8.\n\texports.Messages = {\n\t    BadGetterArity: 'Getter must not have any formal parameters',\n\t    BadSetterArity: 'Setter must have exactly one formal parameter',\n\t    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',\n\t    ConstructorIsAsync: 'Class constructor may not be an async method',\n\t    ConstructorSpecialMethod: 'Class constructor may not be an accessor',\n\t    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',\n\t    DefaultRestParameter: 'Unexpected token =',\n\t    DuplicateBinding: 'Duplicate binding %0',\n\t    DuplicateConstructor: 'A class may only have one constructor',\n\t    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',\n\t    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',\n\t    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',\n\t    IllegalBreak: 'Illegal break statement',\n\t    IllegalContinue: 'Illegal continue statement',\n\t    IllegalExportDeclaration: 'Unexpected token',\n\t    IllegalImportDeclaration: 'Unexpected token',\n\t    IllegalLanguageModeDirective: 'Illegal \\'use strict\\' directive in function with non-simple parameter list',\n\t    IllegalReturn: 'Illegal return statement',\n\t    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',\n\t    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',\n\t    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',\n\t    InvalidLHSInForIn: 'Invalid left-hand side in for-in',\n\t    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',\n\t    InvalidModuleSpecifier: 'Unexpected token',\n\t    InvalidRegExp: 'Invalid regular expression',\n\t    LetInLexicalBinding: 'let is disallowed as a lexically bound name',\n\t    MissingFromClause: 'Unexpected token',\n\t    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n\t    NewlineAfterThrow: 'Illegal newline after throw',\n\t    NoAsAfterImportNamespace: 'Unexpected token',\n\t    NoCatchOrFinally: 'Missing catch or finally after try',\n\t    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',\n\t    Redeclaration: '%0 \\'%1\\' has already been declared',\n\t    StaticPrototype: 'Classes may not have static property named prototype',\n\t    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\n\t    StrictDelete: 'Delete of an unqualified identifier in strict mode.',\n\t    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',\n\t    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',\n\t    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\n\t    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictModeWith: 'Strict mode code may not include a with statement',\n\t    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\n\t    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n\t    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\n\t    StrictReservedWord: 'Use of future reserved word in strict mode',\n\t    StrictVarName: 'Variable name may not be eval or arguments in strict mode',\n\t    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',\n\t    UnexpectedEOS: 'Unexpected end of input',\n\t    UnexpectedIdentifier: 'Unexpected identifier',\n\t    UnexpectedNumber: 'Unexpected number',\n\t    UnexpectedReserved: 'Unexpected reserved word',\n\t    UnexpectedString: 'Unexpected string',\n\t    UnexpectedTemplate: 'Unexpected quasi %0',\n\t    UnexpectedToken: 'Unexpected token %0',\n\t    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',\n\t    UnknownLabel: 'Undefined label \\'%0\\'',\n\t    UnterminatedRegExp: 'Invalid regular expression: missing /'\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar character_1 = __webpack_require__(4);\n\tvar messages_1 = __webpack_require__(11);\n\tfunction hexValue(ch) {\n\t    return '0123456789abcdef'.indexOf(ch.toLowerCase());\n\t}\n\tfunction octalValue(ch) {\n\t    return '01234567'.indexOf(ch);\n\t}\n\tvar Scanner = (function () {\n\t    function Scanner(code, handler) {\n\t        this.source = code;\n\t        this.errorHandler = handler;\n\t        this.trackComment = false;\n\t        this.isModule = false;\n\t        this.length = code.length;\n\t        this.index = 0;\n\t        this.lineNumber = (code.length > 0) ? 1 : 0;\n\t        this.lineStart = 0;\n\t        this.curlyStack = [];\n\t    }\n\t    Scanner.prototype.saveState = function () {\n\t        return {\n\t            index: this.index,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart\n\t        };\n\t    };\n\t    Scanner.prototype.restoreState = function (state) {\n\t        this.index = state.index;\n\t        this.lineNumber = state.lineNumber;\n\t        this.lineStart = state.lineStart;\n\t    };\n\t    Scanner.prototype.eof = function () {\n\t        return this.index >= this.length;\n\t    };\n\t    Scanner.prototype.throwUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    Scanner.prototype.tolerateUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comments\n\t    Scanner.prototype.skipSingleLineComment = function (offset) {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - offset;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - offset\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            ++this.index;\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (this.trackComment) {\n\t                    loc.end = {\n\t                        line: this.lineNumber,\n\t                        column: this.index - this.lineStart - 1\n\t                    };\n\t                    var entry = {\n\t                        multiLine: false,\n\t                        slice: [start + offset, this.index - 1],\n\t                        range: [start, this.index - 1],\n\t                        loc: loc\n\t                    };\n\t                    comments.push(entry);\n\t                }\n\t                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                return comments;\n\t            }\n\t        }\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: false,\n\t                slice: [start + offset, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        return comments;\n\t    };\n\t    Scanner.prototype.skipMultiLineComment = function () {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - 2;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - 2\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                ++this.index;\n\t                this.lineStart = this.index;\n\t            }\n\t            else if (ch === 0x2A) {\n\t                // Block comment ends with '*/'.\n\t                if (this.source.charCodeAt(this.index + 1) === 0x2F) {\n\t                    this.index += 2;\n\t                    if (this.trackComment) {\n\t                        loc.end = {\n\t                            line: this.lineNumber,\n\t                            column: this.index - this.lineStart\n\t                        };\n\t                        var entry = {\n\t                            multiLine: true,\n\t                            slice: [start + 2, this.index - 2],\n\t                            range: [start, this.index],\n\t                            loc: loc\n\t                        };\n\t                        comments.push(entry);\n\t                    }\n\t                    return comments;\n\t                }\n\t                ++this.index;\n\t            }\n\t            else {\n\t                ++this.index;\n\t            }\n\t        }\n\t        // Ran off the end of the file - the whole thing is a comment\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: true,\n\t                slice: [start + 2, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        this.tolerateUnexpectedToken();\n\t        return comments;\n\t    };\n\t    Scanner.prototype.scanComments = function () {\n\t        var comments;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t        }\n\t        var start = (this.index === 0);\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isWhiteSpace(ch)) {\n\t                ++this.index;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch)) {\n\t                ++this.index;\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                start = true;\n\t            }\n\t            else if (ch === 0x2F) {\n\t                ch = this.source.charCodeAt(this.index + 1);\n\t                if (ch === 0x2F) {\n\t                    this.index += 2;\n\t                    var comment = this.skipSingleLineComment(2);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                    start = true;\n\t                }\n\t                else if (ch === 0x2A) {\n\t                    this.index += 2;\n\t                    var comment = this.skipMultiLineComment();\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (start && ch === 0x2D) {\n\t                // U+003E is '>'\n\t                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {\n\t                    // '-->' is a single-line comment\n\t                    this.index += 3;\n\t                    var comment = this.skipSingleLineComment(3);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (ch === 0x3C && !this.isModule) {\n\t                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {\n\t                    this.index += 4; // `<!--`\n\t                    var comment = this.skipSingleLineComment(4);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return comments;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-future-reserved-words\n\t    Scanner.prototype.isFutureReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'enum':\n\t            case 'export':\n\t            case 'import':\n\t            case 'super':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isStrictModeReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'implements':\n\t            case 'interface':\n\t            case 'package':\n\t            case 'private':\n\t            case 'protected':\n\t            case 'public':\n\t            case 'static':\n\t            case 'yield':\n\t            case 'let':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isRestrictedWord = function (id) {\n\t        return id === 'eval' || id === 'arguments';\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-keywords\n\t    Scanner.prototype.isKeyword = function (id) {\n\t        switch (id.length) {\n\t            case 2:\n\t                return (id === 'if') || (id === 'in') || (id === 'do');\n\t            case 3:\n\t                return (id === 'var') || (id === 'for') || (id === 'new') ||\n\t                    (id === 'try') || (id === 'let');\n\t            case 4:\n\t                return (id === 'this') || (id === 'else') || (id === 'case') ||\n\t                    (id === 'void') || (id === 'with') || (id === 'enum');\n\t            case 5:\n\t                return (id === 'while') || (id === 'break') || (id === 'catch') ||\n\t                    (id === 'throw') || (id === 'const') || (id === 'yield') ||\n\t                    (id === 'class') || (id === 'super');\n\t            case 6:\n\t                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n\t                    (id === 'switch') || (id === 'export') || (id === 'import');\n\t            case 7:\n\t                return (id === 'default') || (id === 'finally') || (id === 'extends');\n\t            case 8:\n\t                return (id === 'function') || (id === 'continue') || (id === 'debugger');\n\t            case 10:\n\t                return (id === 'instanceof');\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.codePointAt = function (i) {\n\t        var cp = this.source.charCodeAt(i);\n\t        if (cp >= 0xD800 && cp <= 0xDBFF) {\n\t            var second = this.source.charCodeAt(i + 1);\n\t            if (second >= 0xDC00 && second <= 0xDFFF) {\n\t                var first = cp;\n\t                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t            }\n\t        }\n\t        return cp;\n\t    };\n\t    Scanner.prototype.scanHexEscape = function (prefix) {\n\t        var len = (prefix === 'u') ? 4 : 2;\n\t        var code = 0;\n\t        for (var i = 0; i < len; ++i) {\n\t            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 16 + hexValue(this.source[this.index++]);\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        }\n\t        return String.fromCharCode(code);\n\t    };\n\t    Scanner.prototype.scanUnicodeCodePointEscape = function () {\n\t        var ch = this.source[this.index];\n\t        var code = 0;\n\t        // At least, one hex digit is required.\n\t        if (ch === '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            code = code * 16 + hexValue(ch);\n\t        }\n\t        if (code > 0x10FFFF || ch !== '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return character_1.Character.fromCodePoint(code);\n\t    };\n\t    Scanner.prototype.getIdentifier = function () {\n\t        var start = this.index++;\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (ch === 0x5C) {\n\t                // Blackslash (U+005C) marks Unicode escape sequence.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            else if (ch >= 0xD800 && ch < 0xDFFF) {\n\t                // Need to handle surrogate pairs.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            if (character_1.Character.isIdentifierPart(ch)) {\n\t                ++this.index;\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return this.source.slice(start, this.index);\n\t    };\n\t    Scanner.prototype.getComplexIdentifier = function () {\n\t        var cp = this.codePointAt(this.index);\n\t        var id = character_1.Character.fromCodePoint(cp);\n\t        this.index += id.length;\n\t        // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t        var ch;\n\t        if (cp === 0x5C) {\n\t            if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t            ++this.index;\n\t            if (this.source[this.index] === '{') {\n\t                ++this.index;\n\t                ch = this.scanUnicodeCodePointEscape();\n\t            }\n\t            else {\n\t                ch = this.scanHexEscape('u');\n\t                if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t            }\n\t            id = ch;\n\t        }\n\t        while (!this.eof()) {\n\t            cp = this.codePointAt(this.index);\n\t            if (!character_1.Character.isIdentifierPart(cp)) {\n\t                break;\n\t            }\n\t            ch = character_1.Character.fromCodePoint(cp);\n\t            id += ch;\n\t            this.index += ch.length;\n\t            // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t            if (cp === 0x5C) {\n\t                id = id.substr(0, id.length - 1);\n\t                if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t                ++this.index;\n\t                if (this.source[this.index] === '{') {\n\t                    ++this.index;\n\t                    ch = this.scanUnicodeCodePointEscape();\n\t                }\n\t                else {\n\t                    ch = this.scanHexEscape('u');\n\t                    if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                        this.throwUnexpectedToken();\n\t                    }\n\t                }\n\t                id += ch;\n\t            }\n\t        }\n\t        return id;\n\t    };\n\t    Scanner.prototype.octalToDecimal = function (ch) {\n\t        // \\0 is not octal escape sequence\n\t        var octal = (ch !== '0');\n\t        var code = octalValue(ch);\n\t        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t            octal = true;\n\t            code = code * 8 + octalValue(this.source[this.index++]);\n\t            // 3 digits are only allowed when string starts\n\t            // with 0, 1, 2, 3\n\t            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 8 + octalValue(this.source[this.index++]);\n\t            }\n\t        }\n\t        return {\n\t            code: code,\n\t            octal: octal\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    Scanner.prototype.scanIdentifier = function () {\n\t        var type;\n\t        var start = this.index;\n\t        // Backslash (U+005C) starts an escaped character.\n\t        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();\n\t        // There is no keyword or literal with only one character.\n\t        // Thus, it must be an identifier.\n\t        if (id.length === 1) {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        else if (this.isKeyword(id)) {\n\t            type = 4 /* Keyword */;\n\t        }\n\t        else if (id === 'null') {\n\t            type = 5 /* NullLiteral */;\n\t        }\n\t        else if (id === 'true' || id === 'false') {\n\t            type = 1 /* BooleanLiteral */;\n\t        }\n\t        else {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {\n\t            var restore = this.index;\n\t            this.index = start;\n\t            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);\n\t            this.index = restore;\n\t        }\n\t        return {\n\t            type: type,\n\t            value: id,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-punctuators\n\t    Scanner.prototype.scanPunctuator = function () {\n\t        var start = this.index;\n\t        // Check for most common single-character punctuators.\n\t        var str = this.source[this.index];\n\t        switch (str) {\n\t            case '(':\n\t            case '{':\n\t                if (str === '{') {\n\t                    this.curlyStack.push('{');\n\t                }\n\t                ++this.index;\n\t                break;\n\t            case '.':\n\t                ++this.index;\n\t                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {\n\t                    // Spread operator: ...\n\t                    this.index += 2;\n\t                    str = '...';\n\t                }\n\t                break;\n\t            case '}':\n\t                ++this.index;\n\t                this.curlyStack.pop();\n\t                break;\n\t            case ')':\n\t            case ';':\n\t            case ',':\n\t            case '[':\n\t            case ']':\n\t            case ':':\n\t            case '?':\n\t            case '~':\n\t                ++this.index;\n\t                break;\n\t            default:\n\t                // 4-character punctuator.\n\t                str = this.source.substr(this.index, 4);\n\t                if (str === '>>>=') {\n\t                    this.index += 4;\n\t                }\n\t                else {\n\t                    // 3-character punctuators.\n\t                    str = str.substr(0, 3);\n\t                    if (str === '===' || str === '!==' || str === '>>>' ||\n\t                        str === '<<=' || str === '>>=' || str === '**=') {\n\t                        this.index += 3;\n\t                    }\n\t                    else {\n\t                        // 2-character punctuators.\n\t                        str = str.substr(0, 2);\n\t                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||\n\t                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||\n\t                            str === '++' || str === '--' || str === '<<' || str === '>>' ||\n\t                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||\n\t                            str === '<=' || str === '>=' || str === '=>' || str === '**') {\n\t                            this.index += 2;\n\t                        }\n\t                        else {\n\t                            // 1-character punctuators.\n\t                            str = this.source[this.index];\n\t                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {\n\t                                ++this.index;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t        }\n\t        if (this.index === start) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 7 /* Punctuator */,\n\t            value: str,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    Scanner.prototype.scanHexLiteral = function (start) {\n\t        var num = '';\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt('0x' + num, 16),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanBinaryLiteral = function (start) {\n\t        var num = '';\n\t        var ch;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index];\n\t            if (ch !== '0' && ch !== '1') {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            // only 0b or 0B\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!this.eof()) {\n\t            ch = this.source.charCodeAt(this.index);\n\t            /* istanbul ignore else */\n\t            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 2),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanOctalLiteral = function (prefix, start) {\n\t        var num = '';\n\t        var octal = false;\n\t        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {\n\t            octal = true;\n\t            num = '0' + this.source[this.index++];\n\t        }\n\t        else {\n\t            ++this.index;\n\t        }\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (!octal && num.length === 0) {\n\t            // only 0o or 0O\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 8),\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.isImplicitOctalLiteral = function () {\n\t        // Implicit octal, unless there is a non-octal digit.\n\t        // (Annex B.1.1 on Numeric Literals)\n\t        for (var i = this.index + 1; i < this.length; ++i) {\n\t            var ch = this.source[i];\n\t            if (ch === '8' || ch === '9') {\n\t                return false;\n\t            }\n\t            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                return true;\n\t            }\n\t        }\n\t        return true;\n\t    };\n\t    Scanner.prototype.scanNumericLiteral = function () {\n\t        var start = this.index;\n\t        var ch = this.source[start];\n\t        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');\n\t        var num = '';\n\t        if (ch !== '.') {\n\t            num = this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            // Hex number starts with '0x'.\n\t            // Octal number starts with '0'.\n\t            // Octal number in ES6 starts with '0o'.\n\t            // Binary number in ES6 starts with '0b'.\n\t            if (num === '0') {\n\t                if (ch === 'x' || ch === 'X') {\n\t                    ++this.index;\n\t                    return this.scanHexLiteral(start);\n\t                }\n\t                if (ch === 'b' || ch === 'B') {\n\t                    ++this.index;\n\t                    return this.scanBinaryLiteral(start);\n\t                }\n\t                if (ch === 'o' || ch === 'O') {\n\t                    return this.scanOctalLiteral(ch, start);\n\t                }\n\t                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                    if (this.isImplicitOctalLiteral()) {\n\t                        return this.scanOctalLiteral(ch, start);\n\t                    }\n\t                }\n\t            }\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === '.') {\n\t            num += this.source[this.index++];\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === 'e' || ch === 'E') {\n\t            num += this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            if (ch === '+' || ch === '-') {\n\t                num += this.source[this.index++];\n\t            }\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                    num += this.source[this.index++];\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseFloat(num),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-string-literals\n\t    Scanner.prototype.scanStringLiteral = function () {\n\t        var start = this.index;\n\t        var quote = this.source[start];\n\t        assert_1.assert((quote === '\\'' || quote === '\"'), 'String literal must starts with a quote');\n\t        ++this.index;\n\t        var octal = false;\n\t        var str = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === quote) {\n\t                quote = '';\n\t                break;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                str += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var unescaped_1 = this.scanHexEscape(ch);\n\t                                if (unescaped_1 === null) {\n\t                                    this.throwUnexpectedToken();\n\t                                }\n\t                                str += unescaped_1;\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            str += unescaped;\n\t                            break;\n\t                        case 'n':\n\t                            str += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            str += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            str += '\\t';\n\t                            break;\n\t                        case 'b':\n\t                            str += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            str += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            str += '\\x0B';\n\t                            break;\n\t                        case '8':\n\t                        case '9':\n\t                            str += ch;\n\t                            this.tolerateUnexpectedToken();\n\t                            break;\n\t                        default:\n\t                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                var octToDec = this.octalToDecimal(ch);\n\t                                octal = octToDec.octal || octal;\n\t                                str += String.fromCharCode(octToDec.code);\n\t                            }\n\t                            else {\n\t                                str += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            else {\n\t                str += ch;\n\t            }\n\t        }\n\t        if (quote !== '') {\n\t            this.index = start;\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 8 /* StringLiteral */,\n\t            value: str,\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components\n\t    Scanner.prototype.scanTemplate = function () {\n\t        var cooked = '';\n\t        var terminated = false;\n\t        var start = this.index;\n\t        var head = (this.source[start] === '`');\n\t        var tail = false;\n\t        var rawOffset = 2;\n\t        ++this.index;\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === '`') {\n\t                rawOffset = 1;\n\t                tail = true;\n\t                terminated = true;\n\t                break;\n\t            }\n\t            else if (ch === '$') {\n\t                if (this.source[this.index] === '{') {\n\t                    this.curlyStack.push('${');\n\t                    ++this.index;\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                cooked += ch;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'n':\n\t                            cooked += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            cooked += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            cooked += '\\t';\n\t                            break;\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                cooked += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var restore = this.index;\n\t                                var unescaped_2 = this.scanHexEscape(ch);\n\t                                if (unescaped_2 !== null) {\n\t                                    cooked += unescaped_2;\n\t                                }\n\t                                else {\n\t                                    this.index = restore;\n\t                                    cooked += ch;\n\t                                }\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            cooked += unescaped;\n\t                            break;\n\t                        case 'b':\n\t                            cooked += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            cooked += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            cooked += '\\v';\n\t                            break;\n\t                        default:\n\t                            if (ch === '0') {\n\t                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                                    // Illegal: \\01 \\02 and so on\n\t                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                                }\n\t                                cooked += '\\0';\n\t                            }\n\t                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                // Illegal: \\1 \\2\n\t                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                            }\n\t                            else {\n\t                                cooked += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.lineNumber;\n\t                if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                    ++this.index;\n\t                }\n\t                this.lineStart = this.index;\n\t                cooked += '\\n';\n\t            }\n\t            else {\n\t                cooked += ch;\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!head) {\n\t            this.curlyStack.pop();\n\t        }\n\t        return {\n\t            type: 10 /* Template */,\n\t            value: this.source.slice(start + 1, this.index - rawOffset),\n\t            cooked: cooked,\n\t            head: head,\n\t            tail: tail,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t    Scanner.prototype.testRegExp = function (pattern, flags) {\n\t        // The BMP character to use as a replacement for astral symbols when\n\t        // translating an ES6 \"u\"-flagged pattern to an ES5-compatible\n\t        // approximation.\n\t        // Note: replacing with '\\uFFFF' enables false positives in unlikely\n\t        // scenarios. For example, `[\\u{1044f}-\\u{10440}]` is an invalid\n\t        // pattern that would not be detected by this substitution.\n\t        var astralSubstitute = '\\uFFFF';\n\t        var tmp = pattern;\n\t        var self = this;\n\t        if (flags.indexOf('u') >= 0) {\n\t            tmp = tmp\n\t                .replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {\n\t                var codePoint = parseInt($1 || $2, 16);\n\t                if (codePoint > 0x10FFFF) {\n\t                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t                }\n\t                if (codePoint <= 0xFFFF) {\n\t                    return String.fromCharCode(codePoint);\n\t                }\n\t                return astralSubstitute;\n\t            })\n\t                .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, astralSubstitute);\n\t        }\n\t        // First, detect invalid regular expressions.\n\t        try {\n\t            RegExp(tmp);\n\t        }\n\t        catch (e) {\n\t            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t        }\n\t        // Return a regular expression object for this pattern-flag pair, or\n\t        // `null` in case the current environment doesn't support the flags it\n\t        // uses.\n\t        try {\n\t            return new RegExp(pattern, flags);\n\t        }\n\t        catch (exception) {\n\t            /* istanbul ignore next */\n\t            return null;\n\t        }\n\t    };\n\t    Scanner.prototype.scanRegExpBody = function () {\n\t        var ch = this.source[this.index];\n\t        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');\n\t        var str = this.source[this.index++];\n\t        var classMarker = false;\n\t        var terminated = false;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            str += ch;\n\t            if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t                }\n\t                str += ch;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t            }\n\t            else if (classMarker) {\n\t                if (ch === ']') {\n\t                    classMarker = false;\n\t                }\n\t            }\n\t            else {\n\t                if (ch === '/') {\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                else if (ch === '[') {\n\t                    classMarker = true;\n\t                }\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t        }\n\t        // Exclude leading and trailing slash.\n\t        return str.substr(1, str.length - 2);\n\t    };\n\t    Scanner.prototype.scanRegExpFlags = function () {\n\t        var str = '';\n\t        var flags = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index];\n\t            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            ++this.index;\n\t            if (ch === '\\\\' && !this.eof()) {\n\t                ch = this.source[this.index];\n\t                if (ch === 'u') {\n\t                    ++this.index;\n\t                    var restore = this.index;\n\t                    var char = this.scanHexEscape('u');\n\t                    if (char !== null) {\n\t                        flags += char;\n\t                        for (str += '\\\\u'; restore < this.index; ++restore) {\n\t                            str += this.source[restore];\n\t                        }\n\t                    }\n\t                    else {\n\t                        this.index = restore;\n\t                        flags += 'u';\n\t                        str += '\\\\u';\n\t                    }\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t                else {\n\t                    str += '\\\\';\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t            }\n\t            else {\n\t                flags += ch;\n\t                str += ch;\n\t            }\n\t        }\n\t        return flags;\n\t    };\n\t    Scanner.prototype.scanRegExp = function () {\n\t        var start = this.index;\n\t        var pattern = this.scanRegExpBody();\n\t        var flags = this.scanRegExpFlags();\n\t        var value = this.testRegExp(pattern, flags);\n\t        return {\n\t            type: 9 /* RegularExpression */,\n\t            value: '',\n\t            pattern: pattern,\n\t            flags: flags,\n\t            regex: value,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.lex = function () {\n\t        if (this.eof()) {\n\t            return {\n\t                type: 2 /* EOF */,\n\t                value: '',\n\t                lineNumber: this.lineNumber,\n\t                lineStart: this.lineStart,\n\t                start: this.index,\n\t                end: this.index\n\t            };\n\t        }\n\t        var cp = this.source.charCodeAt(this.index);\n\t        if (character_1.Character.isIdentifierStart(cp)) {\n\t            return this.scanIdentifier();\n\t        }\n\t        // Very common: ( and ) and ;\n\t        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {\n\t            return this.scanPunctuator();\n\t        }\n\t        // String literal starts with single quote (U+0027) or double quote (U+0022).\n\t        if (cp === 0x27 || cp === 0x22) {\n\t            return this.scanStringLiteral();\n\t        }\n\t        // Dot (.) U+002E can also start a floating-point number, hence the need\n\t        // to check the next character.\n\t        if (cp === 0x2E) {\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {\n\t                return this.scanNumericLiteral();\n\t            }\n\t            return this.scanPunctuator();\n\t        }\n\t        if (character_1.Character.isDecimalDigit(cp)) {\n\t            return this.scanNumericLiteral();\n\t        }\n\t        // Template literals start with ` (U+0060) for template head\n\t        // or } (U+007D) for template middle or template tail.\n\t        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {\n\t            return this.scanTemplate();\n\t        }\n\t        // Possible identifier start in a surrogate pair.\n\t        if (cp >= 0xD800 && cp < 0xDFFF) {\n\t            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {\n\t                return this.scanIdentifier();\n\t            }\n\t        }\n\t        return this.scanPunctuator();\n\t    };\n\t    return Scanner;\n\t}());\n\texports.Scanner = Scanner;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.TokenName = {};\n\texports.TokenName[1 /* BooleanLiteral */] = 'Boolean';\n\texports.TokenName[2 /* EOF */] = '<end>';\n\texports.TokenName[3 /* Identifier */] = 'Identifier';\n\texports.TokenName[4 /* Keyword */] = 'Keyword';\n\texports.TokenName[5 /* NullLiteral */] = 'Null';\n\texports.TokenName[6 /* NumericLiteral */] = 'Numeric';\n\texports.TokenName[7 /* Punctuator */] = 'Punctuator';\n\texports.TokenName[8 /* StringLiteral */] = 'String';\n\texports.TokenName[9 /* RegularExpression */] = 'RegularExpression';\n\texports.TokenName[10 /* Template */] = 'Template';\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\t// Generated by generate-xhtml-entities.js. DO NOT MODIFY!\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.XHTMLEntities = {\n\t    quot: '\\u0022',\n\t    amp: '\\u0026',\n\t    apos: '\\u0027',\n\t    gt: '\\u003E',\n\t    nbsp: '\\u00A0',\n\t    iexcl: '\\u00A1',\n\t    cent: '\\u00A2',\n\t    pound: '\\u00A3',\n\t    curren: '\\u00A4',\n\t    yen: '\\u00A5',\n\t    brvbar: '\\u00A6',\n\t    sect: '\\u00A7',\n\t    uml: '\\u00A8',\n\t    copy: '\\u00A9',\n\t    ordf: '\\u00AA',\n\t    laquo: '\\u00AB',\n\t    not: '\\u00AC',\n\t    shy: '\\u00AD',\n\t    reg: '\\u00AE',\n\t    macr: '\\u00AF',\n\t    deg: '\\u00B0',\n\t    plusmn: '\\u00B1',\n\t    sup2: '\\u00B2',\n\t    sup3: '\\u00B3',\n\t    acute: '\\u00B4',\n\t    micro: '\\u00B5',\n\t    para: '\\u00B6',\n\t    middot: '\\u00B7',\n\t    cedil: '\\u00B8',\n\t    sup1: '\\u00B9',\n\t    ordm: '\\u00BA',\n\t    raquo: '\\u00BB',\n\t    frac14: '\\u00BC',\n\t    frac12: '\\u00BD',\n\t    frac34: '\\u00BE',\n\t    iquest: '\\u00BF',\n\t    Agrave: '\\u00C0',\n\t    Aacute: '\\u00C1',\n\t    Acirc: '\\u00C2',\n\t    Atilde: '\\u00C3',\n\t    Auml: '\\u00C4',\n\t    Aring: '\\u00C5',\n\t    AElig: '\\u00C6',\n\t    Ccedil: '\\u00C7',\n\t    Egrave: '\\u00C8',\n\t    Eacute: '\\u00C9',\n\t    Ecirc: '\\u00CA',\n\t    Euml: '\\u00CB',\n\t    Igrave: '\\u00CC',\n\t    Iacute: '\\u00CD',\n\t    Icirc: '\\u00CE',\n\t    Iuml: '\\u00CF',\n\t    ETH: '\\u00D0',\n\t    Ntilde: '\\u00D1',\n\t    Ograve: '\\u00D2',\n\t    Oacute: '\\u00D3',\n\t    Ocirc: '\\u00D4',\n\t    Otilde: '\\u00D5',\n\t    Ouml: '\\u00D6',\n\t    times: '\\u00D7',\n\t    Oslash: '\\u00D8',\n\t    Ugrave: '\\u00D9',\n\t    Uacute: '\\u00DA',\n\t    Ucirc: '\\u00DB',\n\t    Uuml: '\\u00DC',\n\t    Yacute: '\\u00DD',\n\t    THORN: '\\u00DE',\n\t    szlig: '\\u00DF',\n\t    agrave: '\\u00E0',\n\t    aacute: '\\u00E1',\n\t    acirc: '\\u00E2',\n\t    atilde: '\\u00E3',\n\t    auml: '\\u00E4',\n\t    aring: '\\u00E5',\n\t    aelig: '\\u00E6',\n\t    ccedil: '\\u00E7',\n\t    egrave: '\\u00E8',\n\t    eacute: '\\u00E9',\n\t    ecirc: '\\u00EA',\n\t    euml: '\\u00EB',\n\t    igrave: '\\u00EC',\n\t    iacute: '\\u00ED',\n\t    icirc: '\\u00EE',\n\t    iuml: '\\u00EF',\n\t    eth: '\\u00F0',\n\t    ntilde: '\\u00F1',\n\t    ograve: '\\u00F2',\n\t    oacute: '\\u00F3',\n\t    ocirc: '\\u00F4',\n\t    otilde: '\\u00F5',\n\t    ouml: '\\u00F6',\n\t    divide: '\\u00F7',\n\t    oslash: '\\u00F8',\n\t    ugrave: '\\u00F9',\n\t    uacute: '\\u00FA',\n\t    ucirc: '\\u00FB',\n\t    uuml: '\\u00FC',\n\t    yacute: '\\u00FD',\n\t    thorn: '\\u00FE',\n\t    yuml: '\\u00FF',\n\t    OElig: '\\u0152',\n\t    oelig: '\\u0153',\n\t    Scaron: '\\u0160',\n\t    scaron: '\\u0161',\n\t    Yuml: '\\u0178',\n\t    fnof: '\\u0192',\n\t    circ: '\\u02C6',\n\t    tilde: '\\u02DC',\n\t    Alpha: '\\u0391',\n\t    Beta: '\\u0392',\n\t    Gamma: '\\u0393',\n\t    Delta: '\\u0394',\n\t    Epsilon: '\\u0395',\n\t    Zeta: '\\u0396',\n\t    Eta: '\\u0397',\n\t    Theta: '\\u0398',\n\t    Iota: '\\u0399',\n\t    Kappa: '\\u039A',\n\t    Lambda: '\\u039B',\n\t    Mu: '\\u039C',\n\t    Nu: '\\u039D',\n\t    Xi: '\\u039E',\n\t    Omicron: '\\u039F',\n\t    Pi: '\\u03A0',\n\t    Rho: '\\u03A1',\n\t    Sigma: '\\u03A3',\n\t    Tau: '\\u03A4',\n\t    Upsilon: '\\u03A5',\n\t    Phi: '\\u03A6',\n\t    Chi: '\\u03A7',\n\t    Psi: '\\u03A8',\n\t    Omega: '\\u03A9',\n\t    alpha: '\\u03B1',\n\t    beta: '\\u03B2',\n\t    gamma: '\\u03B3',\n\t    delta: '\\u03B4',\n\t    epsilon: '\\u03B5',\n\t    zeta: '\\u03B6',\n\t    eta: '\\u03B7',\n\t    theta: '\\u03B8',\n\t    iota: '\\u03B9',\n\t    kappa: '\\u03BA',\n\t    lambda: '\\u03BB',\n\t    mu: '\\u03BC',\n\t    nu: '\\u03BD',\n\t    xi: '\\u03BE',\n\t    omicron: '\\u03BF',\n\t    pi: '\\u03C0',\n\t    rho: '\\u03C1',\n\t    sigmaf: '\\u03C2',\n\t    sigma: '\\u03C3',\n\t    tau: '\\u03C4',\n\t    upsilon: '\\u03C5',\n\t    phi: '\\u03C6',\n\t    chi: '\\u03C7',\n\t    psi: '\\u03C8',\n\t    omega: '\\u03C9',\n\t    thetasym: '\\u03D1',\n\t    upsih: '\\u03D2',\n\t    piv: '\\u03D6',\n\t    ensp: '\\u2002',\n\t    emsp: '\\u2003',\n\t    thinsp: '\\u2009',\n\t    zwnj: '\\u200C',\n\t    zwj: '\\u200D',\n\t    lrm: '\\u200E',\n\t    rlm: '\\u200F',\n\t    ndash: '\\u2013',\n\t    mdash: '\\u2014',\n\t    lsquo: '\\u2018',\n\t    rsquo: '\\u2019',\n\t    sbquo: '\\u201A',\n\t    ldquo: '\\u201C',\n\t    rdquo: '\\u201D',\n\t    bdquo: '\\u201E',\n\t    dagger: '\\u2020',\n\t    Dagger: '\\u2021',\n\t    bull: '\\u2022',\n\t    hellip: '\\u2026',\n\t    permil: '\\u2030',\n\t    prime: '\\u2032',\n\t    Prime: '\\u2033',\n\t    lsaquo: '\\u2039',\n\t    rsaquo: '\\u203A',\n\t    oline: '\\u203E',\n\t    frasl: '\\u2044',\n\t    euro: '\\u20AC',\n\t    image: '\\u2111',\n\t    weierp: '\\u2118',\n\t    real: '\\u211C',\n\t    trade: '\\u2122',\n\t    alefsym: '\\u2135',\n\t    larr: '\\u2190',\n\t    uarr: '\\u2191',\n\t    rarr: '\\u2192',\n\t    darr: '\\u2193',\n\t    harr: '\\u2194',\n\t    crarr: '\\u21B5',\n\t    lArr: '\\u21D0',\n\t    uArr: '\\u21D1',\n\t    rArr: '\\u21D2',\n\t    dArr: '\\u21D3',\n\t    hArr: '\\u21D4',\n\t    forall: '\\u2200',\n\t    part: '\\u2202',\n\t    exist: '\\u2203',\n\t    empty: '\\u2205',\n\t    nabla: '\\u2207',\n\t    isin: '\\u2208',\n\t    notin: '\\u2209',\n\t    ni: '\\u220B',\n\t    prod: '\\u220F',\n\t    sum: '\\u2211',\n\t    minus: '\\u2212',\n\t    lowast: '\\u2217',\n\t    radic: '\\u221A',\n\t    prop: '\\u221D',\n\t    infin: '\\u221E',\n\t    ang: '\\u2220',\n\t    and: '\\u2227',\n\t    or: '\\u2228',\n\t    cap: '\\u2229',\n\t    cup: '\\u222A',\n\t    int: '\\u222B',\n\t    there4: '\\u2234',\n\t    sim: '\\u223C',\n\t    cong: '\\u2245',\n\t    asymp: '\\u2248',\n\t    ne: '\\u2260',\n\t    equiv: '\\u2261',\n\t    le: '\\u2264',\n\t    ge: '\\u2265',\n\t    sub: '\\u2282',\n\t    sup: '\\u2283',\n\t    nsub: '\\u2284',\n\t    sube: '\\u2286',\n\t    supe: '\\u2287',\n\t    oplus: '\\u2295',\n\t    otimes: '\\u2297',\n\t    perp: '\\u22A5',\n\t    sdot: '\\u22C5',\n\t    lceil: '\\u2308',\n\t    rceil: '\\u2309',\n\t    lfloor: '\\u230A',\n\t    rfloor: '\\u230B',\n\t    loz: '\\u25CA',\n\t    spades: '\\u2660',\n\t    clubs: '\\u2663',\n\t    hearts: '\\u2665',\n\t    diams: '\\u2666',\n\t    lang: '\\u27E8',\n\t    rang: '\\u27E9'\n\t};\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar token_1 = __webpack_require__(13);\n\tvar Reader = (function () {\n\t    function Reader() {\n\t        this.values = [];\n\t        this.curly = this.paren = -1;\n\t    }\n\t    // A function following one of those tokens is an expression.\n\t    Reader.prototype.beforeFunctionExpression = function (t) {\n\t        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n\t            'return', 'case', 'delete', 'throw', 'void',\n\t            // assignment operators\n\t            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',\n\t            '&=', '|=', '^=', ',',\n\t            // binary/unary operators\n\t            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n\t            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n\t            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;\n\t    };\n\t    // Determine if forward slash (/) is an operator or part of a regular expression\n\t    // https://github.com/mozilla/sweet.js/wiki/design\n\t    Reader.prototype.isRegexStart = function () {\n\t        var previous = this.values[this.values.length - 1];\n\t        var regex = (previous !== null);\n\t        switch (previous) {\n\t            case 'this':\n\t            case ']':\n\t                regex = false;\n\t                break;\n\t            case ')':\n\t                var keyword = this.values[this.paren - 1];\n\t                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');\n\t                break;\n\t            case '}':\n\t                // Dividing a function by anything makes little sense,\n\t                // but we have to check for that.\n\t                regex = false;\n\t                if (this.values[this.curly - 3] === 'function') {\n\t                    // Anonymous function, e.g. function(){} /42\n\t                    var check = this.values[this.curly - 4];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : false;\n\t                }\n\t                else if (this.values[this.curly - 4] === 'function') {\n\t                    // Named function, e.g. function f(){} /42/\n\t                    var check = this.values[this.curly - 5];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : true;\n\t                }\n\t                break;\n\t        }\n\t        return regex;\n\t    };\n\t    Reader.prototype.push = function (token) {\n\t        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {\n\t            if (token.value === '{') {\n\t                this.curly = this.values.length;\n\t            }\n\t            else if (token.value === '(') {\n\t                this.paren = this.values.length;\n\t            }\n\t            this.values.push(token.value);\n\t        }\n\t        else {\n\t            this.values.push(null);\n\t        }\n\t    };\n\t    return Reader;\n\t}());\n\tvar Tokenizer = (function () {\n\t    function Tokenizer(code, config) {\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;\n\t        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;\n\t        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;\n\t        this.buffer = [];\n\t        this.reader = new Reader();\n\t    }\n\t    Tokenizer.prototype.errors = function () {\n\t        return this.errorHandler.errors;\n\t    };\n\t    Tokenizer.prototype.getNextToken = function () {\n\t        if (this.buffer.length === 0) {\n\t            var comments = this.scanner.scanComments();\n\t            if (this.scanner.trackComment) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);\n\t                    var comment = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: value\n\t                    };\n\t                    if (this.trackRange) {\n\t                        comment.range = e.range;\n\t                    }\n\t                    if (this.trackLoc) {\n\t                        comment.loc = e.loc;\n\t                    }\n\t                    this.buffer.push(comment);\n\t                }\n\t            }\n\t            if (!this.scanner.eof()) {\n\t                var loc = void 0;\n\t                if (this.trackLoc) {\n\t                    loc = {\n\t                        start: {\n\t                            line: this.scanner.lineNumber,\n\t                            column: this.scanner.index - this.scanner.lineStart\n\t                        },\n\t                        end: {}\n\t                    };\n\t                }\n\t                var startRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();\n\t                var token = startRegex ? this.scanner.scanRegExp() : this.scanner.lex();\n\t                this.reader.push(token);\n\t                var entry = {\n\t                    type: token_1.TokenName[token.type],\n\t                    value: this.scanner.source.slice(token.start, token.end)\n\t                };\n\t                if (this.trackRange) {\n\t                    entry.range = [token.start, token.end];\n\t                }\n\t                if (this.trackLoc) {\n\t                    loc.end = {\n\t                        line: this.scanner.lineNumber,\n\t                        column: this.scanner.index - this.scanner.lineStart\n\t                    };\n\t                    entry.loc = loc;\n\t                }\n\t                if (token.type === 9 /* RegularExpression */) {\n\t                    var pattern = token.pattern;\n\t                    var flags = token.flags;\n\t                    entry.regex = { pattern: pattern, flags: flags };\n\t                }\n\t                this.buffer.push(entry);\n\t            }\n\t        }\n\t        return this.buffer.shift();\n\t    };\n\t    return Tokenizer;\n\t}());\n\texports.Tokenizer = Tokenizer;\n\n\n/***/ }\n/******/ ])\n});\n});\n\nvar __pika_web_default_export_for_treeshaking__ = /*@__PURE__*/getDefaultExportFromCjs(esprima);\n\nexport default __pika_web_default_export_for_treeshaking__;\n", "import { c as createCommonjsModule, a as commonjsGlobal } from './common/_commonjsHelpers-8c19dec8.js';\n\nvar astring_min = createCommonjsModule(function (module, exports) {\n(function(a,b){b(exports);})(\"undefined\"==typeof globalThis?\"undefined\"==typeof self?commonjsGlobal:self:globalThis,function(a){var b=String.prototype;function c(a,b){if(!(a instanceof b))throw new TypeError(\"Cannot call a class as a function\")}function d(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,\"value\"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c);}function e(a,b,c){return b&&d(a.prototype,b),c&&d(a,c),a}function f(a,b){var c=a.generator;if(a.write(\"(\"),null!=b&&0<b.length){c[b[0].type](b[0],a);for(var d,e=b.length,f=1;f<e;f++)d=b[f],a.write(\", \"),c[d.type](d,a);}a.write(\")\");}function g(a,b,c,d){var e=a.expressionsPrecedence[b.type];if(e===17)return !0;var f=a.expressionsPrecedence[c.type];return e===f?(13===e||14===e)&&(\"**\"===b.operator&&\"**\"===c.operator?!d:d?o[b.operator]<=o[c.operator]:o[b.operator]<o[c.operator]):!d&&15===e&&14===f&&\"**\"===c.operator||e<f}function h(a,b,c,d){var e=a.generator;g(a,b,c,d)?(a.write(\"(\"),e[b.type](b,a),a.write(\")\")):e[b.type](b,a);}function j(a,b,c,d){var e=b.split(\"\\n\"),f=e.length-1;if(a.write(e[0].trim()),0<f){a.write(d);for(var g=1;g<f;g++)a.write(c+e[g].trim()+d);a.write(c+e[f].trim());}}function k(a,b,c,d){for(var e,f=b.length,g=0;g<f;g++)e=b[g],a.write(c),\"L\"===e.type[0]?a.write(\"// \"+e.value.trim()+\"\\n\",e):(a.write(\"/*\"),j(a,e.value,c,d),a.write(\"*/\"+d));}function l(a){for(var d=a;null!=d;){var b=d,c=b.type;if(\"C\"===c[0]&&\"a\"===c[1])return !0;if(\"M\"===c[0]&&\"e\"===c[1]&&\"m\"===c[2])d=d.object;else return !1}}function m(a,b){var c=a.generator,d=b.declarations;a.write(b.kind+\" \");var e=d.length;if(0<e){c.VariableDeclarator(d[0],a);for(var f=1;f<e;f++)a.write(\", \"),c.VariableDeclarator(d[f],a);}}Object.defineProperty(a,\"__esModule\",{value:!0}),a.generate=function(a,b){var c=new z(b);return c.generator[a.type](a,c),c.output},a.baseGenerator=a.GENERATOR=a.EXPRESSIONS_PRECEDENCE=a.NEEDS_PARENTHESES=void 0;var n=JSON.stringify;if(!b.repeat)throw new Error(\"String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation\");if(!b.endsWith)throw new Error(\"String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation\");var o={\"||\":3,\"&&\":4,\"|\":5,\"^\":6,\"&\":7,\"==\":8,\"!=\":8,\"===\":8,\"!==\":8,\"<\":9,\">\":9,\"<=\":9,\">=\":9,in:9,instanceof:9,\"<<\":10,\">>\":10,\">>>\":10,\"+\":11,\"-\":11,\"*\":12,\"%\":12,\"/\":12,\"**\":13},p=17;a.NEEDS_PARENTHESES=p;var q={ArrayExpression:20,TaggedTemplateExpression:20,ThisExpression:20,Identifier:20,Literal:18,TemplateLiteral:20,Super:20,SequenceExpression:20,MemberExpression:19,ChainExpression:19,CallExpression:19,NewExpression:19,ArrowFunctionExpression:p,ClassExpression:p,FunctionExpression:p,ObjectExpression:p,UpdateExpression:16,UnaryExpression:15,AwaitExpression:15,BinaryExpression:14,LogicalExpression:13,ConditionalExpression:4,AssignmentExpression:3,YieldExpression:2,RestElement:1};a.EXPRESSIONS_PRECEDENCE=q;var r,s,t,u,v,w,x={Program:function Program(a,b){var c=b.indent.repeat(b.indentLevel),d=b.lineEnd,e=b.writeComments;e&&null!=a.comments&&k(b,a.comments,c,d);for(var f,g=a.body,h=g.length,j=0;j<h;j++)f=g[j],e&&null!=f.comments&&k(b,f.comments,c,d),b.write(c),this[f.type](f,b),b.write(d);e&&null!=a.trailingComments&&k(b,a.trailingComments,c,d);},BlockStatement:w=function(a,b){var c=b.indent.repeat(b.indentLevel++),d=b.lineEnd,e=b.writeComments,f=c+b.indent;b.write(\"{\");var g=a.body;if(null!=g&&0<g.length){b.write(d),e&&null!=a.comments&&k(b,a.comments,f,d);for(var h,j=g.length,l=0;l<j;l++)h=g[l],e&&null!=h.comments&&k(b,h.comments,f,d),b.write(f),this[h.type](h,b),b.write(d);b.write(c);}else e&&null!=a.comments&&(b.write(d),k(b,a.comments,f,d),b.write(c));e&&null!=a.trailingComments&&k(b,a.trailingComments,f,d),b.write(\"}\"),b.indentLevel--;},ClassBody:w,EmptyStatement:function EmptyStatement(a,b){b.write(\";\");},ExpressionStatement:function ExpressionStatement(a,b){var c=b.expressionsPrecedence[a.expression.type];c===p||3===c&&\"O\"===a.expression.left.type[0]?(b.write(\"(\"),this[a.expression.type](a.expression,b),b.write(\")\")):this[a.expression.type](a.expression,b),b.write(\";\");},IfStatement:function IfStatement(a,b){b.write(\"if (\"),this[a.test.type](a.test,b),b.write(\") \"),this[a.consequent.type](a.consequent,b),null!=a.alternate&&(b.write(\" else \"),this[a.alternate.type](a.alternate,b));},LabeledStatement:function LabeledStatement(a,b){this[a.label.type](a.label,b),b.write(\": \"),this[a.body.type](a.body,b);},BreakStatement:function BreakStatement(a,b){b.write(\"break\"),null!=a.label&&(b.write(\" \"),this[a.label.type](a.label,b)),b.write(\";\");},ContinueStatement:function ContinueStatement(a,b){b.write(\"continue\"),null!=a.label&&(b.write(\" \"),this[a.label.type](a.label,b)),b.write(\";\");},WithStatement:function WithStatement(a,b){b.write(\"with (\"),this[a.object.type](a.object,b),b.write(\") \"),this[a.body.type](a.body,b);},SwitchStatement:function SwitchStatement(a,b){var c=b.indent.repeat(b.indentLevel++),d=b.lineEnd,e=b.writeComments;b.indentLevel++;var f=c+b.indent,g=f+b.indent;b.write(\"switch (\"),this[a.discriminant.type](a.discriminant,b),b.write(\") {\"+d);for(var h,j=a.cases,l=j.length,m=0;m<l;m++){h=j[m],e&&null!=h.comments&&k(b,h.comments,f,d),h.test?(b.write(f+\"case \"),this[h.test.type](h.test,b),b.write(\":\"+d)):b.write(f+\"default:\"+d);for(var n,o=h.consequent,p=o.length,q=0;q<p;q++)n=o[q],e&&null!=n.comments&&k(b,n.comments,g,d),b.write(g),this[n.type](n,b),b.write(d);}b.indentLevel-=2,b.write(c+\"}\");},ReturnStatement:function ReturnStatement(a,b){b.write(\"return\"),a.argument&&(b.write(\" \"),this[a.argument.type](a.argument,b)),b.write(\";\");},ThrowStatement:function ThrowStatement(a,b){b.write(\"throw \"),this[a.argument.type](a.argument,b),b.write(\";\");},TryStatement:function TryStatement(a,b){if(b.write(\"try \"),this[a.block.type](a.block,b),a.handler){var c=a.handler;null==c.param?b.write(\" catch \"):(b.write(\" catch (\"),this[c.param.type](c.param,b),b.write(\") \")),this[c.body.type](c.body,b);}a.finalizer&&(b.write(\" finally \"),this[a.finalizer.type](a.finalizer,b));},WhileStatement:function WhileStatement(a,b){b.write(\"while (\"),this[a.test.type](a.test,b),b.write(\") \"),this[a.body.type](a.body,b);},DoWhileStatement:function DoWhileStatement(a,b){b.write(\"do \"),this[a.body.type](a.body,b),b.write(\" while (\"),this[a.test.type](a.test,b),b.write(\");\");},ForStatement:function ForStatement(a,b){if(b.write(\"for (\"),null!=a.init){var c=a.init;\"V\"===c.type[0]?m(b,c):this[c.type](c,b);}b.write(\"; \"),a.test&&this[a.test.type](a.test,b),b.write(\"; \"),a.update&&this[a.update.type](a.update,b),b.write(\") \"),this[a.body.type](a.body,b);},ForInStatement:r=function(a,b){b.write(\"for \".concat(a[\"await\"]?\"await \":\"\",\"(\"));var c=a.left;\"V\"===c.type[0]?m(b,c):this[c.type](c,b),b.write(\"I\"===a.type[3]?\" in \":\" of \"),this[a.right.type](a.right,b),b.write(\") \"),this[a.body.type](a.body,b);},ForOfStatement:r,DebuggerStatement:function DebuggerStatement(a,b){b.write(\"debugger;\",a);},FunctionDeclaration:s=function(a,b){b.write((a.async?\"async \":\"\")+(a.generator?\"function* \":\"function \")+(a.id?a.id.name:\"\"),a),f(b,a.params),b.write(\" \"),this[a.body.type](a.body,b);},FunctionExpression:s,VariableDeclaration:function VariableDeclaration(a,b){m(b,a),b.write(\";\");},VariableDeclarator:function VariableDeclarator(a,b){this[a.id.type](a.id,b),null!=a.init&&(b.write(\" = \"),this[a.init.type](a.init,b));},ClassDeclaration:function ClassDeclaration(a,b){if(b.write(\"class \"+(a.id?\"\".concat(a.id.name,\" \"):\"\"),a),a.superClass){b.write(\"extends \");var c=a.superClass,d=c.type,e=b.expressionsPrecedence[d];(\"C\"!==d[0]||\"l\"!==d[1]||\"E\"!==d[5])&&(e===p||e<b.expressionsPrecedence.ClassExpression)?(b.write(\"(\"),this[a.superClass.type](c,b),b.write(\")\")):this[c.type](c,b),b.write(\" \");}this.ClassBody(a.body,b);},ImportDeclaration:function ImportDeclaration(a,b){b.write(\"import \");var c=a.specifiers,d=c.length,e=0;if(0<d){for(;e<d;){0<e&&b.write(\", \");var f=c[e],g=f.type[6];if(\"D\"===g)b.write(f.local.name,f),e++;else if(\"N\"===g)b.write(\"* as \"+f.local.name,f),e++;else break}if(e<d){for(b.write(\"{\");;){var h=c[e],j=h.imported.name;if(b.write(j,h),j!==h.local.name&&b.write(\" as \"+h.local.name),++e<d)b.write(\", \");else break}b.write(\"}\");}b.write(\" from \");}this.Literal(a.source,b),b.write(\";\");},ImportExpression:function ImportExpression(a,b){b.write(\"import(\"),this[a.source.type](a.source,b),b.write(\")\");},ExportDefaultDeclaration:function ExportDefaultDeclaration(a,b){b.write(\"export default \"),this[a.declaration.type](a.declaration,b),null!=b.expressionsPrecedence[a.declaration.type]&&\"F\"!==a.declaration.type[0]&&b.write(\";\");},ExportNamedDeclaration:function ExportNamedDeclaration(a,b){if(b.write(\"export \"),a.declaration)this[a.declaration.type](a.declaration,b);else {b.write(\"{\");var c=a.specifiers,d=c.length;if(0<d)for(var g=0;;){var e=c[g],f=e.local.name;if(b.write(f,e),f!==e.exported.name&&b.write(\" as \"+e.exported.name),++g<d)b.write(\", \");else break}b.write(\"}\"),a.source&&(b.write(\" from \"),this.Literal(a.source,b)),b.write(\";\");}},ExportAllDeclaration:function ExportAllDeclaration(a,b){null==a.exported?b.write(\"export * from \"):b.write(\"export * as \"+a.exported.name+\" from \"),this.Literal(a.source,b),b.write(\";\");},MethodDefinition:function MethodDefinition(a,b){a[\"static\"]&&b.write(\"static \");var c=a.kind[0];(\"g\"===c||\"s\"===c)&&b.write(a.kind+\" \"),a.value.async&&b.write(\"async \"),a.value.generator&&b.write(\"*\"),a.computed?(b.write(\"[\"),this[a.key.type](a.key,b),b.write(\"]\")):this[a.key.type](a.key,b),f(b,a.value.params),b.write(\" \"),this[a.value.body.type](a.value.body,b);},ClassExpression:function ClassExpression(a,b){this.ClassDeclaration(a,b);},ArrowFunctionExpression:function ArrowFunctionExpression(a,b){b.write(a.async?\"async \":\"\",a);var c=a.params;null!=c&&(1===c.length&&\"I\"===c[0].type[0]?b.write(c[0].name,c[0]):f(b,a.params)),b.write(\" => \"),\"O\"===a.body.type[0]?(b.write(\"(\"),this.ObjectExpression(a.body,b),b.write(\")\")):this[a.body.type](a.body,b);},ThisExpression:function ThisExpression(a,b){b.write(\"this\",a);},Super:function Super(a,b){b.write(\"super\",a);},RestElement:t=function(a,b){b.write(\"...\"),this[a.argument.type](a.argument,b);},SpreadElement:t,YieldExpression:function YieldExpression(a,b){b.write(a.delegate?\"yield*\":\"yield\"),a.argument&&(b.write(\" \"),this[a.argument.type](a.argument,b));},AwaitExpression:function AwaitExpression(a,b){b.write(\"await \",a),h(b,a.argument,a);},TemplateLiteral:function TemplateLiteral(a,b){var c=a.quasis,d=a.expressions;b.write(\"`\");for(var e=d.length,f=0;f<e;f++){var g=d[f],h=c[f];b.write(h.value.raw,h),b.write(\"${\"),this[g.type](g,b),b.write(\"}\");}var j=c[c.length-1];b.write(j.value.raw,j),b.write(\"`\");},TemplateElement:function TemplateElement(a,b){b.write(a.value.raw,a);},TaggedTemplateExpression:function TaggedTemplateExpression(a,b){this[a.tag.type](a.tag,b),this[a.quasi.type](a.quasi,b);},ArrayExpression:v=function(a,b){if(b.write(\"[\"),0<a.elements.length)for(var c,d=a.elements,e=d.length,f=0;;)if(c=d[f],null!=c&&this[c.type](c,b),++f<e)b.write(\", \");else {null==c&&b.write(\", \");break}b.write(\"]\");},ArrayPattern:v,ObjectExpression:function ObjectExpression(a,b){var c=b.indent.repeat(b.indentLevel++),d=b.lineEnd,e=b.writeComments,f=c+b.indent;if(b.write(\"{\"),0<a.properties.length){b.write(d),e&&null!=a.comments&&k(b,a.comments,f,d);for(var g,h=a.properties,j=h.length,l=0;;)if(g=h[l],e&&null!=g.comments&&k(b,g.comments,f,d),b.write(f),this[g.type](g,b),++l<j)b.write(\",\"+d);else break;b.write(d),e&&null!=a.trailingComments&&k(b,a.trailingComments,f,d),b.write(c+\"}\");}else e?null==a.comments?null==a.trailingComments?b.write(\"}\"):(b.write(d),k(b,a.trailingComments,f,d),b.write(c+\"}\")):(b.write(d),k(b,a.comments,f,d),null!=a.trailingComments&&k(b,a.trailingComments,f,d),b.write(c+\"}\")):b.write(\"}\");b.indentLevel--;},Property:function Property(a,b){a.method||\"i\"!==a.kind[0]?this.MethodDefinition(a,b):(!a.shorthand&&(a.computed?(b.write(\"[\"),this[a.key.type](a.key,b),b.write(\"]\")):this[a.key.type](a.key,b),b.write(\": \")),this[a.value.type](a.value,b));},ObjectPattern:function ObjectPattern(a,b){if(b.write(\"{\"),0<a.properties.length)for(var c=a.properties,d=c.length,e=0;;)if(this[c[e].type](c[e],b),++e<d)b.write(\", \");else break;b.write(\"}\");},SequenceExpression:function SequenceExpression(a,b){f(b,a.expressions);},UnaryExpression:function UnaryExpression(a,b){if(a.prefix){var c=a.operator,d=a.argument,e=a.argument.type;b.write(c);var f=g(b,d,a);!f&&(1<c.length||\"U\"===e[0]&&(\"n\"===e[1]||\"p\"===e[1])&&d.prefix&&d.operator[0]===c&&(\"+\"===c||\"-\"===c))&&b.write(\" \"),f?(b.write(1<c.length?\" (\":\"(\"),this[e](d,b),b.write(\")\")):this[e](d,b);}else this[a.argument.type](a.argument,b),b.write(a.operator);},UpdateExpression:function UpdateExpression(a,b){a.prefix?(b.write(a.operator),this[a.argument.type](a.argument,b)):(this[a.argument.type](a.argument,b),b.write(a.operator));},AssignmentExpression:function AssignmentExpression(a,b){this[a.left.type](a.left,b),b.write(\" \"+a.operator+\" \"),this[a.right.type](a.right,b);},AssignmentPattern:function AssignmentPattern(a,b){this[a.left.type](a.left,b),b.write(\" = \"),this[a.right.type](a.right,b);},BinaryExpression:u=function(a,b){var c=\"in\"===a.operator;c&&b.write(\"(\"),h(b,a.left,a,!1),b.write(\" \"+a.operator+\" \"),h(b,a.right,a,!0),c&&b.write(\")\");},LogicalExpression:u,ConditionalExpression:function ConditionalExpression(a,b){var c=a.test,d=b.expressionsPrecedence[c.type];d===p||d<=b.expressionsPrecedence.ConditionalExpression?(b.write(\"(\"),this[c.type](c,b),b.write(\")\")):this[c.type](c,b),b.write(\" ? \"),this[a.consequent.type](a.consequent,b),b.write(\" : \"),this[a.alternate.type](a.alternate,b);},NewExpression:function NewExpression(a,b){b.write(\"new \");var c=b.expressionsPrecedence[a.callee.type];c===p||c<b.expressionsPrecedence.CallExpression||l(a.callee)?(b.write(\"(\"),this[a.callee.type](a.callee,b),b.write(\")\")):this[a.callee.type](a.callee,b),f(b,a.arguments);},CallExpression:function CallExpression(a,b){var c=b.expressionsPrecedence[a.callee.type];c===p||c<b.expressionsPrecedence.CallExpression?(b.write(\"(\"),this[a.callee.type](a.callee,b),b.write(\")\")):this[a.callee.type](a.callee,b),a.optional&&b.write(\"?.\"),f(b,a.arguments);},ChainExpression:function ChainExpression(a,b){this[a.expression.type](a.expression,b);},MemberExpression:function MemberExpression(a,b){var c=b.expressionsPrecedence[a.object.type];c===p||c<b.expressionsPrecedence.MemberExpression?(b.write(\"(\"),this[a.object.type](a.object,b),b.write(\")\")):this[a.object.type](a.object,b),a.computed?(a.optional&&b.write(\"?.\"),b.write(\"[\"),this[a.property.type](a.property,b),b.write(\"]\")):(a.optional?b.write(\"?.\"):b.write(\".\"),this[a.property.type](a.property,b));},MetaProperty:function MetaProperty(a,b){b.write(a.meta.name+\".\"+a.property.name,a);},Identifier:function Identifier(a,b){b.write(a.name,a);},Literal:function Literal(a,b){null==a.raw?null==a.regex?null==a.bigint?b.write(n(a.value),a):b.write(a.bigint+\"n\",a):this.RegExpLiteral(a,b):b.write(a.raw,a);},RegExpLiteral:function RegExpLiteral(a,b){var c=a.regex;b.write(\"/\".concat(c.pattern,\"/\").concat(c.flags),a);}};a.GENERATOR=x;var y={};a.baseGenerator=x;var z=function(){function a(b){c(this,a);var d=null==b?y:b;this.output=\"\",null==d.output?this.output=\"\":(this.output=d.output,this.write=this.writeToStream),this.generator=null==d.generator?x:d.generator,this.expressionsPrecedence=null==d.expressionsPrecedence?q:d.expressionsPrecedence,this.indent=null==d.indent?\"  \":d.indent,this.lineEnd=null==d.lineEnd?\"\\n\":d.lineEnd,this.indentLevel=null==d.startingIndentLevel?0:d.startingIndentLevel,this.writeComments=!!d.comments&&d.comments,null!=d.sourceMap&&(this.write=null==d.output?this.writeAndMap:this.writeToStreamAndMap,this.sourceMap=d.sourceMap,this.line=1,this.column=0,this.lineEndSize=this.lineEnd.split(\"\\n\").length-1,this.mapping={original:null,generated:this,name:void 0,source:d.sourceMap.file||d.sourceMap._file});}return e(a,[{key:\"write\",value:function write(a){this.output+=a;}},{key:\"writeToStream\",value:function writeToStream(a){this.output.write(a);}},{key:\"writeAndMap\",value:function writeAndMap(a,b){this.output+=a,this.map(a,b);}},{key:\"writeToStreamAndMap\",value:function writeToStreamAndMap(a,b){this.output.write(a),this.map(a,b);}},{key:\"map\",value:function map(a,b){if(null!=b){var c=b.type;if(\"L\"===c[0]&&\"n\"===c[2])return this.column=0,void this.line++;if(null!=b.loc){var d=this.mapping;d.original=b.loc.start,d.name=b.name,this.sourceMap.addMapping(d);}if(\"T\"===c[0]&&\"E\"===c[8]||\"L\"===c[0]&&\"i\"===c[1]&&\"string\"==typeof b.value){for(var e=a.length,f=this.column,g=this.line,h=0;h<e;h++)\"\\n\"===a[h]?(f=0,g++):f++;return this.column=f,void(this.line=g)}}var j=a.length,k=this.lineEnd;0<j&&(0<this.lineEndSize&&(1===k.length?a[j-1]===k:a.endsWith(k))?(this.line+=this.lineEndSize,this.column=0):this.column+=j);}},{key:\"toString\",value:function toString(){return this.output}}]),a}();});\n\n\n});\n\nvar generate = astring_min.generate;\nexport { generate };\n", "import esprima from '../../_snowpack/pkg/esprima.js';\nimport { generate } from '../../_snowpack/pkg/astring.js';\n// import { walk, walkAddParent } from \"esprima-walk\";\n\nfunction foldImports(state) {\n  const anotherComp = l => l.includes(\"return kicadToObj(\");\n\n  const doc = state.codemirror.view.state.doc;\n  const lines = doc.toString().split(\"\\n\");\n  let i = 0;\n  let count = 0;\n  while (true) {\n    const line = lines[i];\n    if (!line) break;\n    count += line.length;\n    if (i > lines.length) break;\n    if (lines[i] === \"`)})()\" && !anotherComp(lines[i+1])) break;\n    i++;\n  };\n\n  state.codemirror.foldRange(0, count+i);\n}\n\nfunction walk( ast, fn ) {\n\tvar stack = [ ast ], i, j, key, len, node, child, subchild\n\tfor ( i = 0; i < stack.length; i += 1 ) {\n\t\tnode = stack[ i ]\n    if (typeof node == 'number')\n      continue\n\t\tfn( node )\n\t\tfor ( key in node ) {\n\t\t\tif ( key !== 'parent' ) {\n\t\t\t\tchild = node[ key ]\n\t\t\t\tif ( child instanceof Array ) {\n\t\t\t\t\tfor ( j = 0, len = child.length; j < len; j += 1 ) {\n\t\t\t\t\t\tsubchild = child[ j ]\n\t\t\t\t\t\tif( subchild instanceof Object ) {\n\t\t\t\t\t\t\tsubchild.parent = node\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstack.push( subchild )\n\t\t\t\t\t}\n\t\t\t\t} else if ( child != void 0 && typeof child.type === 'string' ) {\n\t\t\t\t\tchild.parent = node\n\t\t\t\t\tstack.push( child )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function addTranslateHandle(state, svgListener) {\n  const svg = document.querySelector(\"svg\");\n\n  let clicked = false;\n  let clickedPoint;\n  let lastX = 0;\n  let lastY = 0;\n  let index;\n\n  svgListener(\"mousedown\", \".translate-handle-trigger\", e => {\n    clicked = true;\n    state.transforming = true;\n    lastX = 0;\n    lastY = 0;\n\n    const svgPoint = svg.panZoomParams.svgPoint;\n    clickedPoint = svgPoint({x: e.offsetX, y: e.offsetY})\n\n    index = e.target.dataset.index;\n\n    const string = state.codemirror.view.state.doc.toString();\n    const stringToParse = `()=>{${string}}`; // remember to subtract 5 from indices\n    const esprimaAST = esprima.parseScript(stringToParse, { range: true, comment: true });\n    const mainBody = esprimaAST.body[0].expression.body.body;\n\n    let adds = [];\n    walk(esprimaAST, node => {\n      try {\n          if (node.callee.type === \"MemberExpression\" && node.callee.property.name === \"add\") adds.push(node.arguments[1]);\n      } catch (err) { }\n    })\n    // sort by first range\n    const sortedAdds = adds.sort((a, b) => a.range[0] - b.range[0])\n    const sigFigs = num => num.includes(\".\")\n      ? num.split(\".\")[1].length\n      : num.length;\n\n    const step = (num, stepSize) => Math.round(num/stepSize)*stepSize;\n    const round = (num, sigFigs) => Math.round(num*10**sigFigs)/(10**sigFigs);\n    const isDigit = (ch) => /[0-9]/i.test(ch) || ch === \".\";\n\n    // const comp = state.storedPCB.components[index];\n\n    state.transformUpdate = (x, y) => {\n\n      const changes = [];\n\n      sortedAdds[index].properties.forEach( prop => {\n        if (prop.key.name !== \"translate\") return;\n\n        const [ xNode, yNode ] = prop.value.elements;\n\n        let offs = 5;\n\n        let is_sum = false;\n        let is_neg = false;\n        let changed = false;\n\n        let change_x_or_y = function(n, delta) {\n          if (changed) return;\n\n          if (n.type === \"Literal\" && typeof n.value === \"number\") {\n\n            let n_from = n.range[0] - offs;\n\n            if (n.parent.operator === \"/\") {\n              return;\n            }\n\n            if (n.parent.operator === \"-\") {\n              is_neg = true;\n            }\n\n            if (n.parent.type === \"BinaryExpression\" && (n.parent.operator === \"+\" || n.parent.operator === \"-\") && n.parent.right == n) {\n              is_sum = true;\n              n_from = n.parent.left.range[1] - offs;\n            }\n\n            if (n.parent.type === \"UnaryExpression\" && n.parent.operator === \"-\") {\n              n_from = n.parent.range[0] - offs;\n            }\n\n            console.log(n.range, n.parent.range);\n\n            if (!n.ogValue) n.ogValue = n.value;\n            if (!n.ogRaw) n.ogRaw = n.raw;\n\n            let newNum;\n            if (is_neg) {\n              newNum = -n.ogValue + delta;\n            } else {\n              newNum = n.ogValue + delta;\n            }\n\n            let n_val = state.gridSize === 0 ? round(newNum, sigFigs(n.ogRaw)) : round(step(newNum, state.gridSize), 8);\n\n            let is_neg_new = n_val < 0;\n\n            let n_insert;\n            if (is_neg_new) {\n              n_insert = `-${Math.abs(n_val)}`\n            } else if (is_sum) {\n              n_insert = `+${n_val}`\n            } else {\n              n_insert = `${n_val}`\n            }\n\n            changes.push({\n              from: n_from,\n              to: n.range[1] - offs,\n              insert: n_insert\n            });\n\n            changed = true;\n          }\n        }\n\n        walk(xNode, n => change_x_or_y(n, x));\n\n        is_sum = false;\n        is_neg = false;\n        changed = false;\n\n        walk(yNode, n => change_x_or_y(n, y));\n\n        const currentString = state.codemirror.view.state.doc.toString();\n\n        state.codemirror.view.dispatch({\n          changes: { from: 0, to: currentString.length, insert: string }\n        });\n\n        state.codemirror.view.dispatch({ changes });\n      })\n\n      foldImports(state);\n\n    }\n\n    // pauseEvent(e);\n  })\n\n  svgListener(\"mousemove\", \"\", e => {\n    if (!clicked) return;\n\n    const svgPoint = svg.panZoomParams.svgPoint;\n    const currentPoint = svgPoint({x: e.offsetX, y: e.offsetY})\n    const x = currentPoint.x - clickedPoint.x;\n    const y = currentPoint.y - clickedPoint.y;\n    // dispatch(\"TRANSLATE\", { x: x - lastX, y: y - lastY, index });\n    dispatch(\"TRANSLATE\", { x, y, index });\n    lastX = x;\n    lastY = y;\n    // pauseEvent(e);\n  })\n\n  svgListener(\"mouseup\", \"\", e => {\n    clicked = false;\n    state.transforming = false;\n  })\n\n  svgListener(\"mouseleave\", \"\", e => {\n    clicked = false;\n    state.transforming = false;\n  })\n}\n", "export function addVerticalBarDrag(state, listenBody) {\n\tlet moveVerticalBar = false;\n\n\tlistenBody(\"mousedown\", \"#vertical-bar\", e => {\n\t\tmoveVerticalBar = true;\n\t})\n\n\tlistenBody(\"mousemove\", \"\", (e) => {\n\t\tif (!moveVerticalBar) return;\n\n\t\tlet x = e.clientX/window.innerWidth * 100;\n\t\tif (x === 0) return;\n\n\t\tconst minX = 1;\n\t\tconst maxX = 99;\n\n\t\tif (x < minX) x = minX;\n\t\tif (x > maxX) x = maxX;\n\n\t\tdocument.documentElement.style.setProperty(\"--vertical-bar\", `${x}%`);\n\n\t\tpauseEvent(e);\n\t})\n\n\tlistenBody(\"mouseup\", \"\", e => {\n\t\tmoveVerticalBar = false;\n\t})\n}", "export function addImgPanZoom(state, listen) {\n  let mousedown = false;\n\n  let scale = 1;\n  let pointX = 0;\n  let pointY = 0;\n  let start = { x: 0, y: 0 };\n\n  function setTransform(el) {\n    el.style.transformOrigin = `${0}px ${0}px`;\n    el.style.transform = \"translate(\" + pointX + \"px, \" + pointY + \"px) scale(\" + scale + \")\";\n    if (state.gridSize > 0) dispatch(\"RENDER\");\n  }\n\n  function svgPoint({ x, y }) {\n  \t  let newX = (x - pointX) / scale;\n    \tlet newY = (y - pointY) / scale;\n\n    \treturn { x: newX, y: newY };\n  }\n\n  listen(\"mousedown\", \"\", (e) => {\n    if (e.shiftKey) return;\n\n    mousedown = true;\n\n    start = { x: e.offsetX - pointX, y: e.offsetY - pointY };\n\n    if (e.detail === 2) {\n    \tconsole.log(e.offsetX, e.offsetY, svgPoint({x: e.offsetX, y: e.offsetY}));\n    }\n  })\n\n  listen(\"mousemove\", \"\", (e) => {\n    if (!mousedown) return;\n    if (state.transforming) return;\n\n    pointX = (e.offsetX - start.x);\n    pointY = (e.offsetY - start.y);\n\n    const imgs = document.querySelectorAll(\".transform-group\");\n\n    for (const img of imgs) {\n      setTransform(img);\n    }\n\n  })\n\n  listen(\"mouseup\", \"\", (evt) => {\n    mousedown = false;\n  })\n\n  listen(\"wheel\", \"\", (e) => {\n    \n    let xs = (e.offsetX - pointX) / scale;\n    let ys = (e.offsetY - pointY) / scale;\n\n    if (Math.sign(e.deltaY) < 0) scale *= 1.03;\n    else scale /= 1.03;\n\n    pointX = e.offsetX - xs * scale;\n    pointY = e.offsetY - ys * scale;\n\n    const imgs = document.querySelectorAll(\".transform-group\");\n    for (const img of imgs) {\n      setTransform(img);\n    }\n\n    e.preventDefault();\n  })\n\n  function setScaleXY(limits) {\n    console.log(\"set scale x y\")\n    const svg = document.querySelector(\"svg\");\n    const bb = svg.getBoundingClientRect();\n    const xr = limits.x[1] - limits.x[0];\n    const yr = limits.y[1] - limits.y[0];\n    const xScalingFactor = bb.width/xr;\n    const yScalingFactor = bb.height/yr;\n\n    const scalingFactor = Math.min(xScalingFactor, yScalingFactor) * 0.9;\n\n    scale = scalingFactor;\n\n    const center = { \n      x: (limits.x[0] + limits.x[1])/2 * scalingFactor - bb.width/2,\n      y: (limits.y[0] + limits.y[1])/2 * scalingFactor - bb.height/2\n    }\n\n    pointX = -center.x;\n    pointY = -center.y;\n\n    const imgs = document.querySelectorAll(\".transform-group\");\n    for (const img of imgs) {\n      setTransform(img);\n    }\n  }\n\n  function corners() {\n    const svg = document.querySelector(\"svg\"); // what if there were other svgs?\n    if (svg === null) return null;\n    const { left, right, bottom, top, width, height} = svg.getBoundingClientRect();\n    // need rt, lt, rb, lb\n    const rt = svgPoint({ x: width, y: height });\n    // rt.y = -rt.y\n    const lt = svgPoint({ x: 0, y: height });\n    // lt.y = -lt.y\n    const rb = svgPoint({ x: width, y: 0 });\n    // rb.y = -rb.y\n    const lb = svgPoint({ x: 0, y: 0 });\n    // lb.y = -lb.y\n\n    return { rt, lt, rb, lb }\n  }\n\n  return { \n  \tscale: () => scale,\n  \tx: () => pointX,\n  \ty: () => pointY,\n    corners,\n    svgPoint,\n    setScaleXY\n  }\n}", "let count = 0;\nfunction readFileUploadComp(file) {\n  var reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onloadend = event => {\n    let text = reader.result;\n    dispatch(\"UPLOAD_COMP\", {text, name: `component${count}`});\n    count++;\n  };\n}\n\nfunction readFileJS(file) {\n  var reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onloadend = event => {\n    let text = reader.result;\n    dispatch(\"UPLOAD_JS\", { text });\n  };\n}\n\nfunction upload(files, extensions = []) {\n  let file = files[0];\n  let fileName = file.name.split(\".\");\n  let name = fileName[0];\n  const extension = fileName[fileName.length - 1];\n\n  // if (extensions.length > 0 && !extensions.includes(extension)) throw \"Extension not recongized: \" + fileName;\n  \n  // TODO: if js then drop and run\n  // TODO: if kicad mod readFile as is\n  if (extension === \"kicad_mod\") {\n    readFileUploadComp(file);\n  } else if (extension === \"js\") {\n    readFileJS(file);\n  } else {\n    throw Error(\"Unknown extension:\", extension);\n  }\n\n};\n\nexport function addDropUpload(state, bodyListener) {\n  bodyListener(\"drop\", \"\", function(evt) {    \n    let dt = evt.dataTransfer;\n    let files = dt.files;\n\n    upload(files);\n\n    pauseEvent(evt);\n  });\n\n  bodyListener(\"dragover\", \"\", function(evt) {    \n    pauseEvent(evt);\n  });\n}", "export function addSelectBox(state, svgListener) {\n  let start = null;\n  let end = null;\n  const svg = document.querySelector(\"svg\");\n\n  svgListener(\"mousedown\", \"\", e => {\n    if (!e.shiftKey) return;\n\n    start = svg.panZoomParams.svgPoint({x: e.offsetX, y: e.offsetY});\n  })\n\n  svgListener(\"mousemove\", \"\", e => {\n  \tdocument.body.classList.add(\"no-select\");\n    if (!e.shiftKey) return;\n    if (start === null) return;\n\n    end = svg.panZoomParams.svgPoint({x: e.offsetX, y: e.offsetY});\n\n    state.selectBox.start = start;\n    state.selectBox.end = end;\n    dispatch(\"RENDER\");\n  })\n\n  function contains (p, selectBox) {\n    // console.log(p, selectBox);\n    let { start, end } = selectBox;\n    return (\n      (p.x > start.x && p.x < end.x && p.y > start.y && p.y < end.y) ||\n      (p.x > start.x && p.x < end.x && p.y < start.y && p.y > end.y) ||\n      (p.x < start.x && p.x > end.x && p.y > start.y && p.y < end.y) ||\n      (p.x < start.x && p.x > end.x && p.y < start.y && p.y > end.y)\n    );\n  };\n\n  svgListener(\"mouseup\", \"\", e => {\n    if (!e.shiftKey) return;\n  \tdocument.body.classList.remove(\"no-select\");\n    if (start && end) {\n      // select\n    }\n    \n    start = null;\n    end = null;\n    state.selectBox.start = start;\n    state.selectBox.end = end;\n    dispatch(\"RENDER\");\n  })\n}", "const isDigit = ch => /[0-9]/i.test(ch) || ch === \".\";\n\nexport function addNumberDragging(state, bodyListener) {\n  let dragged = false;\n  let num, pos_start, pos_end, sigFigs, usePrecision, selectedText;\n\n  let pos_sign = null;\n  let is_sum = false;\n  let is_neg = false;\n\n  bodyListener(\"mousedown\", \".ͼb\", e => {\n    const cm = document.querySelector(\"code-mirror\");\n\n    const s = cm.view.state;\n    const doc = s.doc;\n    const pos = s.selection.main.head;\n    const at = doc.lineAt(pos);\n\n    let { from, to, text} = doc.lineAt(pos)\n    let start = pos, end = pos;\n    // console.log(\"start\", start, text[start - from - 1], \"end\", end, text[end - from]);\n    while (start > from && isDigit(text[start - from - 1], true)) start--\n    while (end < to && isDigit(text[end - from])) end++\n\n    let ch;\n    if (start > from) {\n        let start_sign = start;\n        while (start_sign > from) {\n            start_sign--;\n            ch = text[start_sign - from];\n            if (ch === \" \") {\n                continue;\n            } else if (ch === \"+\") {\n                pos_sign = start_sign;\n            } else if (ch === \"-\") {\n                pos_sign = start_sign;\n                is_neg = true;\n            } else if ([\"(\", \"[\", \",\", \"/\", \"*\", \";\", \"{\", \"=\", \":\"].includes(ch)) {\n                break;\n            } else {\n                is_sum = true;\n                break;\n            }\n        }\n    }\n\n    console.log(is_sum, is_neg, pos_sign);\n\n    selectedText = text.slice(start-from, end-from);\n\n    num = Number(selectedText);\n\n    if (is_neg) {\n        num = -num;\n    }\n    dragged = true;\n    pos_start = start;\n    pos_end = end;\n    usePrecision = selectedText.includes(\".\");\n    sigFigs = selectedText.includes(\".\") ? selectedText.split(\".\")[1].length : 1;\n  })\n\n  bodyListener(\"mousemove\", \"\", e => {\n    if (!dragged) return;\n    const cm = document.querySelector(\"code-mirror\");\n\n\t\tconst sign = 0 > e.movementX ? 1 : -1;\n\t\t// console.log(sign, e.movementX);\n\t\tif (usePrecision) {\n\t\t\tlet rounded = Math.round(num*10**sigFigs);\n\t\t\tlet newNum = rounded + e.movementX;\n\t\t\tnewNum = Math.round(newNum)/(10**sigFigs);\n\n\t\t\tnum = newNum;\n\t\t} else {\n\t\t\tnum += e.movementX;\n\t\t}\n\n        let newValue;\n\n        if (is_sum) {\n            if (pos_sign == null) {\n                newValue = `${num < 0 ? \"-\" : \"+\"}${Math.abs(num)}`;\n            } else {\n                newValue = `${Math.abs(num)}`;\n            }\n            cm.view.dispatch({\n                changes: {from: pos_start, to: pos_start + selectedText.length, insert: newValue}\n            });\n            if (pos_sign != null) {\n                cm.view.dispatch({\n                    changes: {from: pos_sign, to: pos_sign+1, insert: num < 0 ? \"-\" : \"+\"}\n                });\n            }\n        } else {\n            newValue = `${num < 0 ? \"-\" : \"\"}${Math.abs(num)}`;\n            if (pos_sign == null) {\n                cm.view.dispatch({\n                    changes: {from: pos_start, to: pos_start + selectedText.length, insert: newValue}\n                });\n            } else {\n                pos_start = pos_sign;\n                cm.view.dispatch({\n                    changes: {from: pos_sign, to: pos_start + selectedText.length, insert: newValue}\n                });\n            }\n        }\n\n        // if (pos_)\n        // cm.view.dispatch({\n        //     changes: {from: pos_start, to: pos_start + selectedText.length, insert: newValue}\n        // });\n\n\t\tselectedText = newValue;\n\n\t\tdispatch(\"RUN\");\n\t\tpauseEvent(e);\n  })\n\n  bodyListener(\"mouseup\", \"\", e => {\n    dragged = false;\n    pos_sign = null;\n    is_sum = false;\n    is_neg = false;\n  })\n}\n", "import { addTranslateHandle } from \"./events/addTranslateHandle.js\";\nimport { addVerticalBarDrag } from \"./events/addVerticalBarDrag.js\";\nimport { addImgPanZoom } from \"./events/addImgPanZoom.js\";\nimport { addDropUpload } from \"./events/addDropUpload.js\";\nimport { addSelectBox } from \"./events/addSelectBox.js\";\nimport { addNumberDragging } from \"./events/addNumberDragging.js\";\n// import { download } from \"./events/download.js\"\n\nfunction pauseEvent(e) {\n    if(e.stopPropagation) e.stopPropagation();\n    if(e.preventDefault) e.preventDefault();\n    e.cancelBubble=true;\n    e.returnValue=false;\n    return false;\n}\n\nwindow.pauseEvent = pauseEvent;\n\nconst trigger = e => e.composedPath()[0];\nconst matchesTrigger = (e, selectorString) => trigger(e).matches(selectorString);\n// create on listener\nconst createListener = (target) => (eventName, selectorString, event) => { // focus doesn't work with this, focus doesn't bubble, need focusin\n\ttarget.addEventListener(eventName, (e) => {\n\t\te.trigger = trigger(e); // Do I need this? e.target seems to work in many (all?) cases\n\t\tif (selectorString === \"\" || matchesTrigger(e, selectorString)) event(e);\n\t})\n}\n\nexport function addEvents(state) {\n\tconst svg = document.querySelector(\"svg\");\n\tconst listenSVG = createListener(svg);\n  \n\tsvg.panZoomParams = addImgPanZoom(state, listenSVG);\n  \tstate.panZoomParams = svg.panZoomParams;\n\n\taddSelectBox(state, listenSVG);\n  \taddTranslateHandle(state, listenSVG);\n\n\tconst body = document.querySelector(\"body\");\n\tconst listenBody = createListener(body);\n\taddDropUpload(state, listenBody);\n\taddNumberDragging(state, listenBody);\n\taddVerticalBarDrag(state, listenBody);\n\n\tlistenBody(\"keydown\", \"\", (e) => {\n\t\tlet code = event.code;\n\t\tif (code === \"Enter\" && event.shiftKey) {\n\t\t  event.preventDefault();\n\t\t  dispatch(\"RUN\", { save: true });\n\t\t} else if (code === \"KeyT\" && event.shiftKey) { // test something\n      \n    \t}\n\t})\n\n  // listenBody(\"mousedown\", \".download-button\", () => download(state));\n\n  // listenBody(\"click\", \".center-button\", () => {\n  //   const svg = document.querySelector(\"svg\");\n  //   svg.panZoomParams.setScaleXY(state.limits);\n  // })\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { Turtle } from \"https://leomcelroy.com/gram-js/exports.js\";\n\nfunction circle(radius) {\n  return new Turtle()\n    .arc(360, radius)\n    .originate()\n}\n\nfunction rectangle(width, height) { \n\treturn new Turtle() \n\t  .forward(width)\n\t  .right(90)\n\t  .forward(height)\n\t  .right(90)\n\t  .repeat(1)\n\t  .originate()\n}\n\nTurtle.prototype.circle = circle;\nTurtle.prototype.rectangle = rectangle;\n\nexport { Turtle }", "import { Turtle } from \"./Turtle.js\";\n\nconst length = ([x1, y1], [x2, y2]) => Math.sqrt((x2-x1)**2 + (y2-y1)**2);\nconst overlap = (p1, p2) => length(p1, p2) < 0.000001;\n\nconst via = (rv, rp) => {\n  return {\n    \"F\": {\n      \"pos\": [0, 0],\n      \"shape\": new Turtle().circle(rp).getPathData(),\n      \"layers\": [\"F.Cu\"],\n      \"index\": 1\n    },\n    \"B\": {\n      \"pos\": [0, 0],\n      \"shape\": new Turtle().circle(rp).getPathData(),\n      \"layers\": [\"B.Cu\"],\n      \"index\": 2\n    },\n    \"drill\": {\n      \"pos\": [0, 0],\n      \"shape\": new Turtle().circle(rv).getPathData(),\n      \"layers\": [\"drill\"]\n    }\n  };\n}\n\nconst wire = (pts, thickness) => {\n  let lastPt = pts[0];\n  let result = new Turtle();\n  result.booleanScale = 2000;\n  result.goto(lastPt, false);\n  for (const pt of pts.slice(1)) {\n    if (overlap(pt, lastPt)) continue;\n    result.goto(pt);\n    lastPt = pt;\n  }\n\n  return result.offset(thickness/2);\n}\n\nconst vector_add = ([x, y], [dx, dy]) => [x + dx, y + dy];\nconst dot = ([x0, y0], [x1, y1]) => x0*x1 + y0*y1;\nconst vector_rotate = ([x, y], angle) => [\n  x*Math.cos(angle) - y * Math.sin(angle),\n  y*Math.cos(angle) + x * Math.sin(angle)\n]\n\n\nclass Component {\n  constructor({ pads, layers }) {\n    this.pads = pads;\n    this.layers = layers;\n  }\n\n  pad(name) {\n    return this.pads[name];\n  }\n\n  padX(name) {\n    return this.pads[name][0];\n  }\n\n  padY(name) {\n    return this.pads[name][1];\n  }\n\n  get pos() {\n    return this.pads[\"center\"]; // should store this somewhere else\n  }\n\n  get posX() {\n    return this.pads[\"center\"][0]; // should store this somewhere else\n  }\n\n  get posY() {\n    return this.pads[\"center\"][1]; // should store this somewhere else\n  }\n}\n\n// let SWD_4_05 = {\n//   \"RST\": {\n//     \"pos\": [-0.072, -0.025],\n//     \"shape\": \"M 0 0 L 90 90\",\n//     \"layers\": [\"F.Cu\"]\n//   },\n//   \"GND\": {\n//     \"pos\": [0.072, -0.025],\n//     \"shape\": \"M 0 0 L 90 90\",\n//     \"layers\": [\"F.Cu\"]\n//   }\n// }\n\nfunction makeText(text, height, pos, rotate) {\n  let lines = text.split('\\n');\n  let t = new Turtle();\n\n  for (let [i, txt] of lines.entries()) {\n    if (txt.length == 0) {\n      continue;\n    }\n    let t2 = new Turtle().text(txt).scale(0.01*height).originate().translate([0, i*height*1.5]);\n    t.group(t2);\n  }\n\n  // return t.originate().translate(pos);\n  return t.originate().translate(pos).rotate(rotate, pos);\n}\n\nfunction makeComponent(comp, options = {}) {\n  let translate = options.translate || [0, 0];\n  let rotate = options.rotate || 0;\n  let padLabelSize = options.padLabelSize || 0.02;\n  // add flip\n\n  const [xOff, yOff] = translate;\n  const rad = (rotate * Math.PI) / 180;\n\n  const pads = {}; // name: pos\n  const padsLabels = [];\n  let results = {};\n\n  for (const pad in comp) {\n    let { pos, shape, layers } = comp[pad];\n\n    shape = typeof shape === \"string\" ? new Turtle().bezier(shape) : shape.copy();\n\n    let pad_pos = vector_add(vector_rotate(pos, rad), translate);\n    pads[pad] = pad_pos;\n\n    shape.translate(pad_pos).rotate(rotate, pad_pos);\n\n    if (!pad.includes(\"drill\")) {\n      let text = makeText(pad, padLabelSize, pad_pos, rotate);\n      padsLabels.push( text );\n    }\n\n    layers.forEach(l => {\n      if (l in results) results[l] = results[l].group(shape);\n      else results[l] = shape;\n    })\n  }\n\n  pads[\"center\"] = translate;\n\n  results.padLabels = padsLabels.reduce( (acc, cur) => acc.group(cur), new Turtle());\n\n  return new Component({\n    pads,\n    layers: results\n  })\n}\n\nexport {\n  wire,\n  makeText,\n  makeComponent,\n  via\n}\n", "import { makeComponent, makeText, wire } from \"./pcb_helpers.js\";\nimport { Turtle } from \"./Turtle.js\";\n\nexport class PCB {\n  constructor() {\n    this.layers = {}; // maybe should just store shapes, get layer contents on demand\n    this.components = [];\n  }\n\n  add(footprint, ops = {}) {\n    // ops = { translate, rotate, padLabelSize, componentLabelSize, value? }\n    const name = ops.name || \"\";\n    const transform = {\n      translate: ops.translate || [0, 0],\n      rotate: ops.rotate || 0,\n      padLabelSize: ops.padLabelSize || 0.03,\n      componentLabelSize: ops.componentLabelSize || 0.04,\n    };\n\n    const newComp = makeComponent(footprint, transform);\n\n    for ( const layer in newComp.layers) {\n      this.addShape(layer, newComp.layers[layer]);\n    }\n\n    if (name !== \"\" && !name.includes(\"drill\")) {\n      let componentLabels = makeText(name, transform.componentLabelSize, transform.translate, 0);\n\n      this.addShape(\"componentLabels\", componentLabels);\n    }\n\n    this.components.push(newComp);\n\n    return newComp;\n  }\n\n  addShape(layer, shape) {\n    if (!(shape instanceof Turtle)) return console.error(\"Shape isn't Turtle.\");\n\n    if (layer in this.layers) {\n      this.layers[layer] = this.layers[layer].group(shape);\n    } else {\n      this.layers[layer] = shape;\n    }\n\n    return this.layers[layer];\n  }\n\n  subtractShape(layer, shape) {\n    if (!(shape instanceof Turtle)) return console.error(\"Shape isn't Turtle.\");\n\n    if (layer in this.layers) {\n      this.layers[layer] = this.layers[layer].difference(shape);\n    } else {\n      this.layers[layer] = new Turtle();\n    }\n\n    return this.layers[layer];\n  }\n\n  getLayer(layer, flatten = false) {\n    const paths = layer.includes(\"Labels\");\n    // flatten = false; // !layer.includes(\"Labels\");\n    flatten = !layer.includes(\"Labels\");\n\n    return this.layers[layer]\n      ? flatten\n        ? this.layers[layer].flatten().getPathData(paths)\n        : this.layers[layer].getPathData(paths)\n      : \"\";\n  }\n\n  wire(pts, thickness, layer = \"F.Cu\") {\n    this.addShape(layer, wire(pts, thickness));\n  }\n}\n", "// https://github.com/fwg/s-expression\n\nfunction SParser(stream) {\n    this._line = this._col = this._pos = 0;\n    this._stream = stream;\n}\n\nSParser.not_whitespace_or_end = /^(\\S|$)/;\nSParser.space_quote_paren_escaped_or_end = /^(\\s|\\\\|\"|'|`|,|\\(|\\)|$)/;\nSParser.string_or_escaped_or_end = /^(\\\\|\"|$)/;\nSParser.string_delimiters = /[\"]/;\nSParser.quotes = /['`,]/;\nSParser.quotes_map = {\n    '\\'': 'quote',\n    '`':  'quasiquote',\n    ',':  'unquote'\n};\n\nSParser.prototype = {\n    peek: peek,\n    consume: consume,\n    until: until,\n    error: error,\n    string: string,\n    atom: atom,\n    quoted: quoted,\n    expr: expr,\n    list: list\n};\n\nexport function sParse(stream) {\n    var parser = new SParser(stream);\n    var expression = parser.expr();\n\n    if (expression instanceof Error) {\n        return expression;\n    }\n\n    // if anything is left to parse, it's a syntax error\n    if (parser.peek() != '') {\n        return parser.error('Superfluous characters after expression: `' + parser.peek() + '`');\n    }\n\n    return expression;\n};\n\nfunction error(msg) {\n    var e = new Error('Syntax error: ' + msg);\n    e.line = this._line + 1;\n    e.col  = this._col + 1;\n    return e;\n}\n\nfunction peek() {\n    if (this._stream.length == this._pos) return '';\n    return this._stream[this._pos];\n}\n\nfunction consume() {\n    if (this._stream.length == this._pos) return '';\n\n    var c = this._stream[this._pos];\n    this._pos += 1;\n\n    if (c == '\\r') {\n        if (this.peek() == '\\n') {\n            this._pos += 1;\n            c += '\\n';\n        }\n        this._line++;\n        this._col = 0;\n    } else if (c == '\\n') {\n        this._line++;\n        this._col = 0;\n    } else {\n        this._col++;\n    }\n\n    return c;\n}\n\nfunction until(regex) {\n    var s = '';\n\n    while (!regex.test(this.peek())) {\n        s += this.consume();\n    }\n\n    return s;\n}\n\nfunction string() {\n    // consume \"\n    var delimiter = this.consume();\n\n    var str = '';\n\n    while (true) {\n        str += this.until(SParser.string_or_escaped_or_end);\n        var next = this.peek();\n\n        if (next == '') {\n            return this.error('Unterminated string literal');\n        }\n\n        if (next == delimiter) {\n            this.consume();\n            break;\n        }\n\n        if (next == '\\\\') {\n            this.consume();\n            next = this.peek();\n\n            if (next == 'r') {\n                this.consume();\n                str += '\\r';\n            } else if (next == 't') {\n                this.consume();\n                str += '\\t';\n            } else if (next == 'n') {\n                this.consume();\n                str += '\\n';\n            } else if (next == 'f') {\n                this.consume();\n                str += '\\f';\n            } else if (next == 'b') {\n                this.consume();\n                str += '\\b';\n            } else {\n                str += this.consume();\n            }\n\n            continue;\n        }\n\n        str += this.consume();\n    }\n\n    // wrap in object to make strings distinct from symbols\n    return new String(str);\n}\n\nfunction atom() {\n    if (SParser.string_delimiters.test(this.peek())) {\n        return this.string();\n    }\n\n    var atom = '';\n\n    while (true) {\n        atom += this.until(SParser.space_quote_paren_escaped_or_end);\n        var next = this.peek();\n\n        if (next == '\\\\') {\n            this.consume();\n            atom += this.consume();\n            continue;\n        }\n\n        break;\n    }\n\n    return atom;\n}\n\nfunction quoted() {\n    var q = this.consume();\n    var quote = SParser.quotes_map[q];\n\n    if (quote == \"unquote\" && this.peek() == \"@\") {\n        this.consume();\n        quote = \"unquote-splicing\";\n        q = ',@';\n    }\n\n    // ignore whitespace\n    this.until(SParser.not_whitespace_or_end);\n    var quotedExpr = this.expr();\n\n    if (quotedExpr instanceof Error) {\n        return quotedExpr;\n    }\n\n    // nothing came after '\n    if (quotedExpr === '') {\n        return this.error('Unexpected `' + this.peek() + '` after `' + q + '`');\n    }\n\n    return [quote, quotedExpr];\n}\n\nfunction expr() {\n    // ignore whitespace\n    this.until(SParser.not_whitespace_or_end);\n\n    if (SParser.quotes.test(this.peek())) {\n        return this.quoted();\n    }\n\n    var expr = this.peek() == '(' ? this.list() : this.atom();\n\n    // ignore whitespace\n    this.until(SParser.not_whitespace_or_end);\n\n    return expr;\n}\n\nfunction list() {\n    if (this.peek() != '(') {\n        return this.error('Expected `(` - saw `' + this.peek() + '` instead.');\n    }\n\n    this.consume();\n\n    var ls = [];\n    var v = this.expr();\n\n    if (v instanceof Error) {\n        return v;\n    }\n\n    if (v !== '') {\n        ls.push(v);\n\n        while ((v = this.expr()) !== '') {\n            if (v instanceof Error) return v;\n            ls.push(v);\n        }\n    }\n\n    if (this.peek() != ')') {\n        return this.error('Expected `)` - saw: `' + this.peek() + '`');\n    }\n\n    // consume that closing paren\n    this.consume();\n\n    return ls;\n}", "import { sParse } from \"./s-expression-parser.js\";\nimport { Turtle } from \"./Turtle.js\";\n\n// parser should take units\n\nconst convertLayers = (layers) => layers.reduce((acc, cur) => {\n  let l = cur.split(\".\");\n  if (l.length === 0) return acc;\n  else if (l[0] !== \"*\") return [...acc, cur];\n  else return [...acc, `F.${l[1]}`, `B.${l[1]}`];\n}, [])\n\nexport function kicadToObj(data) {\n  let r = sParse(data);\n\n  let scale = 1/25.4;\n  const padsToAdd = {};\n\n  for (const line of r) {\n    const isPad = line[0] === \"pad\";\n    const isSmd = line[2] === \"smd\";\n    const isThru = line[2] === \"thru_hole\";\n    const shape = line[3];\n\n    if (isPad && (isSmd || isThru)) {\n      let name = line[1];\n\n      let at = line[4].slice(1).map(x => Number(x)*scale);\n      at[1] = -at[1]; // negative Y axis\n\n      let layers = line[line.length - 1];\n      layers = layers ? layers.slice(1) : [];\n      layers = convertLayers(layers);\n\n  \n      let size = line[5].slice(1).map(x => Number(x)*scale);\n\n      let shapeTurtle = shape === \"rect\"\n        ? new Turtle().rectangle(...size)\n        : new Turtle().circle(size[0]);\n     \n      if (padsToAdd[name] === undefined) padsToAdd[name] = [{ pos: at, shape: shapeTurtle, layers }];\n      else padsToAdd[name].push({ pos: at, shape: shapeTurtle, layers });\n\n      const drill = line[line.length - 2] ? line[line.length - 2][0] === \"drill\" : false;\n\n      if (drill) {\n        let drillDia = Number(line[line.length - 2][1])/25.4;\n        let l = { \n          pos: at, \n          shape: new Turtle().circle(drillDia),\n          layers: [\"drill\"]\n        }\n\n        if (padsToAdd[`${name}_drill`] === undefined) padsToAdd[`${name}_drill`] = [l];\n        else  padsToAdd[`${name}_drill`].push(l);\n      }\n    }\n  }\n\n  let result = Object.entries(padsToAdd).reduce((acc, cur) => {\n    const [key, value] = cur;\n\n    if (value.length === 1) {\n      acc[key] = value[0];\n    } else {\n      value.forEach((v, i) => {\n        acc[`${key}_${i + 1}`] = v;\n      })\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n}\n\n\n\n\n", "import { view } from \"./view.js\";\nimport { render } from \"../_snowpack/pkg/lit-html.js\";\n\nimport { addEvents } from \"./events.js\";\n\nimport { PCB as real_PCB } from \"./pcb.js\";\nimport { via } from \"./pcb_helpers.js\";\nimport { kicadToObj } from \"./ki_cad_parser.js\"\nimport { Turtle } from \"./Turtle.js\";\n\n\nconst STATE = {\n\tcodemirror: undefined,\n\tstoredPCB: undefined,\n\ttransforming: false,\n\ttransformUpdate: () => {},\n\tselectBox: {},\n\tshapes: [],\n\tlimits: {\n\t\tx: [0, 1],\n\t\ty: [0, 1]\n\t},\n\tmm_per_unit: 25.4,\n\tgrid: true,\n\tgridSize: 0.05,\n\tviewHandles: true,\n\tpanZoomParams: undefined,\n}\n\nclass PCB extends real_PCB {\n\tconstructor() {\n\t\tsuper();\n\t\tSTATE.storedPCB = this;\n\t}\n}\n\nconst included = {\n\tkicadToObj,\n\tPCB,\n\tvia,\n\tTurtle,\n}\n\nasync function urlToCode(file_url, state) {\n\tconst file = await fetch(file_url,  {mode: 'cors'});\n\tconst txt = await file.text();\n\n    state.codemirror.view.dispatch({\n\t  changes: {from: 0, insert: txt}\n\t});\n\n    // fold imports\n\tconst anotherComp = l => l.includes(\"return kicadToObj(\");\n\n\tconst doc = state.codemirror.view.state.doc;\n\tconst lines = doc.toString().split(\"\\n\");\n\tlet i = 0;\n\tlet count = 0;\n\twhile (true) {\n\t\tconst line = lines[i];\n\t\tif (!line) break;\n\t\tcount += line.length;\n\t\tif (i > lines.length) break;\n\t\tif (lines[i] === \"`)})()\" && !anotherComp(lines[i+1])) break;\n\t\ti++;\n\t};\n\n\tstate.codemirror.foldRange(0, count+i);\n\n    dispatch(\"RUN\");\n    document.querySelector(\".center-button\").click();\n}\n\nconst ACTIONS = {\n\tINIT(args, state) {\n\t\tdispatch(\"RENDER\");\n\t\tstate.codemirror = document.querySelector(\"#code-editor\");\n\t\taddEvents(state);\n\n\t\tconst url = new URL(window.location.href);\n\n\t    const search = window.location.search;\n\t    const code = new URLSearchParams(search).get(\"code\");\n\t    const file = new URLSearchParams(search).get(\"file\");\n\t    const handlesOff = new URLSearchParams(search).get(\"handles\") === \"false\";\n\t    const gridOff = new URLSearchParams(search).get(\"grid\") === \"false\";\n\n\t    if (handlesOff) state.viewHandles = false;\n\t    if (gridOff) state.grid = false;\n\n\t    if (code) {\n\n\t    } else if (file) {\n          let file_url = file;\n          if (!file.startsWith(\"http\")) file_url = `examples/${file}`;\n\n          urlToCode(file_url, state);\n\t    } else {\n\t    \tconst saved = window.localStorage.getItem(\"svg-pcb\")\n\t\t    state.codemirror.view.dispatch({\n\t\t\t  changes: {from: 0, insert: saved ?? \"\"}\n\t\t\t});\n\n\t\t\tdispatch(\"RUN\");\n\t\t\tdocument.querySelector(\".center-button\").click();\n\t    }\n\n\t    dispatch(\"RENDER\");\n\t},\n\tRUN({ save = false }, state) {\n\t\tconst string = state.codemirror.view.state.doc.toString();\n\t\t// const result = JSON.parse(string); // if json\n\n\t\tconst f = new Function(...Object.keys(included), string)\n\t\tconst result = f(...Object.values(included));\n\n\t\tlet { shapes, limits, mm_per_unit } = typeof result === \"string\" ? JSON.parse(result) : result;\n\n\t\tstate.shapes = shapes;\n\t\tstate.limits = limits;\n\t\tstate.mm_per_unit = mm_per_unit;\n\n\t\tif (save) {\n\t\t\twindow.localStorage.setItem(\"svg-pcb\", string)\n\t\t}\n\n\t\tdispatch(\"RENDER\");\n\t},\n\tUPLOAD_COMP({ text, name }, state) {\n\t\ttext = text.replaceAll(\"$\", \"\");\n\t\ttext = `const ${name} = (() => { return kicadToObj(\\n\\`${text}\\`)})()\\n`\n\t\tstate.codemirror.view.dispatch({\n\t\t  changes: {from: 0, insert: text}\n\t\t});\n\n\t\tstate.codemirror.foldRange(0, text.length);\n\t\tdispatch(\"RENDER\");\n\t},\n\tUPLOAD_JS({ text }, state) {\n\t\tconst end = state.codemirror.view.state.doc.toString().length;\n\t\tstate.codemirror.view.dispatch({\n\t\t  changes: {from: 0, to: end, insert: text}\n\t\t});\n\n\t\tdispatch(\"RUN\");\n\t\tdocument.querySelector(\".center-button\").click()\n\t},\n\tADD_IMPORT({ text, name }, state) {\n\t\ttext = `const ${name} = ${text}\\n`\n\t\tstate.codemirror.view.dispatch({\n\t\t  changes: {from: 0, insert: text}\n\t\t});\n\n\t\tdispatch(\"RENDER\");\n\t},\n\tTRANSLATE({ x, y, index }, state) {\n\t\tstate.transformUpdate(x, y);\n\t\tdispatch(\"RUN\");\n\t},\n\tRENDER() {\n\t\trender(view(STATE), document.getElementById(\"root\"));\n\t}\n}\n\nexport function dispatch(action, args = {}) {\n\tconst trigger = ACTIONS[action];\n\tif (trigger) trigger(args, STATE);\n\telse console.log(\"Action not recongnized:\", action);\n}\n", "import { dispatch } from \"./dispatch.js\";\n\nwindow.dispatch = dispatch;\n\nwindow.addEventListener(\"load\", () => {\n\tdispatch(\"INIT\");\n});"],
  "mappings": "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",
  "names": []
}
